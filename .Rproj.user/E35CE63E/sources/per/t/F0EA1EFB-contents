---
title: "Analyses of amygdala nuclei and hippocampal subfields in AN patients (including thalamic nuclei)"
author: "Marie-Louis Wronski"
date: "`r Sys.Date()`"
output: 
  bookdown::html_document2:
    code_folding: hide
    toc: yes
    toc_depth: 5
    highlight: tango
    theme: paper
    fig_width: 20
    fig_height: 20
    fig_caption: yes
    number_sections: yes
    keep_md: yes
    df_print: default
---

# Project summary  
This html_document provides an overview over analytic considerations and statistical analyses as part of the amygdala and hippocampal substructure project, which focuses on the cross-sectional comparison of volume measures of amygdala nuclei and hippocampal subfields across acutely underweight patients with anorexia nervosa (acAN-T1) and healthy control participants.  

**Procedure:**  

1. Relevant substructure, brain segmentation and image quality measures of all available subjects were extracted from the current FreeSurfer 7.1 recon-all output (and joined to one combined data.frame).  
2. Relevant data from Redcap were added (joint data.frame "data"), and potential covariates are suggested (based on literature research).  
3. Missing values were checked. Volume and symmetry and image quality outliers were detected for amygdala, hippocampal and thalamic substructures, mainly based on existing ENIGMA guidelines. Outlier visualization via boxplots and scatterplots.  
4. A substructure QC procedure is suggested.  
5. Exploratory data analyses of substructure measures (mainly amygdala with nuclei) + demographic and clinical data, including: (A) distributional analysis via density plots and histograms, (B) analysis of covariates (age, eTIV, whole amygdala volume), (C) age-matching of HC to acAN participants, (D) descriptive statistics, (E) tests for acAN vs. HC group differences: t-tests for demographic and clinical variables, GLM approach for amygdala volumes, (F) correlation analysis in acAN patients (amygdala ~ clinical and symptom characteristics), (G) Raincloud plot visualization of main GLM findings for amygdala and nuclei.  
6. Supplementary analyses, including: (A) auxiliary illustrations (scan quality (SNR and CNR), Q-Q plots, brain segmentation measures), (B) investigation of further factors (e.g. gray matter volume) or confounding variables (e.g. IQ, handedness, smoking, psychiatric comorbidity or medication) of potential relevance and supplementary GLM approaches witg the aim to reproduce main findings.  

*This list will be edited/added, once new analytic steps were implemented.*  


# Library of applied R packages  
(and short summary of their functionality)  

```{r library, results='hide', message=FALSE, warning=FALSE}
#library(devtools) # for development versions on GitHub
library(readr)  # for data import (e.g. read_csv() and .txt)
library(dplyr)  # for data transformation (e.g. mutate(), filter(), group_by(), join())
library(tidyr)  # for data wrangling (e.g. unnest(), gather(), spread())
library(purrr)  # for applying functions and working with lists (e.g. map(), reduce(), transpose())
library(stringr) # for string manipulation (e.g. str_detect(), str_extract(), str_subset(); string pattern - regular expressions)
library(forcats) # for dealing with factors (e.g. reordering)
library(ggplot2) # for data visualization (plotting)
#library(ggforce) # extends functionality of ggplot2 (e.g. spreads boxplot facets (facet_wrap) over multiple pages)
library(cowplot) # extends functionality of ggplot2 (e.g. create raincloud plots)
#library(PupillometryR) # for raincloud (flat violin) plots
library(ggsci) # alternative color tool/palettes for plotting (scientific journal style)
library(ggpubr) # extends functionality of ggplot2 (e.g. editing options for publication)
library(ggsignif) # for adding significance brackets and labels to ggplots (better compatible with geom_boxplot() than ggpubr)
#library(stargazer) # for creating aesthetic table outputs to summarize analyses
library(kableExtra) # for creating kables (customized tables in RMarkdown output with styling options)
library(bookdown) # support for numbering figure and table captions
library(rstatix) # for statistical tests (in combination with dplyr/piping and plotting) and summary statistics
#library(psych) # additional statistic options (e.g. correlation matrix, partial correlations)
library(car) # for statistical models (ANCOVA with type III errors), dummy coding
#library(lme4) # for linear mixed modelling
library(MASS) # for robust linear model
library(broom) # tidy test output, e.g. of GLM
#library(broom.mixed) # tidy mixed model
library(scales) # for scale and percentage formatting (optional)
library(MatchIt) # for propensity (e.g. age, IQ) matching
library(optmatch) # for optimal matching
#library(corrplot) # generate correlation matrix/visualization
library(ppcor) # for partial correlations
#library(effectsize) # for effect size statistics (e.g. eta squared, Cohen's d)
library(sjstats) # for effect size statistics
library(pwr) # basic functions for power analysis
library(DescTools) # interrater reliability
library(emmeans) # for estimated marginal means (EMM) (covariate-adjusted means in ANCOVA)
library(tidyverse)
library(sfsmisc)

version[['version.string']]
citation("ggplot2")
citation("MASS")

#library(matlib) # for Gram-Schmidt Orthogonalization of a Matrix
#library(tidystats) # make lists and dataframes out of statistical test results
#library(reshape2) # for transposing/melting data (can also be done with dplyr)
#library(RColorBrewer) # color tool/palettes for plotting
#library(captioner) # support for numbering figure and table captions (alternative to bookdown)
```

```{r}
# Code for creating raincloud plots (geom flat violin, will be used later to visualize main analyses)
"%||%" <- function(a, b) {
  if (!is.null(a)) a else b
}

geom_flat_violin <- function(mapping = NULL, data = NULL, stat = "ydensity",
                        position = "dodge", trim = TRUE, scale = "area",
                        show.legend = NA, inherit.aes = TRUE, ...) {
  layer(
    data = data,
    mapping = mapping,
    stat = stat,
    geom = GeomFlatViolin,
    position = position,
    show.legend = show.legend,
    inherit.aes = inherit.aes,
    params = list(
      trim = trim,
      scale = scale,
      ...
    )
  )
}

GeomFlatViolin <-
  ggproto("GeomFlatViolin", Geom,
          setup_data = function(data, params) {
            data$width <- data$width %||%
              params$width %||% (resolution(data$x, FALSE) * 0.9)
            
            # ymin, ymax, xmin, and xmax define the bounding rectangle for each group
            data %>%
              group_by(group) %>%
              mutate(ymin = min(y),
                     ymax = max(y),
                     xmin = x,
                     xmax = x + width / 2)
            
          },
          
          draw_group = function(data, panel_scales, coord) {
            # Find the points for the line to go all the way around
            data <- transform(data, xminv = x,
                              xmaxv = x + violinwidth * (xmax - x))
            
            # Make sure it's sorted properly to draw the outline
            newdata <- rbind(plyr::arrange(transform(data, x = xminv), y),
                             plyr::arrange(transform(data, x = xmaxv), -y))
            
            # Close the polygon: set first and last point the same
            # Needed for coord_polar and such
            newdata <- rbind(newdata, newdata[1,])
            
            ggplot2:::ggname("geom_flat_violin", GeomPolygon$draw_panel(newdata, panel_scales, coord))
          },
          
          draw_key = draw_key_polygon,
          
          default_aes = aes(weight = 1, colour = "grey20", fill = "white", size = 0.5,
                            alpha = NA, linetype = "solid"),
          
          required_aes = c("x", "y")
)
```

# Data preparation steps  
## Extract FreeSurfer 7.1 output data and generate data.frames  
### Extract amygdala, hippocampus and thalamus substructure measures (fssubdata)  
A data.frame labelled "fssubdata" (= tibble) is created, comprising amygdala, hippocampal and thalamic regions and volume measures for left and right brain hemispheres (and storage_name of subjects as an identifier).  
The resulting data.frame "fsdata" (from the execution of the following code) will be saved as .csv and stored in a "data" sub-directory of the R project - and regularly updated. If the joint data.frame "data_na.csv" exists in the latter directory, "data_na.csv" will be imported/read directly (which accelerates runtime, implemented via if-function). **If "data_na.csv" does not exist** (e.g. "data_na.csv" was manually deleted for updating purposes, when new FreeSurfer recon-all outputs are available or when our Redcap import data need to be modified for a new join with brain data), the following code will be run and will create an updated data.frame "fsdata" or "fssubdata" based on the current FreeSurfer output (implemented via if-function).  

```{r filepaths, results='hide', message=FALSE, warning=FALSE}
taurus_mountpoint <- first(Filter(dir.exists, 
                               c("/Applications/freesurfer/7.1.1/subjects/scratch/igis/processing/nipype/smri_7",
                                 "/scratch/igis/processing/nipype/smri_7")))
```

```{r fssubdata, results='hide', message=FALSE, warning=FALSE}
if(file.exists("data/data_temporary/data_na.csv")){
  data_na <- read_csv("data/data_temporary/data_na.csv") %>% # "data_na" is imported and will be transformed to final data.frame "data" later after checking for missing values
    mutate(point_of_research = fct_relevel(point_of_research, c("T1", "HCW", "T2", "recAN"))) %>% # IMPORTANT: organize categories or levels in the point_of_research column
    mutate(analysis = fct_relevel(analysis, c("amygdala", "hippocampus", "thalamus"))) # IMPORTANT: organize categories or levels in the analysis column
  }

if(!file.exists("data/data_temporary/data_na.csv")) {
  filenames <- Sys.glob(file.path(taurus_mountpoint, "*/mri/*.txt")) # file paths to mounted FreeSurfer output - .txt files of all FreeSurfer-processed subjects via wildcard expansion
  
  fssubdata <- tibble(file=filenames) %>%
    filter(str_detect(file, "(.*hippo.*)|(.*amyg.*)|(.*Thalamic.*)")) %>%
    mutate(content=map(file, function(x) { # content refers to nested "region" and "measure" data
    read_delim(x, delim=" ", 
               col_names=c("region" , "measure"),
               col_types=c(region=col_character(),
                           measure=col_double()))
      })) %>%
    unnest(content) %>%
    extract(file, c("storage_name", "file_type"), ".*/(64-[0-9][0-9]-[0-9][0-9][0-9]-[0-9]_[^/]*)/.*/([^/]*)", remove=FALSE) %>%
    extract(file_type, c("hemi"), "([rl]h).*", remove=FALSE ) %>%
    mutate(hemi = ifelse(startsWith(region, "Right"),"rh", hemi)) %>% # only for thalamic nuclei ("Left/Right" included in filenames)
    mutate(hemi = ifelse(startsWith(region, "Left"),"lh", hemi)) %>%
    mutate(region = str_remove(region, "(Right-)|(Left-)")) %>%
    mutate(analysis = dplyr::recode(file_type,
                             "ThalamicNuclei.v12.T1.volumes.txt" = "thalamus",
                             "lh.amygNucVolumes-T1.v21.txt" = "amygdala",
                             "rh.amygNucVolumes-T1.v21.txt" = "amygdala", 
                             "lh.hippoSfVolumes-T1.v21.txt" = "hippocampus",
                             "rh.hippoSfVolumes-T1.v21.txt" = "hippocampus"))
  }
```

### Extract standard brain segmentation stats (fsbraindata)  
Brain segmentation statistics from the FreeSurfer recon-all output might become relevant as covariates in the planned amygdala and hippocampal substructure analyses (GLM). The following volumes were selected for all subjects (storage_names):  

*  Estimated total intracranial volume (e_tiv) (= head size correction), cave: there is also a segmentation based estimated TIV (sbTIV), but previous papers have not used this volume (see [here](http://surfer.nmr.mgh.harvard.edu/fswiki/sbTIV)),  
* Total brain volume including cerebellum and brain stem, excluding ventricles and CSF (brain_seg_not_vent),  
* Total brain volume excluding cerebellum, brain stem, ventricles and CSF (supra_tentorial_not_vent),  
* Total gray matter volume including cerebellum (total_gray),  
* Subcortical gray matter volume including thalamus, caudate, putamen, pallidum, hippocampus, amygdala, accumbens, ventral DC, substancia nigra (subcort_gray).  

```{r fsbraindata, results='hide', message=FALSE, warning=FALSE}
#options(digits = 14) # OPTIONAL: set number of digits of numeric vectors (so that brain segmentation measures can be displayed with all decimal places in the preview (in case there are decimal places => some measures are provided as ###.000 in the FreeSurfer aseg.stats file and, therefore, are returned without decimal places)

if(!file.exists("data/data_temporary/data_na.csv")) { # code will only be run, if the final data.frame "data_na" does not exist
  
  filenames_aseg_stats <- Sys.glob(file.path(taurus_mountpoint, "*/stats/aseg.stats"))
  
  fsbraindata <- tibble(filenames_aseg_stats) %>%
    mutate(storage_name = str_extract(filenames_aseg_stats, "64-[0-9][0-9]-[0-9][0-9][0-9]-[0-9]_[^/]*")) %>%
    mutate(content = map(filenames_aseg_stats, function(x) {
      read_file(x)
    })) %>%
    unnest(content) %>%
    
    mutate(e_tiv = str_extract(content, "EstimatedTotalIntraCranialVol.*\\d+\\.*\\d*")) %>% # the whole "extract" is included in fsbraindata for clear allocation and will be overwritten in the next step
    mutate(e_tiv = str_extract(e_tiv, "\\d+\\.*\\d*")) %>% # num-extract (only number or measure is extracted)
    
    mutate(brain_seg_not_vent = str_extract(content, "BrainSegNotVent.*\\d+\\.*\\d*")) %>% 
    mutate(brain_seg_not_vent = str_extract(brain_seg_not_vent, "\\d+\\.*\\d*")) %>%
    
    mutate(supra_tentorial_not_vent = str_extract(content, "SupraTentorialNotVent.*\\d+\\.*\\d*")) %>% 
    mutate(supra_tentorial_not_vent = str_extract(supra_tentorial_not_vent, "\\d+\\.*\\d*")) %>%
    
    mutate(total_gray = str_extract(content, "TotalGray.*\\d+\\.*\\d*")) %>% 
    mutate(total_gray = str_extract(total_gray, "\\d+\\.*\\d*")) %>%
    
    mutate(subcort_gray = str_extract(content, "SubCortGray.*\\d+\\.*\\d*")) %>% 
    mutate(subcort_gray = str_extract(subcort_gray, "\\d+\\.*\\d*")) %>%
    
    mutate_at(vars(e_tiv, brain_seg_not_vent, supra_tentorial_not_vent, total_gray, subcort_gray), funs(as.double)) %>% # change type of measure variables from "character/string" into "double" (numeric)
    dplyr::select(storage_name, e_tiv, brain_seg_not_vent, supra_tentorial_not_vent, total_gray, subcort_gray) # select relevant variables
    }
```

### Extract FreeSurfer image quality metrics (fsqualitydata)  
The following quantitative measures reflect the image quality of the FreeSurfer processed T1 MRI data. They might play a role as covariates in the planned analyses.  

* Contrast-to-noise ratio (CNR): quantitative image quality measure provided by FreeSurfer, ratio of the difference in signal intensity between regions of different tissue types (e.g. gray vs. white matter) and background signal => sufficiently high contrast required for robust brain measurements => we chose total CNR (also available from FreeSurfer: gray/white CNR, gray/csf CNR, rh/lh CNR).  
* Signal-to-noise ratio (SNR, resp. WM-SNR): based on signal statistics in the tissue/region of interest in relation to the background noise intensity (e.g. from the surrounding air).  
* Cave: CNR = difference in SNR between two relevant tissue types. Larger CNRs or SNRs represent a better image quality!  
* The *Euler number* was also mentioned among the quantitative image quality metrics (Chalavi et al., 2012; Rosen et al., 2018), and described as a measure of the topological complexity of the reconstructed cortical surface (should approach 2). However, we did not assess this measure (our planned analyses are not cortex-focused).  

```{r fsqualitydata, results='hide', message=FALSE, warning=FALSE}
if(!file.exists("data/data_temporary/data_na.csv")) { # code will only be run, if the final data.frame "data_na" does not exist
  
  # Extract measure CNR from FreeSurfer "stats" output
  filenames_quality_1 <- Sys.glob(file.path(taurus_mountpoint, "*/stats/norm_CNR.txt"))
  fsqualitydata_1 <- tibble(filenames_quality_1) %>%
    mutate(storage_name = str_extract(filenames_quality_1, "64-[0-9][0-9]-[0-9][0-9][0-9]-[0-9]_[^/]*")) %>%
    mutate(content = map(filenames_quality_1, function(x) {
      read_lines(x, skip=6) # start reading at line 7 = last line of the file which contains the cnr_total measure
    })) %>%
    unnest(content) %>%
    mutate(cnr_total = str_extract(content, "\\d+\\.*\\d*")) %>% # num-extract
    mutate(cnr_total = as.double(cnr_total)) %>% # change column type from string into double (numeric)
    dplyr::select(storage_name, cnr_total) # select only relevant columns
  
  # Extract measure SNR from FreeSurfer "stats" output
  filenames_quality_2 <- Sys.glob(file.path(taurus_mountpoint, "*/stats/wmsnr.e3.dat"))
  fsqualitydata_2 <- tibble(filenames_quality_2) %>%
    mutate(content = map(filenames_quality_2, function(x) {
      read.table(x, sep="", 
                 col.names=c("storage_name" , "snr" , "var3" , "var4" , "var5" , "var6")) # read table (separator = white space; cf. working with nested data) and name columns
    })) %>%
    unnest(content) %>% # unnest the nested table
    mutate(snr = as.double(snr)) %>% # change column type from string into double
    dplyr::select(storage_name, snr) # select only relevant columns
    
  fsqualitydata <- full_join(fsqualitydata_1, fsqualitydata_2, by="storage_name") # full_join to create a new data.frame with both quality measures CNR and SNR in separate columns
    }
```

### Generate joint data.frames of FreeSurfer data  

1. data.frame "fsvoldata": dplyr::full_join by storage_name of "fssubdata" and "fsbraindata"  
2. data.frame "fsdata": dplyr::full_join by storage_name of "fsvoldata" and "fsqualitydata"  

```{r fsdata, results='hide', message=FALSE, warning=FALSE}
if(!file.exists("data/data_temporary/data_na.csv")) { # code will only be run, if the final data.frame "data_na" does not exist
  
  fsvoldata <- full_join(fssubdata, fsbraindata, by="storage_name") # dplyr::full_join of data.frames "fssubdata" and "fsbraindata" by storage_name (storage_names should be identical in both data.frames, since they both refer to the current FreeSurfer output (no rows with missing values should be added when performing full_join)
  
  fsdata <- full_join(fsvoldata, fsqualitydata, by="storage_name")
  
# Save generated FreeSurfer data.frames as .csv
  write_csv(fsdata, file="data/data_temporary/fsdata.csv", 
            append=FALSE)
}
```


## Import Redcap data and select relevant variables  
The following code will only be executed, if there is no stored "data_na.csv" in the "data" sub-directory of the R project. Then, the redcap import and join with the above generated - updated - data.frame "fsdata" will be executed. If a current version of the joint data.frame "data_na" exists, it has previously been imported/read (see above, implemented via if-function).  
Resulting joint data.frame: "data_na" (=> used for further analyses (missing values will be removed below), contains only relevant Redcap data from the data.frame "redcap_subset" which can be adapted/modified at any time).  
```{r redcapimport, results='hide', message=FALSE, warning=FALSE}
if(!file.exists("data/data_temporary/data_na.csv")) {
  redcap <- read_csv("data/redcap_do_not_delete/redcap.csv")
  fsdata <- read_csv("data/data_temporary/fsdata.csv")
  
  redcap_subset <- redcap %>% dplyr::select(participant_id, 
                                     redcap_event_name, 
                                     storage_name,
                                     point_of_research, 
                                     date_of_research, 
                                     age_at_date_of_research, 
                                     bmi_at_date_of_research, 
                                     bmisds_at_date_of_research)

data_na <- fsdata %>% left_join(redcap_subset, by="storage_name") %>% # resulting data.frame still has some missing values ("_na")
  mutate(point_of_research = fct_relevel(point_of_research, c("T1", "HCW", "T2", "recAN"))) %>% # IMPORTANT: organize categories or levels in the point_of_research column
    mutate(analysis = fct_relevel(analysis, c("amygdala", "hippocampus", "thalamus"))) # IMPORTANT: organize categories or levels in the analysis column
  }
```

## Save generated data.frame as .csv  
```{r savecsv, results='hide', message=FALSE, warning=FALSE}
if(!file.exists("data/data_temporary/data_na.csv")) {
  write_csv(data_na, file="data/data_temporary/data_na.csv", append=FALSE)
  }
```

```{r descriptives01, results='hide', include=TRUE, message=FALSE, warning=FALSE}
n_storage_name <- data_na %>% 
  distinct(storage_name, .keep_all = TRUE) %>% nrow(.)

# Number of subjects (storage_names) per study group (point_of_research), cave: duplicate cases have not been removed yet!
n_groups <- data_na %>% 
  distinct(storage_name, .keep_all = TRUE) %>%
  group_by(point_of_research) %>% # optional (count already includes group_by)
  count(.) %>%
  spread(point_of_research, n) %>%
  rename(n_T1 = T1, 
         n_HC = HCW,
         n_T2 = T2,
         n_recAN = recAN)

# Number of (sub)regions 
n_regions <- data_na %>% 
  distinct(region, .keep_all = TRUE) %>%
  group_by(analysis) %>% # optional (count already includes group_by)
  count(.) %>%
  spread(analysis, n) %>%
  rename(n_regions_amygdala = amygdala, 
         n_regions_hippocampus = hippocampus,
         n_regions_thalamus = thalamus) %>%
  mutate(n_observations_amygdala = 2*n_regions_amygdala*n_storage_name, 
         n_observations_hippocampus = 2*n_regions_hippocampus*n_storage_name, 
         n_observations_thalamus = 2*n_regions_thalamus*n_storage_name) %>% # rh + lh
  mutate(sum_regions = 2*sum(n_regions_amygdala, n_regions_hippocampus, n_regions_thalamus)) %>% # rh + lh
  mutate(n_observations = sum_regions*n_storage_name)

# Number of observations in fsdata and data_na
fsdata <- read_csv("data/data_temporary/fsdata.csv")
n_observations_fsdata <- nrow(fsdata)

n_observations_data_na <- nrow(data_na)

difference_observations <- n_observations_data_na - n_observations_fsdata

# Checks for missing values
missing <- data_na %>% 
  summarize_at(vars(measure, 
                    e_tiv, brain_seg_not_vent, supra_tentorial_not_vent, total_gray, subcort_gray, snr,
                    cnr_total, 
                    point_of_research,
                    redcap_event_name), 
               funs(sum(is.na(.)))) %>%
  mutate(missing_brain_segmentation = sum(e_tiv, brain_seg_not_vent, supra_tentorial_not_vent, 
                                          total_gray, subcort_gray)) %>%
  rename(missing_measure = measure,
         missing_snr = snr,
         missing_cnr = cnr_total,
         missing_point_of_research = point_of_research,
         missing_redcap_event_name = redcap_event_name)


# Create tibble for kable output
characteristics <- c("Total n(subjects) resp. n(storage_name) in FreeSurfer recon-all output",
                     "n(acAN-T1)",
                     "n(HC)",
                     "n(acAN-T2)",
                     "n(recAN)",
                     "n(amygdala)", 
                     "n(hippocampus)", 
                     "n(thalamus)",
                     "Sum of substructure measures per subject (left + right hemi)",
                     "Calculated total n(observations) [subjects*substructure measures]",
                     "Check: n(observations) in fsdata",
                     "Check: n(observations) in data_na",
                     "Difference in n(observations) between fsdata and data_na",
                     "n(missing values) in substructure measures",
                     "n(missing values) in any brain segmentation volumes",
                     "n(missing values) in SNR",
                     "n(missing values) in CNR",
                     "n(missing values) in point_of_research",
                     "n(missing values) in redcap_event_name",
                     "Conclusion")
numeric_expression <- c(n_storage_name,
                        n_groups$n_T1,
                        n_groups$n_HC,
                        n_groups$n_T2,
                        n_groups$n_recAN,
                        n_regions$n_regions_amygdala, 
                        n_regions$n_regions_hippocampus, 
                        n_regions$n_regions_thalamus,
                        n_regions$sum_regions,
                        n_regions$n_observations,
                        n_observations_fsdata,
                        n_observations_data_na,
                        difference_observations,
                        missing$missing_measure,
                        missing$missing_brain_segmentation,
                        missing$missing_cnr,
                        missing$missing_snr,
                        missing$missing_point_of_research,
                        missing$missing_redcap_event_name,
                        "Following dplyr::left_join of fsdata with Redcap, the data.frames fsdata and the resulting data_na should have identical n(observations). However, rows with some missing values were added. Background: Visual investigation revealed that there are distinct Redcap event names (atd1_1_arm_8 ... atd1_6_arm_8) stored under the same storage_name. Thus, the concerned atd rows can be removed to generate the final data.frame data, since they do not comprise any relevant FreeSurfer MRI data.")

descriptives01 <- tibble(characteristics, numeric_expression)
```

```{r table01, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
knitr::kable(descriptives01, format = "html", col.names = c("Characteristics", "Numeric expression"), align = "l", caption = "Descriptive table: Study groups, (sub)regions and missing values") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  pack_rows("Study groups (duplicate cases not removed)", 2, 5) %>%
  pack_rows("Number of (sub)regions per analysis", 6, 8) %>%
  pack_rows("Exploration of missing values in data_na", 14, 19)
```

## Generate the "final" data.frame "data" {#data}  
```{r data, results='hide', message=FALSE, warning=FALSE}
# Generate new data.frame "data" for further analyses (by removing missing values)
data <- data_na %>% 
  filter(str_detect(redcap_event_name, "atd1_[0-9]_arm_8", negate=TRUE)) %>% # only non-matching patterns (negate) are selected
  mutate(point_of_research = fct_relevel(point_of_research, c("T1", "HCW", "T2", "recAN"))) %>%
    mutate(analysis = fct_relevel(analysis, c("amygdala", "hippocampus", "thalamus"))) # reorder factors in point_of_research and analysis again (already done, as an additional "security" step)
```

```{r missingvalues, results='hide', include=TRUE, message=FALSE, warning=FALSE}
missing_data <- data %>% 
  summarize_at(vars(measure,
                    point_of_research,
                    age_at_date_of_research), 
            funs(sum(is.na(.)))) %>%
  rename(missing_measure_data = measure,
         missing_point_of_research_data = point_of_research,
         missing_age = age_at_date_of_research)
```

*Check for missing values in "data":* In the final data.frame "data", there are `r missing_data$missing_measure_data` missing values for substructure measures, and `r missing_data$missing_point_of_research_data` missing values for point_of_research, and `r missing_data$missing_age` missing values for age.

## Compute scores of further relevant questionnaires  
### STAI scores  
State and Trait Anxiety (Motivation: amygdala is involved in processing of negative emotions and fear conditioning (Review by Baxter and Murray, 2002)).  
```{r stai, message=FALSE, warning=FALSE}
redcap <- read_csv("data/redcap_do_not_delete/redcap.csv")  

stai_recoded <- redcap %>% dplyr::select(storage_name, participant_id, point_of_research, date_of_research, age_at_date_of_research, stai_s_item_1, stai_s_item_2, stai_s_item_3, stai_s_item_4, stai_s_item_5, stai_s_item_6, stai_s_item_7, stai_s_item_8, stai_s_item_9, stai_s_item_10, stai_s_item_11, stai_s_item_12, stai_s_item_13, stai_s_item_14, stai_s_item_15, stai_s_item_16, stai_s_item_17, stai_s_item_18, stai_s_item_19, stai_s_item_20, stai_t_item_1, stai_t_item_2, stai_t_item_3, stai_t_item_4, stai_t_item_5, stai_t_item_6, stai_t_item_7, stai_t_item_8, stai_t_item_9, stai_t_item_10, stai_t_item_11, stai_t_item_12, stai_t_item_13, stai_t_item_14, stai_t_item_15, stai_t_item_16, stai_t_item_17, stai_t_item_18, stai_t_item_19, stai_t_item_20) %>%
  mutate_at(vars(-c(storage_name, participant_id, point_of_research, date_of_research,
                    age_at_date_of_research)),
            funs(dplyr::recode(.,
                          "Fast nie" = 1,
                          "Manchmal" = 2,
                          "Oft" = 3,
                          "Fast immer" = 4))) %>%
  mutate_at(vars(-c(storage_name, participant_id, point_of_research, date_of_research,
                    age_at_date_of_research)), funs(as.numeric(.))) %>%
  mutate(stai_s_item_1 = 5-stai_s_item_1) %>%
  mutate(stai_s_item_2 = 5-stai_s_item_2) %>%
  mutate(stai_s_item_5 = 5-stai_s_item_5) %>%
  mutate(stai_s_item_8 = 5-stai_s_item_8) %>%
  mutate(stai_s_item_10 = 5-stai_s_item_10) %>%
  mutate(stai_s_item_11 = 5-stai_s_item_11) %>%
  mutate(stai_s_item_15 = 5-stai_s_item_15) %>%
  mutate(stai_s_item_16 = 5-stai_s_item_16) %>%
  mutate(stai_s_item_19 = 5-stai_s_item_19) %>%
  mutate(stai_s_item_20 = 5-stai_s_item_20) %>%
  mutate(stai_t_item_1 = 5-stai_t_item_1) %>%
  mutate(stai_t_item_6 = 5-stai_t_item_6) %>%
  mutate(stai_t_item_7 = 5-stai_t_item_7) %>%
  mutate(stai_t_item_10 = 5-stai_t_item_10) %>%
  mutate(stai_t_item_13 = 5-stai_t_item_13) %>%
  mutate(stai_t_item_16 = 5-stai_t_item_16) %>%
  mutate(stai_t_item_19 = 5-stai_t_item_19) %>%
  mutate(stai_s_score = rowMeans(subset(., select = stai_s_item_1:stai_s_item_20), 
                                 na.rm = TRUE)) %>%
  mutate(stai_s_score = ceiling(stai_s_score*20)) %>% # calculation of state and trait scores (possibly missing items are tolerated)
  mutate(stai_t_score = rowMeans(subset(., select = stai_t_item_1:stai_t_item_20), 
                                 na.rm = TRUE)) %>%
  mutate(stai_t_score = ceiling(stai_t_score*20)) 

staik_s_recoded <- redcap %>% dplyr::select(storage_name, staik_s_item_1, staik_s_item_2, staik_s_item_3, staik_s_item_4, staik_s_item_5, staik_s_item_6, staik_s_item_7, staik_s_item_8, staik_s_item_9, staik_s_item_10, staik_s_item_11, staik_s_item_12, staik_s_item_13, staik_s_item_14, staik_s_item_15, staik_s_item_16, staik_s_item_17, staik_s_item_18, staik_s_item_19, staik_s_item_20) %>%
  mutate_at(vars(-storage_name),
            funs(dplyr::recode(.,
                                "fast nie" = 1,
                                "manchmal" = 2,
                                "oft" = 3))) %>%
  mutate_at(vars(-storage_name),
            funs(as.numeric(.))) %>%
  mutate(staik_s_item_1 = 4-staik_s_item_1) %>%
  mutate(staik_s_item_3 = 4-staik_s_item_3) %>%
  mutate(staik_s_item_6 = 4-staik_s_item_6) %>%
  mutate(staik_s_item_8 = 4-staik_s_item_8) %>%
  mutate(staik_s_item_10 = 4-staik_s_item_10) %>%
  mutate(staik_s_item_12 = 4-staik_s_item_12) %>%
  mutate(staik_s_item_13 = 4-staik_s_item_13) %>%
  mutate(staik_s_item_14 = 4-staik_s_item_14) %>%
  mutate(staik_s_item_17 = 4-staik_s_item_17) %>%
  mutate(staik_s_item_20 = 4-staik_s_item_20) %>%
  mutate(staik_s_score = rowMeans(subset(., select = staik_s_item_1:staik_s_item_20), 
                                  na.rm = TRUE)) %>%
  mutate(staik_s_score = ceiling(staik_s_score*20)) 

staik_t_recoded <- redcap %>% dplyr::select(storage_name, staik_t_item_1, staik_t_item_2, staik_t_item_3, staik_t_item_4, staik_t_item_5, staik_t_item_6, staik_t_item_7, staik_t_item_8, staik_t_item_9, staik_t_item_10, staik_t_item_11, staik_t_item_12, staik_t_item_13, staik_t_item_14, staik_t_item_15, staik_t_item_16, staik_t_item_17, staik_t_item_18, staik_t_item_19, staik_t_item_20) %>%
  mutate_at(vars(-storage_name),
            funs(dplyr::recode(.,
                                "Fast nie" = 1,
                                "Manchmal" = 2,
                                "Oft" = 3))) %>%
  mutate_at(vars(-storage_name),
            funs(as.numeric(.))) %>%
  mutate(staik_t_score = rowMeans(subset(., select = staik_t_item_1:staik_t_item_20), 
                                  na.rm = TRUE)) %>%
  mutate(staik_t_score = ceiling(staik_t_score*20))

stai <- full_join(staik_s_recoded, staik_t_recoded, by="storage_name") %>%
  full_join(stai_recoded, by="storage_name") %>%
  mutate(s.anxiety = ifelse(age_at_date_of_research > 15, stai_s_score, staik_s_score)) %>% # Age-dependency of STAI vs. STAIK
  mutate(t.anxiety = ifelse(age_at_date_of_research > 15, stai_t_score, staik_t_score)) %>%
  dplyr::select(participant_id, point_of_research, date_of_research,
                age_at_date_of_research,
                stai_s_score, stai_t_score, staik_s_score, staik_t_score, s.anxiety,
                t.anxiety) %>% # make sure that STAI scores are available for all study arms (e.g. if braef data are chosen and dehab is dropped, given clinical data are entered into the dehab arm (despite the existing Redcap copy tool))
  group_by(participant_id, point_of_research) %>%
  arrange(date_of_research, .by_group=TRUE) %>%
  slice_head(n = 1) %>%
  dplyr::select(-c(date_of_research, age_at_date_of_research))
```

### BisBas scores  
Behavioral approach system (BAS), behavioral avoidance (or inhibition) system (BIS) (Motivation: amygdala is also involved in reward - positive emotions, particularly in learning about the positive value of stimuli (Review by Baxter and Murray, 2002)).  
```{r bisbas, message=FALSE, warning=FALSE}
bisbas <- redcap %>%
  dplyr::select(storage_name, participant_id, point_of_research, date_of_research,
                bis_bas_item_1, bis_bas_item_2, bis_bas_item_3, bis_bas_item_4, bis_bas_item_5, bis_bas_item_6, bis_bas_item_7, bis_bas_item_8, bis_bas_item_9, bis_bas_item_10, bis_bas_item_11, bis_bas_item_12, bis_bas_item_13, bis_bas_item_14, bis_bas_item_15, bis_bas_item_16, bis_bas_item_17, bis_bas_item_18, bis_bas_item_19, bis_bas_item_20, bis_bas_item_21, bis_bas_item_22, bis_bas_item_23, bis_bas_item_24) %>%
  mutate_at(vars(-c(storage_name, participant_id, point_of_research, date_of_research)),
            funs(dplyr::recode(.,
                          "Trifft fuer mich gar nicht zu" = 1,
                          "Trifft fuer mich eher nicht zu" = 2,
                          "Trifft fuer mich eher zu" = 3,
                          "Trifft fuer mich genau zu" = 4))) %>%
  mutate_at(vars(-c(storage_name, participant_id, point_of_research, date_of_research)),
            funs(as.numeric(.))) %>%
  mutate(bis_bas_item_2 = 5-bis_bas_item_2) %>%
  mutate(bis_bas_item_22 = 5-bis_bas_item_22) %>%
  rowwise() %>% # compute row-means
  mutate(bas = 13*(mean(c(bis_bas_item_3, bis_bas_item_9, bis_bas_item_12, bis_bas_item_21, bis_bas_item_4, bis_bas_item_7, bis_bas_item_14, bis_bas_item_18, bis_bas_item_23, bis_bas_item_5, bis_bas_item_10, bis_bas_item_15, bis_bas_item_20),
                        na.rm=TRUE))) %>%
  mutate(bas_drive = 4*(mean(c(bis_bas_item_3, bis_bas_item_9, bis_bas_item_12, bis_bas_item_21), na.rm=TRUE))) %>%
  mutate(bas_funseeking = 4*(mean(c(bis_bas_item_5, bis_bas_item_10, bis_bas_item_15, bis_bas_item_20), na.rm=TRUE))) %>%
  mutate(bas_rewardresponsiveness = 5*(mean(c(bis_bas_item_4, bis_bas_item_7, bis_bas_item_14, bis_bas_item_18, bis_bas_item_23), na.rm=TRUE))) %>%
  mutate(bis = 7*(mean(c(bis_bas_item_2, bis_bas_item_8, bis_bas_item_13, bis_bas_item_16, bis_bas_item_19, bis_bas_item_22, bis_bas_item_24), na.rm=TRUE))) %>%
  dplyr::select(participant_id, point_of_research, date_of_research,
                bas, bas_drive, bas_funseeking, bas_rewardresponsiveness, bis) %>%
  group_by(participant_id, point_of_research) %>%
  arrange(date_of_research, .by_group=TRUE) %>%
  slice_head(n = 1) %>%
  dplyr::select(-date_of_research)
```

### BSCS score (Morean et al., 2014)  
Assesses self-control levels (assumed to be elevated in AN). Factor 1 - Self discipline, Factor 2 - Impulse control.  

```{r bscs, message=FALSE, warning=FALSE}
bscs <- redcap %>%
  dplyr::select(storage_name, participant_id, point_of_research, date_of_research, bscs_question_1, bscs_question_2,
                bscs_question_3, bscs_question_4, bscs_question_5, bscs_question_6, bscs_question_7, bscs_question_8, 
                bscs_question_9, bscs_question_10, bscs_question_11, bscs_question_12, bscs_question_13) %>%
  mutate_at(vars(-c(storage_name, participant_id, point_of_research, date_of_research)),
            funs(dplyr::recode(.,
                          "stimmt nicht" = 1,
                          "stimmt kaum" = 2,
                          "teils/teils" = 3,
                          "stimmt eher" = 4,
                          "stimmt genau" = 5))) %>%
  mutate_at(vars(-c(storage_name, participant_id, point_of_research, date_of_research)),
            funs(as.numeric(.))) %>%
  mutate(bscs_question_2 = 6 - bscs_question_2) %>%
  mutate(bscs_question_4 = 6 - bscs_question_4) %>%
  mutate(bscs_question_5 = 6 - bscs_question_5) %>%
  mutate(bscs_question_7 = 6 - bscs_question_7) %>%
  mutate(bscs_question_10 = 6 - bscs_question_10) %>%
  mutate(bscs_question_12 = 6 - bscs_question_12) %>%
  mutate(bscs_question_13 = 6 - bscs_question_13) %>%
  rowwise() %>% # compute row-means
  mutate(bscs_sd = 3*(mean(c(bscs_question_1, bscs_question_8, bscs_question_11), na.rm=TRUE))) %>%
  mutate(bscs_ic = 4*(mean(c(bscs_question_5, bscs_question_9, bscs_question_12, bscs_question_13), na.rm=TRUE))) %>%
  mutate(bscs_total = 13*(mean(c(bscs_question_1, bscs_question_2, bscs_question_3, bscs_question_4, bscs_question_5,
                             bscs_question_6, bscs_question_7, bscs_question_8, bscs_question_9, bscs_question_10,
                             bscs_question_11, bscs_question_12, bscs_question_13), na.rm=TRUE))) %>%
  dplyr::select(participant_id, point_of_research, date_of_research, bscs_total, bscs_ic, bscs_sd) %>%
  group_by(participant_id, point_of_research) %>%
  arrange(date_of_research, .by_group=TRUE) %>%
  slice_head(n = 1) %>%
  dplyr::select(-date_of_research)
```

### DGI (Delay Gratification Inventory)  

```{r dgi, message=FALSE, warning=FALSE}
dgi <- redcap %>%
  dplyr::select(storage_name, participant_id, point_of_research, date_of_research, dgi_question_1, dgi_question_2, dgi_question_3, dgi_question_4, dgi_question_5, dgi_question_6, dgi_question_7, dgi_question_8, dgi_question_9, dgi_question_10, dgi_question_11, dgi_question_12, dgi_question_13, dgi_question_14, dgi_question_15, dgi_question_16, dgi_question_17, dgi_question_18, dgi_question_19, dgi_question_20, dgi_question_21, dgi_question_22, dgi_question_23, dgi_question_24, dgi_question_25, dgi_question_26, dgi_question_27, dgi_question_28, dgi_question_29, dgi_question_30, dgi_question_31, dgi_question_32, dgi_question_33, dgi_question_34, dgi_question_35) %>%
  mutate_at(vars(-c(storage_name, participant_id, point_of_research, date_of_research)),
            funs(dplyr::recode(.,
                          "Ich stimme ueberhaupt nicht zu." = 1,
                          "Ich stimme nicht zu." = 2,
                          "Weder/Noch" = 3,
                          "Ich stimme zu." = 4,
                          "Ich stimme voellig zu." = 5))) %>%
  mutate_at(vars(-c(storage_name, participant_id, point_of_research, date_of_research)),
            funs(as.numeric(.))) %>%
  mutate(dgi_question_6 = 6 - dgi_question_6) %>%
  mutate(dgi_question_10 = 6 - dgi_question_10) %>%
  mutate(dgi_question_20 = 6 - dgi_question_20) %>%
  mutate(dgi_question_14 = 6 - dgi_question_14) %>%
  mutate(dgi_question_23 = 6 - dgi_question_23) %>%
  mutate(dgi_question_33 = 6 - dgi_question_33) %>%
  rowwise() %>% # compute row-means
  mutate(dgi_f = 7*(mean(c(dgi_question_1, dgi_question_6, dgi_question_10, dgi_question_15, dgi_question_20, 
                           dgi_question_24, dgi_question_29), na.rm=TRUE))) %>%
  mutate(dgi_a = 7*(mean(c(dgi_question_5, dgi_question_9, dgi_question_14, dgi_question_19, dgi_question_23,
                           dgi_question_28, dgi_question_33), na.rm=TRUE))) %>%
  dplyr::select(participant_id, point_of_research, date_of_research,
                dgi_f, dgi_a) %>%
  group_by(participant_id, point_of_research) %>%
  arrange(date_of_research, .by_group=TRUE) %>%
  slice_head(n = 1) %>%
  dplyr::select(-date_of_research)
```


# Quality control (QC): Reliability of FreeSurfer automated amygdala and hippocampal subsegmentation and outlier diagnostics  
## FreeSurfer quality assessments (literature research)  
The FreeSurfer algorithm applies a Bayesian inference, labeling voxels in accordance with a probabilistic atlas (ex vivo manually labeled + in vivo manually segmented) and image intensities. For earlier FreeSurfer versions, a study on total amygdala(r) and hippocampal volumes in a pediatric population (aged 6-11 years) demonstrated a significant volume overestimation relative to the "gold standard" manual segmentation, more pronounced for the amygdala (up to +100%) than for the hippocampus (FS v.4.4.0, Schoemaker et al., 2016). Thus, visual QC and, eventually, manual correction of the FreeSurfer output were recommended. In contrast, another early study by Morey et al. (2009) showed a more sufficient agreement of FreeSurfer processed total amygdala and hippocampal volumes with manual tracing (expressed by >75% volume overlap = DICE's spatial reproducibility coefficient for left/right hippocampus and >70% for left/right amygdala, as well as by <10% volume difference for hippocampus/amygdala).  
Further, a recent study in adults (22-55 years) using FS v.6.0 reported high test-retest reliability for the whole hippocampus and some of the hippocampal subfields (volume differences<3%, DICE>80%, intraclass correlation coefficient(ICC)>0.95), and rated the FreeSurfer based hippocampal (sub-)segmentation as a "reliable method" (Brown et al., 2020; based on 3 assessments across time interval of 4 months and 2 scanner sites). In support, numerical (ICC) and spatial (DICE) reliability was found to be strong (majority of cases with ICC>0.90 and DICE>75%) for most amygdala and hippocampal subdivisions by another study in young adults - apart from the hippocampal fissure, anterior amygdaloid area and paralaminar nucleus with moderate reliability (FS v.6.0, Buser et al., 2020, preprint; based on repeated structural imaging scans).  
Test-retest reproducibility seems to depend on the substructure volumes (studied in adults >=18 years), with larger amygdala (>200mm^3) and hippocampal (>300mm^3) substructures achieving reproducibility error rates of<5% and DICE>80%, whereas smaller amygdala nuclei (medial + central + cortical) and hippocampal fissure + fimbria were segmented less reliably (Quattrini et al., 2020; based on FS v.6.0 processing and longitudinal reassessments (2 scans) across different MRI sites).

## Outlier approach 1: Volume outliers in our substructure measures  
Identification of volume outliers in all participants in the data.frame "data" (grouped by analysis, region, brain hemisphere and point_of_research). Study groups (acAN-T1, acAN-T2, recAN, HC) were treated separately for volume outlier detection. **Each substructure measure (left/right hemispheres separately) was taken into account for volume outliers (i.e. left and right hemisphere volumes were NOT summed or averaged!).** 

As cut-off for **outliers** (for subsequent visual QC), we chose: **values deviating more than 2.698 standard deviations from the group mean (in both directions)**. The range between "mean+/-2.698sd" cumulatively represents approximately 99.3% of (the area below) the standard normal distribution (adapted from Saemann et al. (2016 & 2020, ENIGMA-MDD) who also used this cut-off in their QC instructions for hippocampal subfield segmentation, see [here](https://pgc-ptsd.com/wp-content/uploads/2017/08/PTSD_Instructions_Subfields_part_IR_II.pdf)). Other ENIGMA working groups have also cited the QC instructions by Saemann et al. and applied them to hippocampal subfields as well as amygdala nuclei (Chen et al. (2018), Morey et al. (2019)).  

*Background: 2.698sd = z-score of 2.698, mean-2.698sd equals Q1-1.5IQR, and mean+2.698sd equals Q3+1.5IQR (=> detection criterion for "mild" outliers => Lower and Upper Inner Tukey Fences, bounding a confidence interval of 99.3%). By the way, mean-4.721sd equals Q1-3IQR, and mean+4.721sd equals Q3+3IQR (=> detection criterion for "extreme" outliers (or far out) => Lower and Upper Outer Tukey Fences) (Seo, 2006; Tukey, 1977).*  
**The "extreme outlier" cut-off is not sensitive enough for primary outlier detection, but useful to select cases for detailed subsequent visual QC.**  

*The internal (yet not published) QC pipeline for amygdala nuclei by Clarke et al. (2019) (ENIGMA-PTSD) suggests +/-4sd from the mean as cut-off for volume outliers (see table below). However, this cut-off was not sensitive enough to primarily detect outliers in our data, n(outliers) too low.*  

```{r outliersvolume01, results='hide', message=FALSE, warning=FALSE}
outliers_volume <- data %>% # for volume outliers
  dplyr::select(storage_name, point_of_research, analysis, region, hemi, measure) %>% # selection of relevant variables for outlier calculation (subset)
  group_by(analysis, region, hemi, point_of_research) %>% # groupwise outlier detection
  mutate(lower_threshold = (mean(measure) - (2.698*sd(measure)))) %>% # define thresholds for mild outliers
  mutate(upper_threshold = (mean(measure) + (2.698*sd(measure)))) %>%
  mutate(is.outlier_volume_2.698sd = ifelse((measure<lower_threshold) | (measure>upper_threshold), TRUE, FALSE)) %>% # returning if a measure is classified as an outlier ("outlier") or if not
  mutate(lower_threshold_2 = (mean(measure) - (4*sd(measure)))) %>% # define thresholds suggested by Clarke (2019, ENIGMA-PTSD)
  mutate(upper_threshold_2 = (mean(measure) + (4*sd(measure)))) %>%
  mutate(is.outlier_volume_4sd = ifelse((measure<lower_threshold_2) | (measure>upper_threshold_2), TRUE, FALSE)) %>%
  mutate(lower_threshold_3 = (mean(measure) - (4.721*sd(measure)))) %>% # define thresholds for extreme outliers
  mutate(upper_threshold_3 = (mean(measure) + (4.721*sd(measure)))) %>%
  mutate(is.outlier_volume_4.721sd = ifelse((measure<lower_threshold_3) | (measure>upper_threshold_3), TRUE, FALSE)) %>%
  ungroup()

# Count total number of symmetry outlier observations per analysis and globally
outliers_volume_total <- outliers_volume %>% 
  group_by(analysis) %>%
  summarize_at(vars(is.outlier_volume_2.698sd,
                    is.outlier_volume_4sd,
                    is.outlier_volume_4.721sd),
               funs(sum(., na.rm=TRUE))) %>% # n(outliers) per analysis
  rename(n_outliers_volume_total_analysis_2.698sd = is.outlier_volume_2.698sd,
         n_outliers_volume_total_analysis_4sd = is.outlier_volume_4sd,
         n_outliers_volume_total_analysis_4.721sd = is.outlier_volume_4.721sd) %>%
  mutate(n_outliers_volume_total_2.698sd = sum(n_outliers_volume_total_analysis_2.698sd)) %>% # n(outliers) globally
  mutate(n_outliers_volume_total_4sd = sum(n_outliers_volume_total_analysis_4sd)) %>%
  mutate(n_outliers_volume_total_4.721sd = sum(n_outliers_volume_total_analysis_4.721sd))

# Summarize (sum/count) volume outliers per analysis and subject
outliers_volume_analysis_storage_name <- outliers_volume %>%
  group_by(analysis, point_of_research, storage_name, .drop=FALSE) %>% # grouping important to count n(outliers) per analysis and storage_name
 summarize_at(vars(is.outlier_volume_2.698sd, 
                 is.outlier_volume_4sd, 
                 is.outlier_volume_4.721sd),
            funs(sum(., na.rm=TRUE))) %>% 
  rename(n_outliers_volume_2.698sd = is.outlier_volume_2.698sd,
         n_outliers_volume_4sd = is.outlier_volume_4sd,
         n_outliers_volume_4.721sd = is.outlier_volume_4.721sd) %>%
  ungroup() # resulting data_frame: each subject occurs once per analysis with number of outliers (0 to n) according to the 3 thresholds options, in total: each subject occurs 3x (3 analyses!)

# Outlier regions
regions_v <- outliers_volume %>%
  unite("hemi_region", c(hemi, region), sep = "_", remove = FALSE, na.rm = FALSE) %>%
  filter(is.outlier_volume_2.698sd == TRUE) %>%
  group_by(analysis, point_of_research, storage_name, .drop=FALSE) %>%
  summarize(outlier_regions_volume = paste(hemi_region, collapse=".")) %>%
  ungroup()

outliers_volume_analysis_storage_name <- full_join(outliers_volume_analysis_storage_name, regions_v, by=c("analysis", "point_of_research", "storage_name"))


# Next steps: for outlier table overview
# Threshold mean+-2698sd: number of subjects (storage_name) with >=1 volume outliers per analysis and point of research
n_outliers_volume_analysis_2.698sd <- outliers_volume_analysis_storage_name %>%
  group_by(analysis, point_of_research, .drop=FALSE) %>% # does not drop any groups without outliers (0) before counting (0 counts will occur in this case as the count of the referring group)!, cave: that is why group_by comes before filter
  filter(n_outliers_volume_2.698sd > 0) %>%
  summarize(n_outliers_volume_analysis_por_2.698sd = n()) %>% # por for point_of_research, number of subjects with outliers for individual study groups
  ungroup() %>% group_by(analysis) %>%
  mutate(n_outliers_volume_analysis_2.698sd = sum(n_outliers_volume_analysis_por_2.698sd)) # number of subjects with outliers per analysis

# Threshold mean+-4sd: number of subjects (storage_name) with >=1 volume outliers per analysis and point of research
n_outliers_volume_analysis_4sd <- outliers_volume_analysis_storage_name %>%
  group_by(analysis, point_of_research, .drop=FALSE) %>%
  filter(n_outliers_volume_4sd > 0) %>%
  summarize(n_outliers_volume_analysis_por_4sd = n()) %>%
  ungroup() %>% group_by(analysis, .drop=FALSE) %>%
  mutate(n_outliers_volume_analysis_4sd = sum(n_outliers_volume_analysis_por_4sd))

# Threshold mean+-4.721sd: number of subjects (storage_name) with >=1 volume outliers per analysis and point of research
n_outliers_volume_analysis_4.721sd <- outliers_volume_analysis_storage_name %>%
  group_by(analysis, point_of_research, .drop=FALSE) %>% 
  filter(n_outliers_volume_4.721sd > 0) %>%
  summarize(n_outliers_volume_analysis_por_4.721sd = n()) %>%
  ungroup() %>% group_by(analysis) %>%
  mutate(n_outliers_volume_analysis_4.721sd = sum(n_outliers_volume_analysis_por_4.721sd))
``` 

```{r outliersvolume02, results='hide', message=FALSE, warning=FALSE}
# Summarize volume outliers per substructure regions (thresholds: mean+/-2.698sd)
outliers_volume_analysis_region <- outliers_volume %>% 
  filter(is.outlier_volume_2.698sd == TRUE) %>% # filtering before grouping is fine (only regions with volume outliers should be listed, groups/regions without outliers might be dropped)
  group_by(analysis, point_of_research, region) %>%
  summarize(n_outliers_region = n()) %>%
  arrange(desc(n_outliers_region), .by_group=TRUE) %>%
  top_n(3) %>% # filter regions with greatest number of outliers
  summarize(top_regions = paste(region, collapse=", ")) %>% # collapse 3 rows to 1 cell
  ungroup()
  
# function head() also possible instead of top_n(), but only first 3 rows are selected (regardless of n(outliers), i.e. if n(outliers) of region in row 4 = region in row 3 => region in row 4 will not be selected)
``` 

**Volume outlier visualization via table and boxplots**  

```{r outliersvolume03, results='hide', include=TRUE, message=FALSE, warning=FALSE}
# Create tibble for volume outlier HTML output (kable)
outliers_volume_characteristics01 <- c("Total number",
                                     "Amygdala",
                                     "Hippocampus",
                                     "Thalamus",
                                     "Amygdala (sub)regions",
                                     "Hippocampal (sub)regions",
                                     "Thalamic (sub)regions",
                                     "Amygdala (sub)regions",
                                     rep("", 3),
                                     "Hippocampal (sub)regions",
                                     rep("", 3),
                                     "Thalamic (sub)regions",
                                     rep("", 3))

outliers_volume_characteristics02 <- c(rep("", 4),
                                       rep("All groups", 3),
                                       rep(c("acAN-T1", "HC", "acAN-T2", "recAN"), 3)) # specific order of groups is defined in data and data_na

outliers_volume_numeric_expression <- c(unique(outliers_volume_total$n_outliers_volume_total_2.698sd), # vector contains only 1 unique, but repeated value
                                        outliers_volume_total$n_outliers_volume_total_analysis_2.698sd,
                                        n_outliers_volume_analysis_2.698sd$n_outliers_volume_analysis_2.698sd[c(1,5,9)], # extract values by position (1 per analysis, data.frames for outliers_volume/_2/_3 have the same structure)
                                        n_outliers_volume_analysis_2.698sd$n_outliers_volume_analysis_por_2.698sd)

outliers_region_characteristics <- c(rep("", 7),
                                     outliers_volume_analysis_region$top_regions)

outliers_volume_2_numeric_expression <- c(unique(outliers_volume_total$n_outliers_volume_total_4sd),
                                        outliers_volume_total$n_outliers_volume_total_analysis_4sd,
                                        n_outliers_volume_analysis_4sd$n_outliers_volume_analysis_4sd[c(1,5,9)],
                                        n_outliers_volume_analysis_4sd$n_outliers_volume_analysis_por_4sd)

outliers_volume_3_numeric_expression <- c(unique(outliers_volume_total$n_outliers_volume_total_4.721sd),
                                        outliers_volume_total$n_outliers_volume_total_analysis_4.721sd,
                                        n_outliers_volume_analysis_4.721sd$n_outliers_volume_analysis_4.721sd[c(1,5,9)],
                                        n_outliers_volume_analysis_4.721sd$n_outliers_volume_analysis_por_4.721sd)

auxiliary_v <- c(n_regions$n_observations,
               n_regions$n_observations_amygdala,
               n_regions$n_observations_hippocampus,
               n_regions$n_observations_thalamus,
               rep(n_storage_name, 3),
               rep(c(n_groups$n_T1,
               n_groups$n_HC,
               n_groups$n_T2, 
               n_groups$n_recAN), 3))

percentage_v1 <- 100*(outliers_volume_numeric_expression/auxiliary_v)
percentage_v2 <- 100*(outliers_volume_2_numeric_expression/auxiliary_v)
percentage_v3 <- 100*(outliers_volume_3_numeric_expression/auxiliary_v)

outlier_volume_table <- tibble(outliers_volume_characteristics01, outliers_volume_characteristics02, outliers_volume_numeric_expression, percentage_v1, outliers_region_characteristics, outliers_volume_2_numeric_expression, percentage_v2, outliers_volume_3_numeric_expression, percentage_v3, auxiliary_v)
```

```{r table02, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
knitr::kable(outlier_volume_table, format = "html", digits = 2, col.names = c("Characteristics", " ", "n", "%", "(Sub)region ranking (most outliers)", "n", "%", "n", "%", "n(observations) resp. n(subjects)"), align = "l", caption = "Table for volume outliers") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", " ", "Thresholds to select cases for visual QC (cf. ENIGMA, Saemann et al.)"=3, "Thresholds according to Emily Clarke et al."=2, "Extreme outliers (hard detection criterion)"=2, " "), align="l") %>%
  add_header_above(c(" ", " ", "Volume outliers for mean+/-2.698sd"=3, "Volume outliers for mean+/-4sd"=2, "Volume outliers for mean+/-4.721sd"=2, "Auxiliary column"), align="l") %>%
  pack_rows("Total number of volume outliers out of all observations", 1, 4) %>%
  pack_rows("Number of subjects (storage_name) out of all participants with >=1 volume outlier(s)", 5, 7) %>%
  pack_rows("Number of subjects (storage_name) per study group (point_of_research) with >=1 volume outlier(s)", 8, 19) %>% 
  column_spec(3:4, bold=TRUE)
```

```{r figuresettings, results='hide', include=TRUE, message=FALSE, warning=FALSE}
plot_theme = theme(plot.title = element_text(size=18, face="bold"), # set uniform features of plot elements (text, legend ...)
                   strip.text = element_text(size=16), 
                   axis.text = element_text(size=16), 
                   axis.title = element_text(size=16), 
                   axis.line = element_line(color = "black"), 
                   legend.position = "right", 
                   legend.title = element_text(size=16), 
                   legend.text = element_text(size=16)) 

plot_theme_transparent = theme(plot.title = element_text(size=18, face="bold"), 
                   strip.text = element_text(size=16), 
                   axis.text = element_text(size=16), 
                   axis.title = element_text(size=16), 
                   axis.line = element_line(color = "black"), 
                   legend.position = "right", 
                   legend.title = element_text(size=16), 
                   legend.text = element_text(size=16),
                   legend.background = element_rect(fill="transparent"),
                   legend.box.background = element_rect(fill="transparent"),
                   panel.background = element_rect(fill="transparent"), 
                   plot.background = element_rect(fill="transparent", color=NA), 
                   panel.border = element_blank(),
                   panel.grid.major = element_blank(), 
                   panel.grid.minor = element_blank(),
                   strip.text.x = element_text(size=12),
                   strip.text.y = element_text(size=10),
                   strip.background = element_rect(color=NA, fill="grey90"))
``` 


**Volume outliers (deviation > mean+/-2.698sd which equals Q3+1.5IQR or Q1-1.5IQR) are jittered and displayed in star shape**  

```{r figurevolume01, fig.cap="Amygdala nuclei (+ whole amygdala): Boxplots displaying (sub)region volume measures of left and right brain hemispheres for individual study groups (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
data %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=point_of_research, y=measure, color=hemi)) +
  stat_boxplot(geom="errorbar", width=0.5, size=1, position=position_dodge(1)) + 
  geom_boxplot(aes(x=point_of_research, y=measure, color=hemi), lwd=1.25, fatten=1, outlier.shape=NA, position=position_dodge(1)) +
  geom_jitter(aes(group=hemi, color=hemi), data=filter(outliers_volume, analysis %in% "amygdala" & is.outlier_volume_2.698sd == TRUE), shape=8, size=1.5, position=position_jitterdodge(jitter.width=0.3, jitter.height=0.5, dodge.width=1)) +
  stat_summary(aes(group=hemi, color=hemi), geom="point", fun=mean, shape=10, size=5, color="black", position=position_dodge(1)) +
  scale_color_jama() + 
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Study groups and brain hemispheres are plotted separately") + 
  plot_theme_transparent +
  facet_wrap(~ region , scales="free")
#ggsave(path="figures", filename="boxplots_volume_amygdala.png", width=20, height=20)
```

```{r figurevolume02, fig.cap="Hippocampal subfields (+ whole hippocampus): Boxplots displaying (sub)region volume measures of left and right brain hemispheres for individual study groups (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
data %>% filter(analysis %in% "hippocampus") %>%
  ggplot(aes(x=point_of_research, y=measure, color=hemi)) +
  stat_boxplot(geom="errorbar", width=0.5, size=1, position=position_dodge(1)) + 
  geom_boxplot(aes(x=point_of_research, y=measure, color=hemi), lwd=1.25, fatten=1, outlier.shape=NA, position=position_dodge(1)) +
  geom_jitter(aes(group=hemi, color=hemi), data=filter(outliers_volume, analysis %in% "hippocampus" & is.outlier_volume_2.698sd == TRUE), shape=8, size=1.5, position=position_jitterdodge(jitter.width=0.3, jitter.height=0.5, dodge.width=1)) +
  stat_summary(aes(group=hemi, color=hemi), geom="point", fun=mean, shape=10, size=5, color="black", position=position_dodge(1)) +
  scale_color_jama() + 
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Study groups and brain hemispheres are plotted separately") + 
  plot_theme_transparent +
  facet_wrap(~ region , scales="free")
#ggsave(path="figures", filename="boxplots_volume_hippocampus.png", width=20, height=20)
```

```{r figurevolume03, fig.cap="Thalamic nuclei (+ whole thalamus): Boxplots displaying (sub)region volume measures of left and right brain hemispheres for individual study groups (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
data %>% filter(analysis %in% "thalamus") %>%
  ggplot(aes(x=point_of_research, y=measure, color=hemi)) +
  stat_boxplot(geom="errorbar", width=0.5, size=1, position=position_dodge(1)) + 
  geom_boxplot(aes(x=point_of_research, y=measure, color=hemi), lwd=1.25, fatten=1, outlier.shape=NA, position=position_dodge(1)) +
  geom_jitter(aes(group=hemi, color=hemi), data=filter(outliers_volume, analysis %in% "thalamus" & is.outlier_volume_2.698sd == TRUE), shape=8, size=1.5, position=position_jitterdodge(jitter.width=0.3, jitter.height=0.5, dodge.width=1)) +
  stat_summary(aes(group=hemi, color=hemi), geom="point", fun=mean, shape=10, size=5, color="black", position=position_dodge(1)) +
  scale_color_jama() + 
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Study groups and brain hemispheres are plotted separately") + 
  plot_theme_transparent +
  facet_wrap(~ region , scales="free")
#ggsave(path="figures", filename="boxplots_volume_thalamus.png", width=20, height=20)
```

## Outlier approach 2: Bilateral symmetry outliers of substructure regions  
Bilateral symmetry of substructures is considered as a second quality criterion apart from the above demonstrated volume outlier-guided approach. In line with recommendations by the ENIGMA-PTSD working group (Emily Clarke, 2019), correlation scatter plots between substructure volumes of left and right brain hemispheres were created, see below (outliers = scatter points that are noticeably outside of the general correlation trend or outside of the confidence ellipses). Even though the ENIGMA-PTSD QC recommendations focus on amygdala nuclei, the symmetry approach is likely to be suitable for hippocampal and thalamic segmentations, as well.  
Further, we computed a lateralization or laterality index (LI = (lh - rh)/(lh + rh) according to ENIGMA, Kong et al., 2020) for all participants and detected symmetry outliers (for subsequent visual QC, cut-off => mean+/-2.698sd => this range represents a confidence interval of approximately 99.3% according to the standard normal distribution). The "extreme outlier" cut-off (mean+/-4.721sd) was computed in addition.  
The symmetry approach was also implemented groupwise (study groups differentiated: acAN-T1, acAN-T2, recAN, HC).  

```{r outlierssymmetry01, results='hide', message=FALSE, warning=FALSE}
data_symmetry_hemi <- data %>%
  dplyr::select(-c(file, file_type)) %>% # dropping of columns "file" and "file_type" (performing spread() for reshaping the complete data.frame "data" would cause missing values in the newly generated columns "rh" and "lh", since the columns "file" and "file_type" in "data" contain distinct rows with "rh" and "lh" text elements (for amygdala and hippocampus) and, thus, cannot adequately be summarized to fewer rows)
  spread(hemi, measure) %>% # create 2 columns (hemi = key variable) for "rh" and "lh" measures separately (nrow = n(observations)/2, since each of the assessed substructures occurs bilaterally (2x))
  mutate(lh_rh_ratio = (lh/rh)) %>% # ratio lh/rh is computed
  mutate(lat_index = ((lh-rh)/(lh+rh))) %>% # laterality or lateralization index (according to ENIGMA)
  mutate(lh_rh_sum = (lh+rh)) %>% # sum of volumes of left and right hemispheres (possibly relevant for further analyses)
  mutate(lh_rh_average = ((lh+rh)/2)) %>% # average of volumes of left and right hemispheres (was used by Myrvang et al. (2018) for hippocampal subfield analyses in AN to reduce number of tests (alpha error))
  
  group_by(analysis, region, point_of_research) %>% # grouping for symmetry outlier detection
  mutate(lower_threshold = (mean(lat_index) - (2.698*sd(lat_index)))) %>%
  mutate(upper_threshold = (mean(lat_index) + (2.698*sd(lat_index)))) %>%
  mutate(is.outlier_symmetry_2.698sd = ifelse(lat_index<lower_threshold | lat_index>upper_threshold, TRUE, FALSE)) %>%
  mutate(lower_threshold_2 = (mean(lat_index) - (4*sd(lat_index)))) %>%
  mutate(upper_threshold_2 = (mean(lat_index) + (4*sd(lat_index)))) %>%
  mutate(is.outlier_symmetry_4sd = ifelse(lat_index<lower_threshold_2 | lat_index>upper_threshold_2, TRUE, FALSE)) %>%
  mutate(lower_threshold_3 = (mean(lat_index) - (4.721*sd(lat_index)))) %>% 
  mutate(upper_threshold_3 = (mean(lat_index) + (4.721*sd(lat_index)))) %>%
  mutate(is.outlier_symmetry_4.721sd = ifelse(lat_index<lower_threshold_3 | lat_index>upper_threshold_3, TRUE, FALSE)) %>%
  ungroup() %>%
  mutate(point_of_research = fct_relevel(point_of_research, c("T1", "HCW", "T2", "recAN"))) %>%
  mutate(analysis = fct_relevel(analysis, c("amygdala", "hippocampus", "thalamus")))
```

```{r outlierssymmetry02, results='hide', message=FALSE, warning=FALSE}
# Procedure identical to volume outliers, but outlier detection with lat index instead of measures of individual hemispheres!
# Count total number of symmetry outlier observations per analysis and globally
outliers_symmetry_total <- data_symmetry_hemi %>% 
  group_by(analysis) %>%
  summarize_at(vars(is.outlier_symmetry_2.698sd,
                    is.outlier_symmetry_4sd,
                    is.outlier_symmetry_4.721sd),
                funs(sum(., na.rm=TRUE))) %>% # n(outliers) per analysis
  rename(n_outliers_symmetry_total_analysis_2.698sd = is.outlier_symmetry_2.698sd,
         n_outliers_symmetry_total_analysis_4sd = is.outlier_symmetry_4sd,
         n_outliers_symmetry_total_analysis_4.721sd = is.outlier_symmetry_4.721sd) %>%
  mutate(n_outliers_symmetry_total_2.698sd = sum(n_outliers_symmetry_total_analysis_2.698sd)) %>% # n(outliers) globally
  mutate(n_outliers_symmetry_total_4sd = sum(n_outliers_symmetry_total_analysis_4sd)) %>%
  mutate(n_outliers_symmetry_total_4.721sd = sum(n_outliers_symmetry_total_analysis_4.721sd)) 

# Summarize (sum/count) symmetry outliers per analysis and subject
outliers_symmetry_analysis_storage_name <- data_symmetry_hemi %>%
  group_by(analysis, point_of_research, storage_name, .drop=FALSE) %>%
  summarize_at(vars(is.outlier_symmetry_2.698sd, 
                 is.outlier_symmetry_4sd, 
                 is.outlier_symmetry_4.721sd),
             funs(sum(., na.rm=TRUE))) %>% 
  rename(n_outliers_symmetry_2.698sd = is.outlier_symmetry_2.698sd,
         n_outliers_symmetry_4sd = is.outlier_symmetry_4sd,
         n_outliers_symmetry_4.721sd = is.outlier_symmetry_4.721sd) %>%
  ungroup()

# Outlier regions
regions_s <- data_symmetry_hemi %>%
  filter(is.outlier_symmetry_2.698sd == TRUE) %>%
  group_by(analysis, point_of_research, storage_name, .drop=FALSE) %>%
  summarize(outlier_regions_symmetry = paste(region, collapse=".")) %>%
  ungroup()

outliers_symmetry_analysis_storage_name <- full_join(outliers_symmetry_analysis_storage_name, regions_s, by=c("analysis", "point_of_research", "storage_name"))


# Next steps: for outlier table overview
# Threshold mean+-2698sd: number of subjects (storage_name) with >=1 symmetry outliers per analysis and point of research
n_outliers_symmetry_analysis_2.698sd <- outliers_symmetry_analysis_storage_name %>%
  group_by(analysis, point_of_research, .drop=FALSE) %>%
  filter(n_outliers_symmetry_2.698sd > 0) %>%
  summarize(n_outliers_symmetry_analysis_por_2.698sd = n()) %>%
  ungroup() %>% group_by(analysis) %>%
  mutate(n_outliers_symmetry_analysis_2.698sd = sum(n_outliers_symmetry_analysis_por_2.698sd))

# Threshold mean+-4sd: number of subjects (storage_name) with >=1 symmetry outliers per analysis and point of research
n_outliers_symmetry_analysis_4sd <- outliers_symmetry_analysis_storage_name %>%
  group_by(analysis, point_of_research, .drop=FALSE) %>%
  filter(n_outliers_symmetry_4sd > 0) %>%
  summarize(n_outliers_symmetry_analysis_por_4sd = n()) %>%
  ungroup() %>% group_by(analysis, .drop=FALSE) %>%
  mutate(n_outliers_symmetry_analysis_4sd = sum(n_outliers_symmetry_analysis_por_4sd))

# Threshold mean+-4.721sd: number of subjects (storage_name) with >=1 symmetry outliers per analysis and point of research
n_outliers_symmetry_analysis_4.721sd <- outliers_symmetry_analysis_storage_name %>%
  group_by(analysis, point_of_research, .drop=FALSE) %>% 
  filter(n_outliers_symmetry_4.721sd > 0) %>%
  summarize(n_outliers_symmetry_analysis_por_4.721sd = n()) %>%
  ungroup() %>% group_by(analysis) %>%
  mutate(n_outliers_symmetry_analysis_4.721sd = sum(n_outliers_symmetry_analysis_por_4.721sd))
``` 

```{r outlierssymmetry03, results='hide', message=FALSE, warning=FALSE}
# Summarize symmetry outliers per substructure regions (thresholds: mean+/-2.698sd)
outliers_symmetry_analysis_region <- data_symmetry_hemi %>% 
  filter(is.outlier_symmetry_2.698sd == TRUE) %>%
  group_by(analysis, point_of_research, region) %>%
  summarize(n_outliers_region = n()) %>%
  arrange(desc(n_outliers_region), .by_group=TRUE) %>%
  top_n(3) %>%
  summarize(top_regions_s = paste(region, collapse=", ")) %>%
  ungroup()
``` 

**Symmetry outlier visualization via table and scatter plots**  

```{r outlierssymmetry04, results='hide', include=TRUE, message=FALSE, warning=FALSE}
# Create tibble for volume outlier HTML output (kable)
outliers_symmetry_characteristics01 <- c("Total number",
                                     "Amygdala",
                                     "Hippocampus",
                                     "Thalamus",
                                     "Amygdala (sub)regions",
                                     "Hippocampal (sub)regions",
                                     "Thalamic (sub)regions",
                                     "Amygdala (sub)regions",
                                     rep("", 3),
                                     "Hippocampal (sub)regions",
                                     rep("", 3),
                                     "Thalamic (sub)regions",
                                     rep("", 3))

outliers_symmetry_characteristics02 <- c(rep("", 4),
                                       rep("All groups", 3),
                                       rep(c("acAN-T1", "HC", "acAN-T2", "recAN"), 3))

outliers_symmetry_numeric_expression <- c(unique(outliers_symmetry_total$n_outliers_symmetry_total_2.698sd),
                                        outliers_symmetry_total$n_outliers_symmetry_total_analysis_2.698sd,
                                        n_outliers_symmetry_analysis_2.698sd$n_outliers_symmetry_analysis_2.698sd[c(1,5,9)],
                                        n_outliers_symmetry_analysis_2.698sd$n_outliers_symmetry_analysis_por_2.698sd)

outliers_region_s_characteristics <- c(rep("", 7),
                                     outliers_symmetry_analysis_region$top_regions_s)

outliers_symmetry_2_numeric_expression <- c(unique(outliers_symmetry_total$n_outliers_symmetry_total_4sd),
                                        outliers_symmetry_total$n_outliers_symmetry_total_analysis_4sd,
                                        n_outliers_symmetry_analysis_4sd$n_outliers_symmetry_analysis_4sd[c(1,5,9)],
                                        n_outliers_symmetry_analysis_4sd$n_outliers_symmetry_analysis_por_4sd)

outliers_symmetry_3_numeric_expression <- c(unique(outliers_symmetry_total$n_outliers_symmetry_total_4.721sd),
                                        outliers_symmetry_total$n_outliers_symmetry_total_analysis_4.721sd,
                                        n_outliers_symmetry_analysis_4.721sd$n_outliers_symmetry_analysis_4.721sd[c(1,5,9)],
                                        n_outliers_symmetry_analysis_4.721sd$n_outliers_symmetry_analysis_por_4.721sd)

auxiliary_s <- c(n_regions$n_observations/2, # n_observations for symmetry tests (no distinct hemispheres) = 1/2*n_observations for volume tests (distinct rh and lh)
               n_regions$n_observations_amygdala/2,
               n_regions$n_observations_hippocampus/2,
               n_regions$n_observations_thalamus/2,
               rep(n_storage_name, 3),
               rep(c(n_groups$n_T1,
               n_groups$n_HC,
               n_groups$n_T2, 
               n_groups$n_recAN), 3))

percentage_s1 <- 100*(outliers_symmetry_numeric_expression/auxiliary_s)
percentage_s2 <- 100*(outliers_symmetry_2_numeric_expression/auxiliary_s)
percentage_s3 <- 100*(outliers_symmetry_3_numeric_expression/auxiliary_s)

outlier_symmetry_table <- tibble(outliers_symmetry_characteristics01, outliers_symmetry_characteristics02, outliers_symmetry_numeric_expression, percentage_s1, outliers_region_s_characteristics, outliers_symmetry_2_numeric_expression, percentage_s2, outliers_symmetry_3_numeric_expression, percentage_s3 , auxiliary_s)
```

```{r table03, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
knitr::kable(outlier_symmetry_table, format = "html", digits = 2, col.names = c("Characteristics", " ", "n", "%", "(Sub)region ranking (most outliers)", "n", "%", "n", "%", "n(observations) resp. n(subjects)"), align = "l", caption = "Table for symmetry outliers") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", " ", "Thresholds to select cases for visual QC (cf. ENIGMA, Saemann et al.)"=3, "Thresholds according to Emily Clarke et al."=2, "Extreme outliers (hard detection criterion)"=2, " "), align="l") %>%
  add_header_above(c(" ", " ", "Symmetry outliers for mean+/-2.698sd"=3, "Symmetry outliers for mean+/-4sd"=2, "Symmetry outliers for mean+/-4.721sd"=2, "Auxiliary column"), align="l") %>%
  pack_rows("Total number of symmetry outliers out of all observations", 1, 4) %>%
  pack_rows("Number of subjects (storage_name) out of all participants with >=1 symmetry outlier(s)", 5, 7) %>%
  pack_rows("Number of subjects (storage_name) per study group (point_of_research) with >=1 symmetry outlier(s)", 8, 19) %>% 
  column_spec(3:4, bold=TRUE)
```

```{r figuresymmetry01, fig.cap="Amygdala nuclei (+ whole amygdala): Symmetry (rh vs. lh) scatter plots for study groups and substructure regions including linear regression lines (with 95% confidence interval) and confidence ellipses (comprising 99.3% of observations) (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
# Create grouped scatter plots for amygdala
data_symmetry_hemi %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=lh, y=rh, group=point_of_research, color=point_of_research, shape=point_of_research)) +
  geom_point(aes(x=lh, y=rh, group=point_of_research, color=point_of_research, shape=point_of_research), size=1.5) +
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + # linear model for adding regression line, 95% confidence intervals are added by default
  stat_ellipse(level = 0.993) + # customized confidence level covered by the added ellipse (refers to new or contained observations within the ellipse, not equal to the linear model and confidence interval of the regression line), for 0.9965 see outlier detection strategy above
  scale_color_jama() + scale_fill_jama() + 
  ylab("Right brain hemisphere volumes in mm^3") + 
  xlab("Left brain hemisphere volumes in mm^3") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_symmetry_amygdala.png", width=20, height=20) # save as .png
``` 

```{r figuresymmetry02, fig.cap="Hippocampal subfields (+ whole hippocampus): Symmetry (rh vs. lh) scatter plots for study groups and substructure regions including linear regression lines (with 95% confidence interval) and confidence ellipses (comprising 99.3% of observations) (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
data_symmetry_hemi %>% filter(analysis %in% "hippocampus") %>%
  ggplot(aes(x=lh, y=rh, group=point_of_research, color=point_of_research, shape=point_of_research)) +
  geom_point(aes(x=lh, y=rh, group=point_of_research, color=point_of_research, shape=point_of_research), size=1.5) +
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_ellipse(level = 0.993) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("Right brain hemisphere volumes in mm^3") + 
  xlab("Left brain hemisphere volumes in mm^3") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_symmetry_hippocampus.png", width=20, height=20)
``` 

```{r figuresymmetry03, fig.cap="Thalamic nuclei (+ whole thalamus): Symmetry (rh vs. lh) scatter plots for study groups and substructure regions including linear regression lines (with 95% confidence interval) and confidence ellipses (comprising 99.3% of observations) (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
data_symmetry_hemi %>% filter(analysis %in% "thalamus") %>%
  ggplot(aes(x=lh, y=rh, group=point_of_research, color=point_of_research, shape=point_of_research)) +
  geom_point(aes(x=lh, y=rh, group=point_of_research, color=point_of_research, shape=point_of_research), size=1.5) +
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_ellipse(level = 0.993) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("Right brain hemisphere volumes in mm^3") + 
  xlab("Left brain hemisphere volumes in mm^3") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_symmetry_thalamus.png", width=20, height=20)
``` 

## Outlier approach 3: Image quality outliers  
NB: Larger CNRs or SNRs are favorable and represent higher scan quality. Outlier cut-off: mean-2.698sd (see also volume and symmetry outlier detection, but - here - only values < lower threshold are classified as outliers).  
Image quality outlier detection was also done groupwise.  

```{r outliersquality, results='hide', message=FALSE, warning=FALSE}
outliers_quality <- data %>% 
  dplyr::select(storage_name, analysis, point_of_research, cnr_total, snr) %>%
  group_by(point_of_research) %>% # groupwise outlier detection
  mutate(lower_threshold_snr = (mean(snr) - (2.698*sd(snr)))) %>% # only "low" outliers (< lower threshold)
  mutate(is.outlier_snr = ifelse(snr<lower_threshold_snr, TRUE, FALSE)) %>% 
  mutate(lower_threshold_cnr = (mean(cnr_total) - (2.698*sd(cnr_total)))) %>%
  mutate(is.outlier_cnr = ifelse(cnr_total<lower_threshold_cnr, TRUE, FALSE)) %>%
  ungroup()

outliers_quality_analysis_storage_name <- outliers_quality %>%
  group_by(analysis) %>% 
  distinct(storage_name, .keep_all=TRUE) %>%
  dplyr::select(analysis, point_of_research, storage_name, is.outlier_cnr, is.outlier_snr) %>%
  ungroup() 

n_outliers_quality <- outliers_quality_analysis_storage_name %>% distinct(storage_name, .keep_all = TRUE) %>% 
  filter(is.outlier_cnr == TRUE | is.outlier_snr == TRUE) %>% 
  nrow()
``` 

**Summary**: In total, `r n_outliers_quality` subjects (or storage_names) with quality outliers in CNR or SNR were detected.  

### Scatter plot visualization of the potential influence of CNR on (sub)region volumes {#scatterquality}  
*(Cave: Since CNR and SNR reflect the overall image quality, substructure measures of both brain hemispheres were summarized (sum lh + rh) and plotted against CNR or SNR.)*  
See Appendix Figures \@ref(fig:figurequality03), \@ref(fig:figurequality04), \@ref(fig:figurequality05) and \@ref(fig:figurequality06) for scatter plots of hippocampal and thalamic (sub)regions by CNR or SNR.  

```{r figurequality01, fig.cap="Amygdala nuclei (+ whole amygdala): Scatter plots of substructure measures plotted by CNR (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
data_symmetry_hemi %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=cnr_total,  y=lh_rh_sum, group=point_of_research, color=point_of_research)) +
  geom_point(aes(x=cnr_total, y=lh_rh_sum, group=point_of_research, color=point_of_research), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + 
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) + 
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3 (sum lh + rh)") + 
  xlab("CNR") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_amygdala_cnr.png", width=20, height=20)
```

```{r figurequality02, fig.cap="Amygdala nuclei (+ whole amygdala): Scatter plots of substructure measures plotted by SNR (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
data_symmetry_hemi %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=snr, y=lh_rh_sum, group=point_of_research, color=point_of_research)) +
  geom_point(aes(x=snr, y=lh_rh_sum, group=point_of_research, color=point_of_research), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + 
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) + 
  scale_color_jama() + scale_fill_jama() +
  ylab("(Sub)region volumes in mm^3 (sum lh + rh)") + 
  xlab("SNR") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_amygdala_snr.png", width=20, height=20)
```

### Conclusion  
Correlational trends between (sub)region volumes and image quality measures are heterogeneous across subregions and analyses (amygdala, hippocampus, thalamus; observed trend: higher CNR or SNR ~ smaller (sub)region volumes). It is **suspicious** that acAN-T1 participants seem to have relatively higher CNRs than the other study groups, which - theoretically - refers to better image quality/less head motion or body movements in the scanner (possibly due to their perfectionism and high body control levels). A significant confounding role of CNR or SNR on substructure measures cannot be excluded.  
The main factors affecting CNR (Backhausen et al., 2016) or SNR (Havsteen et al., 2017) are imperfections in the MR system, the procedure of image processing and participant-specific body/head or respiratory movements (motion artifacts).   

## (Substructure size ranking - we did not use this)  
Additional QC criterion established by Saemann et al. (2016 & 2020) for hippocampal subfields, where a robust size or volume ranking is known (e.g. CA1 = largest region, tail = 3rd position, subiculum = 4th position).  
To my knowledge, robust volume rankings are not available for both amygdala and thalamic nuclei. **Thus, we might want to omit the third approach, given we plan a coherent QC strategy for all examined substructures.**  

## Generate a joint outlier data.frame for subsequent visual QC (outliers_combined)  
Volume, symmetry and scan quality outliers are combined in one data.frame (per analysis) and in an "amyghippo" data.frame.  
**Note that we will visually QC the extreme volume or symmetry outlier cases via FreeView again (EDIT), general QC rating 3 or CNR or SNR outliers will be apriori excluded, however! All subjects with amyghippo segmentations will receive a rapid - snapshot based - visual QC regardless of their outlier status.**  

```{r outlierscombined01, results='hide', message=FALSE, warning=FALSE}
outliers_combined <- full_join(outliers_volume_analysis_storage_name, outliers_symmetry_analysis_storage_name,
                               by=c("storage_name", "point_of_research", "analysis")) %>% # dplyr::full_join by "storage_name", "point_of_research" and "analysis" (these variables exist in both volume and symmetry outlier data.fames)
  full_join(outliers_quality_analysis_storage_name, by=c("storage_name", "point_of_research", "analysis")) %>%
  dplyr::select(-c(n_outliers_volume_4sd, n_outliers_symmetry_4sd))

# Number of subjects with outliers (+/-2.698sd, +/-4sd, +/-4.721sd, combined outlier sum) per analysis
outliers_combined_analysis <- outliers_combined %>%
  group_by(analysis) %>%
  mutate(is.outliers_combined_2.698sd = ifelse((n_outliers_volume_2.698sd > 0) | 
                                         (n_outliers_symmetry_2.698sd > 0), 
                                       TRUE, FALSE)) %>%
  mutate(n_outliers_combined_2.698sd = sum(is.outliers_combined_2.698sd, na.rm=TRUE)) %>%
  mutate(is.outliers_combined_sum = ifelse((n_outliers_volume_2.698sd + n_outliers_symmetry_2.698sd) >= 2, 
                                            TRUE, FALSE)) %>%
  mutate(n_outliers_combined_sum = sum(is.outliers_combined_sum, na.rm=TRUE)) %>%
  mutate(is.outliers_combined_4.721sd = ifelse((n_outliers_volume_4.721sd > 0) | 
                                                 (n_outliers_symmetry_4.721sd > 0), 
                                               TRUE, FALSE)) %>%
  mutate(n_outliers_combined_4.721sd = sum(is.outliers_combined_4.721sd, na.rm=TRUE)) %>%
  ungroup()

# Generate data.frame for visual QC of Thalamus
smriqc_general <- read_csv("data/redcap_do_not_delete/smriqc_general.csv")

outliers_combined_thalamus_1 <- outliers_combined_analysis %>% 
  filter(analysis %in% "thalamus")

outliers_combined_thalamus_2 <- data %>%
  dplyr::select(storage_name, participant_id, redcap_event_name) %>%
  distinct(storage_name, .keep_all = TRUE) %>%
  right_join(outliers_combined_thalamus_1, by="storage_name") %>%
  left_join(smriqc_general, by=c("participant_id", "redcap_event_name")) %>%
  mutate(repeat_general_qc = ifelse(is.na(mriqc_smri_summary), TRUE, FALSE)) %>%
  mutate(apriori_remove = ifelse((mriqc_smri_summary == 3) | (is.outliers_combined_4.721sd == TRUE) | # Note that we will visually QC the extreme volume or symmetry outlier cases via FreeView again (EDIT), general QC rating 3 or CNR or SNR outliers will be apriori excluded, however
                                  (is.outlier_cnr == TRUE) | (is.outlier_snr == TRUE), 
                                TRUE, FALSE)) %>%
  mutate(visual_qc = ifelse((apriori_remove != TRUE) & (is.outliers_combined_sum == TRUE), 
                            TRUE, FALSE)) %>%
  mutate(mriqc_smri_thal = ifelse((apriori_remove == TRUE), 1,
                                         ifelse((visual_qc != TRUE), 1,
                                                NA))) %>%
  mutate(mriqc_smri_thal_date = ifelse((apriori_remove == TRUE), "2020-12-01",
                                         ifelse((visual_qc != TRUE), "2020-12-01",
                                                NA))) %>%
  mutate(mriqc_smri_thal_investigator = ifelse((apriori_remove == TRUE), "FG",
                                         ifelse((visual_qc != TRUE), "FG",
                                                NA))) %>%
  mutate(mriqc_smri_thal_segcomplete = ifelse((apriori_remove == TRUE), 1,
                                         ifelse((visual_qc != TRUE), 1,
                                                NA))) %>%
  mutate(mriqc_smri_thal_summary = ifelse((apriori_remove == TRUE), 9,
                                         ifelse((visual_qc != TRUE), 1,
                                                NA))) %>%
  mutate(mriqc_smri_thal_summarycom = ifelse((apriori_remove == TRUE), "Case was apriori removed without visual QC", # Note that we will visually QC the extreme volume or symmetry outlier cases via FreeView again (EDIT), general QC rating 3 or CNR or SNR outliers will be apriori excluded, however.
                                         ifelse((visual_qc != TRUE),"",
                                                NA))) %>%
  mutate(mri_qc_smri_complete = ifelse((apriori_remove == TRUE), 2,
                                         ifelse((visual_qc != TRUE), 2,
                                                NA)))

# Select relevant variables for QC-.csv
qc_thalamus <- outliers_combined_thalamus_2 %>%
  dplyr::select(storage_name, participant_id, redcap_event_name, 
         n_outliers_volume_2.698sd, n_outliers_volume_4.721sd, outlier_regions_volume,
         n_outliers_symmetry_2.698sd, n_outliers_symmetry_4.721sd, outlier_regions_symmetry, 
         is.outlier_cnr, is.outlier_snr, 
         mriqc_smri_summary, repeat_general_qc, apriori_remove, visual_qc, 
         mriqc_smri_thal, mriqc_smri_thal_date, mriqc_smri_thal_investigator, mriqc_smri_thal_segcomplete,
         mriqc_smri_thal_summary, mriqc_smri_thal_summarycom, mri_qc_smri_complete)
#write_csv(qc_thalamus, file="data/data_temporary/qc_thalamus.csv", append=FALSE)



# Selection of cases for combined amygdala + hippocampus visual QC
outliers_combined_amygdala <- outliers_combined %>%
  filter(analysis %in% "amygdala") %>%
  rename(n_outliers_volume_amygdala_2.698sd = n_outliers_volume_2.698sd, # rename outlier columns before joining
         n_outliers_volume_amygdala_4.721sd = n_outliers_volume_4.721sd,
         outlier_regions_volume_amygdala = outlier_regions_volume,
         n_outliers_symmetry_amygdala_2.698sd = n_outliers_symmetry_2.698sd,
         n_outliers_symmetry_amygdala_4.721sd = n_outliers_symmetry_4.721sd,
         outlier_regions_symmetry_amygdala = outlier_regions_symmetry) %>%
  dplyr::select(-analysis) # drop analysis column before joining

outliers_combined_hippocampus <- outliers_combined %>%
  filter(analysis %in% "hippocampus") %>%
  rename(n_outliers_volume_hippocampus_2.698sd = n_outliers_volume_2.698sd,
         n_outliers_volume_hippocampus_4.721sd = n_outliers_volume_4.721sd,
         outlier_regions_volume_hippocampus = outlier_regions_volume,
         n_outliers_symmetry_hippocampus_2.698sd = n_outliers_symmetry_2.698sd,
         n_outliers_symmetry_hippocampus_4.721sd = n_outliers_symmetry_4.721sd,
         outlier_regions_symmetry_hippocampus = outlier_regions_symmetry) %>%
  dplyr::select(-analysis)

outliers_combined_amyghippo_1 <- full_join(outliers_combined_amygdala, outliers_combined_hippocampus, 
                                         by=c("storage_name", "point_of_research", "is.outlier_cnr",
                                              "is.outlier_snr")) %>%
  mutate(is.outliers_combined_amyghippo_2.698sd = ifelse((n_outliers_volume_amygdala_2.698sd > 0) | 
                                                   (n_outliers_symmetry_amygdala_2.698sd > 0) | 
                                                   (n_outliers_volume_hippocampus_2.698sd > 0) | 
                                                   (n_outliers_symmetry_hippocampus_2.698sd > 0), 
                                                 TRUE, FALSE)) %>%
  mutate(n_outliers_combined_amyghippo_2.698sd = sum(is.outliers_combined_amyghippo_2.698sd, na.rm=TRUE)) %>%
  mutate(is.outliers_combined_amyghippo_sum = ifelse((n_outliers_volume_amygdala_2.698sd +
                                                        n_outliers_symmetry_amygdala_2.698sd + 
                                                        n_outliers_volume_hippocampus_2.698sd +
                                                        n_outliers_symmetry_hippocampus_2.698sd) >= 2,
                                             TRUE, FALSE)) %>%
  mutate(n_outliers_combined_amyghippo_sum = sum(is.outliers_combined_amyghippo_sum, na.rm=TRUE)) %>%
  mutate(is.outliers_combined_amyghippo_4.721sd = ifelse((n_outliers_volume_amygdala_4.721sd > 0) | 
                                                           (n_outliers_symmetry_amygdala_4.721sd > 0) |
                                                           (n_outliers_volume_hippocampus_4.721sd > 0) |
                                                           (n_outliers_symmetry_hippocampus_4.721sd > 0), 
                                                         TRUE, FALSE)) %>%
  mutate(n_outliers_combined_amyghippo_4.721sd = sum(is.outliers_combined_amyghippo_4.721sd, na.rm=TRUE)) %>%
  mutate(freeview = ifelse((is.outliers_combined_amyghippo_sum == TRUE) | (is.outliers_combined_amyghippo_4.721sd == TRUE),
                           TRUE, FALSE))

outliers_combined_amyghippo_2 <- data %>%
  dplyr::select(storage_name, participant_id, redcap_event_name) %>%
  distinct(storage_name, .keep_all = TRUE) %>%
  right_join(outliers_combined_amyghippo_1, by="storage_name") %>%
  left_join(smriqc_general, by=c("participant_id", "redcap_event_name")) %>%
  mutate(repeat_general_qc = ifelse(is.na(mriqc_smri_summary), TRUE, FALSE)) %>%
  mutate(apriori_remove = ifelse((mriqc_smri_summary == 3) | (is.outliers_combined_amyghippo_4.721sd == TRUE) |
                                  (is.outlier_cnr == TRUE) | (is.outlier_snr == TRUE), 
                                TRUE, FALSE)) %>%
  mutate(visual_qc = ifelse((apriori_remove != TRUE) & (is.outliers_combined_amyghippo_sum == TRUE), 
                            TRUE, FALSE)) %>%
  filter(point_of_research %in% c("T1", "HCW")) %>%
  mutate(qc_freeview = ifelse((mriqc_smri_summary != 3) & (is.outlier_cnr == FALSE) & (is.outlier_snr == FALSE) & 
                                (freeview ==TRUE), TRUE, FALSE)) %>% 
  mutate(n_freeview = sum(qc_freeview, na.rm=TRUE)) %>%
  mutate(outliers2 = ifelse((mriqc_smri_summary != 3) & (is.outlier_cnr == FALSE) & (is.outlier_snr == FALSE) &
                                (is.outliers_combined_amyghippo_sum == TRUE), TRUE, FALSE)) %>%
  mutate(n_outliers2 = sum(outliers2, na.rm=TRUE)) %>%
  mutate(extreme = ifelse((mriqc_smri_summary != 3) & (is.outlier_cnr == FALSE) & (is.outlier_snr == FALSE) &
                            (is.outliers_combined_amyghippo_sum == FALSE) & (is.outliers_combined_amyghippo_4.721sd ==
                                                                               TRUE), TRUE, FALSE)) %>%
  mutate(n_extreme = sum(extreme, na.rm=TRUE)) %>%
  mutate(mriqc_smri_amhc = ifelse((apriori_remove == TRUE), 1,
                                         ifelse((visual_qc != TRUE), 1,
                                                NA))) %>%
  mutate(mriqc_smri_amhc_date = ifelse((apriori_remove == TRUE), "2020-12-01",
                                         ifelse((visual_qc != TRUE), "2020-12-01",
                                                NA))) %>%
  mutate(mriqc_smri_amhc_investigator = ifelse((apriori_remove == TRUE), "MLW",
                                         ifelse((visual_qc != TRUE), "MLW",
                                                NA))) %>%
  mutate(mriqc_smri_amhc_segcomplete = ifelse((apriori_remove == TRUE), 1,
                                         ifelse((visual_qc != TRUE), 1,
                                                NA))) %>%
  mutate(mriqc_smri_amhc_summary = ifelse((apriori_remove == TRUE), 9,
                                         ifelse((visual_qc != TRUE), 1,
                                                NA))) %>%
  mutate(mriqc_smri_amhc_summarycom = ifelse((apriori_remove == TRUE), "Case was apriori removed without visual QC",
                                             ifelse((visual_qc != TRUE), "",
                                                NA))) %>%
  mutate(mri_qc_smri_complete = ifelse((apriori_remove == TRUE), 2,
                                         ifelse((visual_qc != TRUE), 2,
                                                NA)))

# Select relevant variables for QC-.csv
qc_amyghippo <- outliers_combined_amyghippo_2 %>%
  dplyr::select(storage_name, participant_id, redcap_event_name, 
         n_outliers_volume_amygdala_2.698sd, n_outliers_volume_amygdala_4.721sd, 
         outlier_regions_volume_amygdala,
         n_outliers_symmetry_amygdala_2.698sd, n_outliers_symmetry_amygdala_4.721sd,
         outlier_regions_symmetry_amygdala, 
         n_outliers_volume_hippocampus_2.698sd, n_outliers_volume_hippocampus_4.721sd,
         outlier_regions_volume_hippocampus,
         n_outliers_symmetry_hippocampus_2.698sd, n_outliers_symmetry_hippocampus_4.721sd,
         outlier_regions_symmetry_hippocampus,
         is.outlier_cnr, is.outlier_snr,
         mriqc_smri_summary, repeat_general_qc, apriori_remove, visual_qc, 
         mriqc_smri_amhc, mriqc_smri_amhc_date, mriqc_smri_amhc_investigator, mriqc_smri_amhc_segcomplete,
         mriqc_smri_amhc_summary, mriqc_smri_amhc_summarycom, mri_qc_smri_complete)
#write_csv(qc_amyghippo, file="data/data_temporary/qc_amyghippo.csv", append=FALSE)  
```                                             

**Binomial distribution to determine outlier cut-off (X >= x volume or symmetry outliers to select cases for visual QC)**  

```{r outlierscombined02, results='hide', include=TRUE, message=FALSE, warning=FALSE}
binomial_characteristics01 <- c("n(amygdala + hippocampus)",
                              "n(thalamus)",
                              "p",
                              "P(X>x)",
                              "x(amygdala + hippocampus)",
                              "x(thalamus)",
                              "X(amygdala + hippocampus)",
                              "X(thalamus)")

binomial_characteristics02 <- c("1 subject: 10 amygdala (sub)regions per hemisphere, 10 amygdala symmetry tests, 
                                22 hippocampal (sub)regions per hemisphere, 22 hippocampal symmetry tests",
                                "1 subject: 26 (sub)regions per hemisphere, 26 symmetry tests",
                                "Probability of an outlier observation: mean+/-2.698sd 
                                (outlier detection thresholds) represent 99.3% of observations 
                                according to the Gaussian Normal Distribution => p(outlier)=0.7%",
                                "P - The probability of > x volume or symmetry outliers per subject is set to 5%, i.e.
                                95% of subjects have <= x outliers.",
                                "x = integer, number of volume or symmetry outliers per subject for combined amygdala 
                                and hippocampus analyses",
                                "x = integer, number of volume or symmetry outliers per subject for thalamus",
                                "X = x + 1, outlier cut-off for visual QC of amygdala and hippocampus: subjects with >= X 
                                volume or symmetry outliers will undergo visual QC",
                                "X = x + 1, outlier cut-off for visual QC of thalamus: subjects with >= X 
                                volume or symmetry outliers will undergo visual QC")

# 2*n_regions for distinct volume tests + 1*n_regions for distinct symmetry tests
n_amyghippo <- 3*(n_regions$n_regions_amygdala + n_regions$n_regions_hippocampus) 
n_thalamus <- 3*n_regions$n_regions_thalamus

# Cumulative distribution function to calculate p
sd <- 2.698 # outlier thresholds (mild statistical outliers)
p <- 2 * (1 - pnorm(sd)) 
P <- 0.05 %>% formatC(format="f", digits=2)

# binomial distribution
x1_amyghippo <- 1
pbinom(x1_amyghippo, size=n_amyghippo, prob=p, lower.tail=FALSE) # amyghippo, P(X>x) should approach 5%
x2_amyghippo <- 2
pbinom(x2_amyghippo, size=n_amyghippo, prob=p, lower.tail=FALSE)

x1_thalamus <- 1
pbinom(x1_thalamus, size=n_thalamus, prob=p, lower.tail=FALSE) # thalamus, P(X>x) should approach 5%
x2_thalamus <- 2
pbinom(x2_thalamus, size=n_thalamus, prob=p, lower.tail=FALSE)


binomial_numeric_expression <- c(n_amyghippo %>% formatC(format="d", digits=0),
                                 n_thalamus %>% formatC(format="d", digits=0),
                                 p %>% formatC(format="f", digits=4),
                                 P,
                                 x1_amyghippo,
                                 x1_thalamus,
                                 x1_amyghippo + 1,
                                 x1_thalamus + 1)

outlier_binomial_table <- tibble(binomial_characteristics01, binomial_characteristics02, binomial_numeric_expression)
```

```{r table04, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
knitr::kable(outlier_binomial_table, format = "html", col.names = c("Characteristics of binomial distribution equation", "Short description", "Numeric expression"), align = "l", caption = "Cut-off determination via binomial distribution") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  pack_rows("Parameter n - number of observations per subject with the chance of outliers occurring", 1, 2) %>%
  pack_rows("Parameter p", 3, 3) %>%
  pack_rows("Parameter P", 4, 4) %>%
  pack_rows("Parameter x - number of volume or symmetry outliers per subject so that P(X>x) approaches the set value of 5%", 5, 6) %>%
  pack_rows("X represents cut-off (>= X combined outliers) per subject for subsequent visual QC", 7, 8) %>%
  row_spec(7:8, bold=TRUE)
```

**We chose the more conservative cut-off options: Amyghippo: P(X>1)=0.14, P(X>2)=0.03 (we chose X>1, i.e. >= 2 outliers as cut-off, since P(X>2) falls below 5%); Thalamus: P(X>1)=0.10, P(X>2)=0.02 (we chose X>1, i.e. >= 2 outliers as cut-off, since P(X>2) falls below 5%).**  

```{r outlierscombined03, results='hide', include=TRUE, message=FALSE, warning=FALSE}
# Create tibble for combined outliers
outliers_combined_characterics <- c("Amyghippo QC",
                                    "Thalamus QC")

outliers_combined01 <- c(unique(outliers_combined_amyghippo_1$n_outliers_combined_amyghippo_2.698sd),
                         unique(outliers_combined_thalamus_1$n_outliers_combined_2.698sd)) # vector contains only 1 unique, but repeated value

outliers_combined02 <- c(unique(outliers_combined_amyghippo_1$n_outliers_combined_amyghippo_sum),
                         unique(outliers_combined_thalamus_1$n_outliers_combined_sum))

outliers_combined03 <- c(unique(outliers_combined_amyghippo_1$n_outliers_combined_amyghippo_4.721sd),
                         unique(outliers_combined_thalamus_1$n_outliers_combined_4.721sd))

auxiliary_c <- c(rep(n_storage_name, 2))

percentage_c1 <- c(100*(outliers_combined01/auxiliary_c))
percentage_c2 <- c(100*(outliers_combined02/auxiliary_c))
percentage_c3 <- c(100*(outliers_combined03/auxiliary_c))

outlier_combined_table <- tibble(outliers_combined_characterics, outliers_combined01, percentage_c1, outliers_combined02, percentage_c2, outliers_combined03, percentage_c3, auxiliary_c)
```                                         

```{r table05, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
knitr::kable(outlier_combined_table, format = "html", digits=2, col.names = c("QC arms", "n(subjects) for visual QC", "% of all subjects", "n(subjects) for visual QC", "% of all subjects", "n(subjects) for detailed visual QC (extreme outlier cases)", "% of all subjects", "Total n(subjects)"), align = "l", caption = "Selection of cases for visual QC") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(italic=T, color="grey", c("Criteria", ">= 1 volume or symmetry outlier(s) per subject (thresholds: mean+/-2.698sd)"=2, ">= 2 volume or symmetry outliers per subject (thresholds: mean+/-2.698sd, via binomial distribution, see table above)"=2, ">= 1 volume or symmetry outlier(s) per subject (thresholds: mean+/-4.721sd)"=2, ""), align="l") %>%
  add_header_above(c("", "Option 1 for visual QC"=2, "Option 2 for visual QC"=2, "Detailed visual QC (extreme outliers)"=2, "Auxiliary"), align="l")
```

## Conclusions for our QC procedure  
1. Amygdala and hippocampus (+ subregions) will be QCed together, thalamus separately. Due to our reasonable and combined outlier detection criteria (volume + symmetry + scan quality), our detailed visual QC focuses on flagged outliers (via FeeView).  
2. However, all FreeSurfer segmentations (amyghippo, thalamus; i.e. from all subjects, also without outliers) that have already passed our general cortical and subcortical QC will be inspected via HTML snapshots (rapidly, maximum 30 seconds per segmentation).  
2. Before starting the outlier QC via FreeView, it is important to visually QC a series of approximately 20 subjects from different study groups without any outliers to examine the segmentation success in these cases (any abnormalities?) and as a reference for the QC of suspicious subjects (with outliers).  
3. Scan quality outliers (CNR, SNR) should be excluded (threshold: < mean - 2.698sd, only "low" outliers).  
4. Thresholds to select cases for visual QC: mean +/-2.698sd (mild outliers). Option 1 for visual QC is too sensitive or stringent (too many subjects selected for visual QC). Option 2 for visual QC is preferred because of (A) its good outlier detection sensitivity, (B) its feasibility and (C) the objectivity of cut-off setting (binomial distribution, i.e. no arbitrary cut-off). In case of misapplied segmentation, isolated outliers in amygdala/hippocampus/thalamus are unusual. Each case with >=1 extreme volume or symmetry outlier(s) (mean +/- 4.721sd) must undergo detailed visual QC.  
5. All of the above listed suggestions do not take the relevance of outliers in certain subregions into account (all subregions are treated equally). Since detailed literature on substructure QC and critical outliers does not exist to date and we plan to analyze all subregions of the amygdala/hippocampus/thalamus, it might not be necessary to introduce a subregion relevance ranking for outliers. However, during visual QC, it might at least be useful to pay special attention to certain subregions with many outliers occurring, e.g. to the medial and central nucleus of the amygdala (see Tables \@ref(tab:table02) and \@ref(tab:table03)). Especially small subregions are concerned and tend to have more outliers than larger subregions (resolution/precision of FreeSurfer processing?).  

## Results documentation of amyghippo QC  
Amyghippo QC was conducted (visual QC via FreeView after apriori inclusion and exclusion of cases with complete general QC), results were documented in a csv-file which was imported into REDCap (see also [here](#redcapupload) for redcap upload).  

```{r outlierssummaryall, results='asis', echo=TRUE, message=FALSE, warning=FALSE}
# Join of data.frame data and amyghippo QC results
amyghippo_qced <- read_csv("data/redcap_do_not_delete/amyghippo_qced.csv")

qcdata <- data %>%
  left_join(amyghippo_qced, by=c("storage_name", "participant_id", "redcap_event_name")) %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  mutate(remove_quality = ifelse((is.outlier_cnr == TRUE) | (is.outlier_snr == TRUE),
                                 TRUE, FALSE)) %>%
  mutate(remove_general_qc = ifelse((remove_quality == FALSE) & (mriqc_smri_summary == 3),
                                    TRUE, FALSE)) %>%
  group_by(point_of_research, .drop=FALSE) %>% 
  mutate(study_groups = n()) %>% 
  mutate(n_remove_quality_groupwise = sum(remove_quality)) %>%
  mutate(n_general_qc_groupwise = study_groups - sum(remove_quality)) %>%
  mutate(n_remove_general_qc_groupwise = sum(remove_general_qc)) %>%
  mutate(n_visual_qc_groupwise = study_groups - sum(remove_quality) - sum(remove_general_qc)) %>%
  mutate(n_visual_exclude_groupwise = sum(mriqc_smri_amhc_summary == 9) - sum(remove_quality) - sum(remove_general_qc)) %>%
  ungroup() %>%
  mutate(n_remove_quality = sum(remove_quality)) %>%
  mutate(n_general_qc = n_storage_name - n_remove_quality) %>%
  mutate(n_remove_general_qc = sum(remove_general_qc)) %>%
  mutate(n_visual_qc = n_storage_name - n_remove_quality - n_remove_general_qc) %>%
  mutate(n_visual_exclude = sum(mriqc_smri_amhc_summary == 9) - n_remove_quality - n_remove_general_qc) %>%
  mutate(n_include = sum(mriqc_smri_amhc_summary == 1))
    
qcsummary <- qcdata %>%
  dplyr::select(point_of_research, study_groups, n_remove_quality, n_remove_quality_groupwise, n_general_qc,
                n_general_qc_groupwise, n_remove_general_qc, n_remove_general_qc_groupwise, n_visual_qc, 
                n_visual_qc_groupwise, n_visual_exclude, n_visual_exclude_groupwise, n_include) %>%
  distinct(point_of_research, .keep_all=TRUE) %>%
  mutate(point_of_research = fct_relevel(point_of_research, c("T1", "HCW", "T2", "recAN"))) %>%
  arrange(point_of_research)

qcstatistics_characteristics <- c("Step 1: n(subjects) apriori removed due to scan quality outliers (SNR or CNR, 
                                  threshold: mean - 2.698sd)",
                                  "... acAN-T1",
                                  "... HC",
                                  "... acAN-T2",
                                  "... recAN",
                                  "Step 2 (after scan quality removals): n(subjects) apriori removed due to 
                                  artifacts in general cortical and subcortical QC",
                                  "... acAN-T1",
                                  "... HC",
                                  "... acAN-T2",
                                  "... recAN",
                                  "n(subjects) selected for visual QC after apriori exclusions",
                                  "n(subjects) excluded during visual QC",
                                  "... acAN-T1",
                                  "... HC",
                                  "... acAN-T2",
                                  "... recAN",
                                  "n(subjects) finally included")

qcstatistics <- c(unique(qcsummary$n_remove_quality),
                  qcsummary$n_remove_quality_groupwise,
                  unique(qcsummary$n_remove_general_qc),
                  qcsummary$n_remove_general_qc_groupwise,
                  unique(qcsummary$n_visual_qc),
                  unique(qcsummary$n_visual_exclude),
                  qcsummary$n_visual_exclude_groupwise,
                  unique(qcsummary$n_include))

subjects <- c(n_storage_name,
              qcsummary$study_groups,
              unique(qcsummary$n_general_qc),
              qcsummary$n_general_qc_groupwise,
              n_storage_name,
              unique(qcsummary$n_visual_qc),
              qcsummary$n_visual_qc_groupwise,
              n_storage_name)

percentage <- 100*(qcstatistics/subjects)

tibble(qcstatistics_characteristics, qcstatistics, percentage, subjects) %>% 
  knitr::kable(format = "html", digits=2, col.names = c("QC characteristics", "Numeric expression", "%",
                                                        "Auxiliary column: Total and study group-wise subjects"), 
               align = "l", caption = "Summary table: Amyghippo QC") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  pack_rows("Apriori exclusions (total and study group-wise)", 1, 10) %>%
  pack_rows("Case selection for visual QC", 11, 11) %>%
  pack_rows("Visual QC is HTML snapshot based, supplemented by detailed dynamic visual QC via FreeView for outlier cases (outlier cases: subjects with >= 2 mild volume or symmetry outliers (thresholds: mean +/- 2.698sd) or subjects with >= 1 extreme volume or symmetry outlier(s) (thresholds: mean +/- 4.721sd)).", 11, 11) %>%
  pack_rows("Visual exclusions (total and study group-wise)", 12, 16) %>%
  pack_rows("Total inclusions after visual QC", 17, 17)
```

QC summary table for acAN-T1 and HC study groups. Chi-squared or Fisher tests performed for differences in counts (categorical) of AN vs. HC exclusions. Calculation of interrater reliability (Cohen's kappa) during visual QC test phase via FreeView (2 trained raters, 20 test subjects randomly selected from different study groups).  

```{r outlierssummaryanhc, echo=TRUE, message=FALSE, warning=FALSE}
qcdata.an.hc <- data %>%
  filter(point_of_research %in% c("T1", "HCW")) %>%
  left_join(amyghippo_qced, by=c("storage_name", "participant_id", "redcap_event_name")) %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  mutate(remove_quality = ifelse((is.outlier_cnr == TRUE) | (is.outlier_snr == TRUE),
                                 TRUE, FALSE)) %>%
  mutate(remove_general_qc = ifelse((remove_quality == FALSE) & (mriqc_smri_summary == 3),
                                    TRUE, FALSE)) %>%
  mutate(total_subjects = n()) %>%
  group_by(point_of_research, .drop=FALSE) %>% 
  mutate(study_groups = n()) %>% 
  mutate(n_remove_quality_groupwise = sum(remove_quality)) %>%
  mutate(n_general_qc_groupwise = study_groups - sum(remove_quality)) %>%
  mutate(n_remove_general_qc_groupwise = sum(remove_general_qc)) %>%
  mutate(n_visual_qc_groupwise = study_groups - sum(remove_quality) - sum(remove_general_qc)) %>%
  mutate(n_visual_exclude_groupwise = sum(mriqc_smri_amhc_summary == 9) - sum(remove_quality) - sum(remove_general_qc)) %>%
  mutate(n_include_groupwise = sum(mriqc_smri_amhc_summary == 1)) %>%
  ungroup() %>%
  mutate(n_remove_quality = sum(remove_quality)) %>%
  mutate(n_general_qc = total_subjects - n_remove_quality) %>%
  mutate(n_remove_general_qc = sum(remove_general_qc)) %>%
  mutate(n_visual_qc = total_subjects - n_remove_quality - n_remove_general_qc) %>%
  mutate(n_visual_exclude = sum(mriqc_smri_amhc_summary == 9) - n_remove_quality - n_remove_general_qc) %>%
  mutate(n_include = sum(mriqc_smri_amhc_summary == 1))

qcsummary.an.hc <- qcdata.an.hc %>%
  dplyr::select(point_of_research, total_subjects, study_groups, n_remove_quality, n_remove_quality_groupwise, n_general_qc,
                n_general_qc_groupwise, n_remove_general_qc, n_remove_general_qc_groupwise, n_visual_qc, 
                n_visual_qc_groupwise, n_visual_exclude, n_visual_exclude_groupwise, n_include, n_include_groupwise) %>%
  distinct(point_of_research, .keep_all=TRUE) %>%
  mutate(point_of_research = fct_relevel(point_of_research, c("T1", "HCW"))) %>%
  arrange(point_of_research)

qcstatistics_characteristics.an.hc <- c("Step 1: n(subjects) apriori removed due to scan quality outliers (SNR or CNR,
                                        threshold: mean - 2.698 sd)",
                                  "... acAN-T1",
                                  "... HC",
                                  "Step 2 (after scan quality removals): n(subjects) apriori removed due to 
                                  artifacts in general cortical and subcortical QC",
                                  "... acAN-T1",
                                  "... HC",
                                  "n(subjects) selected for visual QC after apriori exclusions",
                                  "n(subjects) excluded during visual QC",
                                  "... acAN-T1",
                                  "... HC",
                                  "n(subjects) finally included",
                                  "... acAN-T1",
                                  "... HC")

qcstatistics.an.hc <- c(unique(qcsummary.an.hc$n_remove_quality),
                  qcsummary.an.hc$n_remove_quality_groupwise,
                  unique(qcsummary.an.hc$n_remove_general_qc),
                  qcsummary.an.hc$n_remove_general_qc_groupwise,
                  unique(qcsummary.an.hc$n_visual_qc),
                  unique(qcsummary.an.hc$n_visual_exclude),
                  qcsummary.an.hc$n_visual_exclude_groupwise,
                  unique(qcsummary.an.hc$n_include),
                  qcsummary.an.hc$n_include_groupwise)

subjects.an.hc <- c(unique(qcsummary.an.hc$total_subjects),
              qcsummary.an.hc$study_groups,
              unique(qcsummary.an.hc$n_general_qc),
              qcsummary.an.hc$n_general_qc_groupwise,
              unique(qcsummary.an.hc$total_subjects),
              unique(qcsummary.an.hc$n_visual_qc),
              qcsummary.an.hc$n_visual_qc_groupwise,
              rep(c(unique(qcsummary.an.hc$total_subjects)),3))

percentage.an.hc <- 100*(qcstatistics.an.hc/subjects.an.hc)

# Perform Chi-squared or Fisher tests for differences in counts (categorical) of AN vs. HC exclusions (based on cross-tables)
fisher.quality <- fisher.test(matrix(c(qcsummary.an.hc$n_general_qc_groupwise, qcsummary.an.hc$n_remove_quality_groupwise), nrow=2, ncol=2)) %>% tidy() %>% # exact significance recommended, if there are counts below 5 (chi-squared provides approximated significance)
  mutate_all(funs(formatC(., format="f", digits=2))) %>%
  unite("fisher.quality", c(estimate, p.value), sep = " ; ", remove = FALSE, na.rm = FALSE) %>%
  pull(fisher.quality)

chi.general <- chisq.test(matrix(c(qcsummary.an.hc$n_visual_qc_groupwise, qcsummary.an.hc$n_remove_general_qc_groupwise), nrow=2, ncol=2)) %>% tidy() %>%
  mutate_all(funs(formatC(., format="f", digits=2))) %>%
  unite("chi.general", c(statistic, p.value), sep = " ; ", remove = FALSE, na.rm = FALSE) %>%
  pull(chi.general)

chi.visual <- chisq.test(matrix(c(qcsummary.an.hc$n_include_groupwise, qcsummary.an.hc$n_visual_exclude_groupwise), nrow=2, ncol=2)) %>% tidy() %>%
  mutate_all(funs(formatC(., format="f", digits=2))) %>%
  unite("chi.visual", c(statistic, p.value), sep = " ; ", remove = FALSE, na.rm = FALSE) %>%
  pull(chi.visual)

chi.tests <- c(fisher.quality,
               rep(c(""),2),
               chi.general,
               rep(c(""),3), 
               chi.visual,
               rep(c(""),5))

# Interrater reliability assessment (Cohen's kappa)
interrater <- read_csv("data/redcap_do_not_delete/interrater_reliability.csv") %>%
  dplyr::select(rating1, rating2) 

ratertable <- xtabs(~ interrater$rating1 + interrater$rating2)

CohenKappa(ratertable) # unweighted for nominal data, weighted would be indicated for ordinal data
```

```{r tableoutlierssummaryanhc, echo=TRUE, message=FALSE, warning=FALSE}
tibble(qcstatistics_characteristics.an.hc, qcstatistics.an.hc, percentage.an.hc, subjects.an.hc, chi.tests) %>% 
  knitr::kable(format = "html", digits=2, col.names = c("QC characteristics", "Numeric expression", "%",
                                                        "Auxiliary column: Total and study group-wise subjects",
                                                        "Chi-squared or Fisher tests: test statistic (df = 1) ; p-value"), 
               align = "l", caption = "Summary table: Amyghippo QC") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" "=4, "Tests for differences in counts of exclusions across acAN-T1 and HC"=1), align="l") %>%
  pack_rows("Apriori exclusions (total and study group-wise)", 1, 6) %>%
  pack_rows("Case selection for visual QC", 7, 7) %>%
  pack_rows("HTML snapshot based visual QC, supplemented by detailed dynamic visual QC via FreeView for statistical outliers (statistical outlier cases: subjects with >= 2 mild volume or symmetry outliers (thresholds: mean +/- 2.698 sd) or subjects with >= 1 extreme volume or symmetry outlier(s) (thresholds: mean +/- 4.721 sd)).", 7, 7) %>%
  pack_rows("Assessed inter-rater reliability during visual QC test phase (2 trained raters rated 20 randomly selected test subjects from patient and control groups): kappa = 0.765 (substantial agreement (Landis and Koch, 1977))", 7, 7) %>%
  pack_rows("Visual exclusions (total and study group-wise)", 8, 10) %>%
  pack_rows("Total and groupwise inclusions after visual QC", 11, 13) %>%
  pack_rows("Note that our post-QC sample does not equal the main sample for statistical analyses, since it still contains duplicate cases (due to reinclusions of participants in > 1 study arms), and age-matching of HC to AN participants has not been performed at this state.", 11, 13) #%>%
  #save_kable("tables/qc_t1hc.png", zoom=8)
```

# Generate sample for the main analysis: acAN-T1 vs. HC  
## Selection of unique subjects based on scan quality and date of research  
*Background: Some subjects have >1 T1 MRI scan (inclusion in different study arms, e.g. dehab and braef). Duplicate cases have to be removed prior to any analysis.*  
**Priority 1 (top):** General cortical and subcortical QC rating (0 preferred over 1 preferred over 2), cases with general rating 2 are included in our substructure analyses, given the amygdala and hippocampal segmentations are well-applied and have passed our outlier-guided visual QC (reason: despite visually checking all subcortical regions, our general QC is rather cortex-focused, and less pronounced artifacts in subcortical regions are hard to recognize during general QC).  
**Priority 2:** Number of volume or symmetry amyghippo outliers (mean +/- 2.698 sd) per scan/case (cases with lower outlier sum preferred).  
**Priority 3:** Date of research (first/earliest scan preferred, which is especially relevant for acAN-T1 (e.g. dehab + braef) since first scan (e.g. dehab) takes place within 96h after admission, and, thus, is "closer" to the acute AN state (less therapeutic/renutrition confounding)).  

```{r subjects01, message=FALSE, warning=FALSE}
uniquesubjects <- qcdata %>%
  mutate(outliersum = (n_outliers_volume_amygdala_2.698sd + n_outliers_symmetry_amygdala_2.698sd + 
         n_outliers_volume_hippocampus_2.698sd + n_outliers_symmetry_hippocampus_2.698sd)) %>%
  mutate(id_subset = str_extract(storage_name, "64-[0-9][0-9]-[0-9][0-9][0-9]")) %>% # new variable to identify duplicate cases (duplicates have the same id_subset!)
  dplyr::select(storage_name, participant_id, id_subset, point_of_research, date_of_research,
         mriqc_smri_amhc_summary, mriqc_smri_summary, outliersum) %>%
  filter((mriqc_smri_amhc_summary == 1) & (point_of_research %in% c("T1", "HCW"))) %>%
  group_by(point_of_research, id_subset) %>%
  arrange(mriqc_smri_summary, outliersum, date_of_research, .by_group = TRUE) %>%
  slice_head(n = 1) %>% # select first row by group
  ungroup() %>%
  dplyr::select(storage_name, id_subset)
  
# Check if there are still duplicate cases
anyDuplicated(uniquesubjects$id_subset)

uniquedata <- data %>% 
  right_join(uniquesubjects, by="storage_name")
```

## Further exclusions of study participants (despite scan quality)  
### Due to BMI  
(current inclusion criterion for HC and recAN: BMI < 28; past inclusion criterion was different)  
```{r bmi, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
bmiexclusion <- uniquedata %>% filter(bmi_at_date_of_research > 28) %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  mutate(n = n()) %>%
  dplyr::select(storage_name, point_of_research, bmi_at_date_of_research, n)

bmiexclusion  %>%
  knitr::kable(format = "html", digits=2, col.names = c("Subject", "Study group", "BMI", "n(subjects) to exclude"), align = "l", caption = "Participants with BMI outside of our inclusion criteria") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

### Due to current or past drug abuse {#abuse}  
(MINI interview, SIAB-EX (present + past) questions 26 + 27), drug abuse (e.g. alcohol) is an exclusion criterion in our study (except for smoking; background: drug abuse has been shown to affect amygdala and hippocampal volumes (Filbey et al., 2015; Nagel et al., 2005; Wrase et al., 2008)).  

**Note:** Some subjects have been included in >1 study arms (e.g. dehab and braef). Above, unique cases (unique T1 MRI scans) had to be selected (=> no duplicate cases in the final sample). Before selecting unique subjects, it is important to ensure that clinical variables (e.g. comorbidities, minimal lifetime BMI) are available in all study arms (otherwise missing values would result, if, for instance, BMImin only exists in the dehab arm of a subject, but the braef arm is selected for our analysis due to better scan quality). (Even though we have a Redcap copy tool ...)  
*Example: Indeed, some braef clinical data (BMImin) are missing (bug in our Redcap copy tool???), and thus, the braef rows will be filled with dehab data, see below. This will only be done within one participant_id and point_of_research (i.e. small time difference between study inclusions with minimal chance of changes in any clinical characteristics).*  

```{r redcapclinical, results="hide", message=FALSE, warning=FALSE}
# Generate object with clinical data from Redcap (these data are NOT unique in each study arm, except for storage_name, redcap_event_name, date_of_research)
# Important: It is necessary to perform separate joins with redcap_clinical each time clinical data are examined. Otherwise, some character vectors will be transformed oddly (from string to logical, e.g. after age-matching) which causes errors!

redcap_clinical <- redcap %>%
                      dplyr::select(storage_name,
                                    participant_id,
                                    redcap_event_name,
                                    point_of_research,
                                    date_of_research,
                                    minbmi,
                                    onset_of_an,
                                    siabex_age_onset,
                                    siabex_result_an_type,
                                    iq, 
                                    hand_preference_total_value,
                                    hand_preference_cat,
                                    psychiatric_disorders,
                                    depressive_disorders, 
                                    obsessivecompulsive_disorders, 
                                    anxiety_disorders, 
                                    addiction, 
                                    ptsd, 
                                    tic_tourette,
                                    conduct_disorder,
                                    defiant_behaviour,
                                    adaption_disorder,
                                    psychosis,
                                    attention_deficit_hyperactivity_disorder,
                                    personality_disorders,
                                    developmental_disorders,
                                    other_psychiatric_disorders,
                                    spec_other_psychiatric_disorders,
                                    current_medication,
                                    type_of_current_medication___1, 
                                    type_of_current_medication___2, 
                                    type_of_current_medication___3, 
                                    type_of_current_medication___4, 
                                    type_of_current_medication___5, 
                                    recent_medication,	
                                    type_of_recent_medication___1, 
                                    type_of_recent_medication___2, 
                                    type_of_recent_medication___3,	
                                    type_of_recent_medication___4,
                                    type_of_recent_medication___5,
                                    current_antidepressants_preparation,
                                    recent_antidepressants_preparation,
                                    current_neuroleptic_drug_preparation,
                                    recent_neuroleptic_drug_preparation, 
                                    recent_benzodiazepine_preparation,
                                    current_smoking, 
                                    current_cigarettes_per_day, 
                                    current_duration_of_smoking, 
                                    ever_smoking,
                                    siabex_question_26_alcohol_abuse, 
                                    siabex_question_27_drug_abuse,
                                    siabex_past_question_26_alcohol_abuse,
                                    siabex_past_question_27_drug_abuse,
                                    resultquest_bdi2_total, 
                                    resultquest_edi2_total,
                                    resultquest_edi2_ss,
                                    resultquest_edi2_uk,
                                    resultquest_edi2_b,
                                    resultquest_scl90r_skagloba,
                                    resultquest_bscs_t, resultquest_bscs_i, resultquest_bscs_s,
                                    research_blood_results_leptin, resultquest_scl90r_skasomat,
                resultquest_scl90r_skazwang, resultquest_scl90r_skaunsic, resultquest_scl90r_skadepre,
                resultquest_scl90r_skaangst, resultquest_scl90r_skaaggre, resultquest_scl90r_skaphobi,
                resultquest_scl90r_skaparan, resultquest_scl90r_skapsych) %>%
  filter(str_detect(redcap_event_name, "atd1_[0-9]_arm_8", negate=TRUE)) %>% # remove redundant atd arms
  group_by(participant_id, point_of_research) %>%
  arrange(date_of_research, .by_group=TRUE) %>% # all clinical data are assessed and entered at the first scan/research date
  slice_head(n = 1) %>% # first date of research is chosen (e.g. most data available in the dehab arm)
  dplyr::select(-c(storage_name, redcap_event_name, date_of_research))

exclusion <- uniquedata %>%
  left_join(redcap_clinical, by=c("participant_id", "point_of_research"))
```

```{r drugs, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
drugexclusion <- exclusion %>%
  filter((addiction %in% "ja") | # MINI question
           grepl("Alkoholkonsum", spec_other_psychiatric_disorders) | # MINI question
           grepl("starker Alkoholmissbrauch", siabex_question_26_alcohol_abuse) | # SIAB questions
           grepl("sehr starker Alkoholmissbrauch", siabex_question_26_alcohol_abuse) |
           grepl("starker Alkoholmissbrauch", siabex_past_question_26_alcohol_abuse) |
           grepl("sehr starker Alkoholmissbrauch", siabex_past_question_26_alcohol_abuse) |
           grepl("starkes Drogenproblem", siabex_question_27_drug_abuse) |
           grepl("sehr starkes Drogenproblem", siabex_question_27_drug_abuse) |
           grepl("starkes Drogenproblem", siabex_past_question_27_drug_abuse) |
           grepl("sehr starkes Drogenproblem", siabex_past_question_27_drug_abuse)) %>%
  group_by(point_of_research) %>%
  distinct(storage_name) %>%
  mutate(n = n())

drugexclusion %>%
  knitr::kable(format = "html", col.names = c("Subject", "Study group", "n(subjects) to exclude"), align = "l", caption = "Study participants with drug abuse (mainly alcohol) according to MINI or SIAB") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

### Due to psychiatric diagnoses or clinically relevant BDI-II scores in HC participants {#diagnoses}  
*BDI-II is a diagnostically relevant self-report measure of depressive symptoms (Hautzinger et al., 2009). BDI-II < 14 refers to no or minimal depression and 14 <= BDI-II < 20 refers to mild depression; whereas BDI-II >= 20 refers to moderate or severe depression => We might want to exclude the latter in HC participants.*  
Exclusion of HC with relevant psychiatric diagnoses ("any history of psychiatric illness") is recommended, see table below (primarily depressive and anxiety disorders due to their plausible impact on amygdala or hippocampus, maybe other disorders such as developmental disorders can remain included).  
The category "other psychiatric disorders" was carefully checked; however, none of the concerning HC participants had an official or clinically relevant diagnosis among other psychiatric disorders (no suggested exclusions).  
**Conclusion:** 64-23-336-1_suber, 64-23-036-1_mop, 64-23-242-1_ebit, 64-23-466-1_braef, 64-23-547-1_dehab, 64-23-049-1_mop will be excluded due to pathological BDI-II scores.  
Further, 64-23-413-1_conni has to be excluded due to a diagnosed anxiety disorder and out-patient therapeutic sessions.  
All other HC participants listed in the table below did not present with either professionally diagnosed psychiatric disorders or a valid MINI interview (!Aktenkontrolle!). The given diagnoses are self-reported, which is not considered as an exclusion criterion (here). They will remain included.  

```{r hccomorbidity01, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
# Data.frame containing all suspicious HC subjects (psychiatric diagnosis, BDI-II)
comorb_HC <- exclusion %>%
  filter(point_of_research %in% "HCW") %>% 
  filter((psychiatric_disorders %in% "ja") | (resultquest_bdi2_total >= 20)) %>%
  dplyr::select(storage_name, point_of_research, resultquest_bdi2_total, depressive_disorders, obsessivecompulsive_disorders, anxiety_disorders, addiction, ptsd, tic_tourette, conduct_disorder, defiant_behaviour, adaption_disorder, psychosis, attention_deficit_hyperactivity_disorder, personality_disorders, developmental_disorders, other_psychiatric_disorders, spec_other_psychiatric_disorders) %>% 
  distinct(storage_name, .keep_all=TRUE) %>%
  arrange(desc(resultquest_bdi2_total), depressive_disorders, anxiety_disorders)

# Check specifications of other psychiatric disorders in HC (=> not severe)
comorb_HC$spec_other_psychiatric_disorders %>% 
  .[!is.na(.)] %>%
  paste(., collapse=" ; ") %>%
  knitr::kable(format = "html", align = "l", col.names = "Summary of diagnoses", caption = "Other psychiatric disorders in HC participants") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

```{r hccomorbidity02, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
# Select diagnoses in HC + relevant BDI-II scores for possible exclusion 
comorb_HC %>%
  dplyr::select(-c(other_psychiatric_disorders, spec_other_psychiatric_disorders)) %>%
  filter_all(any_vars(str_detect(., "ja") | resultquest_bdi2_total>=20)) %>%
  mutate(n_to_exclude = n()) %>%
  mutate_all(funs(str_replace(., "ja", "yes"))) %>%
  mutate_all(funs(str_replace(., "nein", "no"))) %>%
  mutate_all(funs(str_replace(., "nicht mehr erhoben", NA_character_))) %>%
  knitr::kable(format = "html", align = "l", col.names = c("Subject", "Study group", "BDI-II total scores", "Depressive disorders", "OCD", "Anxiety disorders", "Addiction", "PTSD", "Tic-Tourette syndrome", "Conduct disorder", "Defiant behavior", "Adaption disorder", "Psychosis", "ADHD", "Personality disorders", "Developmental disorders", "n(subjects) to exclude"), caption = "Psychiatric comorbidity in HC subjects") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")

comorbexclusion <- comorb_HC %>%
  filter((resultquest_bdi2_total>=20) | (storage_name == "64-23-413-1_conni"))
```

### Due to psychoactive medication in HC participants  
No relevant psychoactive medication in our HC participants, no exclusions necessary!  
*Note that HC participants consuming any type of psychoactive drugs (at date of research or in the past 4 weeks before study participation) have to be excluded.*  
```{r hcmedi, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
exclusion %>%
  filter(point_of_research %in% "HCW") %>%
  dplyr::select(storage_name, point_of_research, type_of_current_medication___1, type_of_current_medication___2, type_of_current_medication___3, type_of_current_medication___4, type_of_current_medication___5, type_of_recent_medication___1, type_of_recent_medication___2, type_of_recent_medication___3, type_of_recent_medication___4, type_of_recent_medication___5, recent_benzodiazepine_preparation) %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  filter_all(any_vars(str_detect(., "Checked"))) %>%
  mutate_all(funs(str_replace(., "Checked", "yes"))) %>%
  mutate_all(funs(str_replace(., "Unchecked", "no"))) %>%
  mutate_all(funs(str_replace(., "unbekannt", NA_character_))) %>%
  knitr::kable(format = "html", align = "l", col.names = c("Subject", "Study group", "Antidepressants", "Neuroleptic drugs", "Stimulating drugs", "Mood stabilizers", "Benzodiazepines", "Antidepressants", "Neuroleptic drugs", "Stimulating drugs", "Mood stabilizers", "Benzodiazepines", "Preparation"), caption = "HC participants with current (past 2 weeks) or recent (past 6 months) medication") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
   add_header_above(c("", "", "Note that the recently applied benzodiazepine in 1 HC participant can remain included."=11), align="l") %>%
  add_header_above(c("", "", "Current medication"=5, "Recent medication"=6), align="l")
```

### Summary of further exclusions  
According to the above observations, further subjects will be excluded from all analyses:  
```{r subjects02, results="hide", message=FALSE, warning=FALSE}
# Apply filtering joins
analysisdata <- anti_join(uniquedata, bmiexclusion, by = "storage_name") %>%
  anti_join(drugexclusion, by="storage_name") %>%
  anti_join(comorbexclusion, by="storage_name")
```


## Descriptive/clinical statistics of acAN-T1 participants (final sample after exclusions - analysisdata)  
```{r acan01, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
n_T1_2 <- analysisdata %>% 
  filter(point_of_research %in% "T1") %>%
  distinct(storage_name, .keep_all = TRUE) %>%
  nrow(.)

duration_onset <- analysisdata %>% 
  left_join(redcap_clinical, by=c("participant_id", "point_of_research")) %>% 
  filter(point_of_research %in% "T1") %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  mutate(n_duration = sum(!is.na(onset_of_an))) %>%
  mutate(mean_duration = mean(onset_of_an, na.rm=TRUE)) %>%
  mutate(sd_duration = sd(onset_of_an, na.rm=TRUE)) %>%
  mutate(n_onsetage = sum(!is.na(siabex_age_onset))) %>%
  mutate(mean_onsetage = mean(siabex_age_onset, na.rm=TRUE)) %>%
  mutate(sd_onsetage = sd(siabex_age_onset, na.rm=TRUE)) %>%
  dplyr::select(storage_name, point_of_research, n_duration, mean_duration, sd_duration, n_onsetage, mean_onsetage, sd_onsetage)

duration_characteristics01 <- c("n(subjects) with valid data",
                              "mean",
                              "standard deviation")

duration <- c(unique(duration_onset$n_duration) %>% formatC(format="d", digits=0),
              unique(duration_onset$mean_duration) %>% formatC(format="f", digits=2),
              unique(duration_onset$sd_duration) %>% formatC(format="f", digits=2))

onsetage <- c(unique(duration_onset$n_onsetage) %>% formatC(format="d", digits=0),
              unique(duration_onset$mean_onsetage) %>% formatC(format="f", digits=2),
              unique(duration_onset$sd_onsetage) %>% formatC(format="f", digits=2))

duration_characteristics02 <- c(n_T1_2,
                                "",
                                "")

duration_table <- tibble(duration_characteristics01, duration, onsetage, duration_characteristics02)
  
knitr::kable(duration_table, format = "html", digits=2, col.names = c("Characteristics", "Duration of current AN episode [months]", "Age at first onset of AN [years]", "Total n(acAN-T1)"), align = "l", caption = "Descriptive statistics acAN-T1: duration of AN and age at onset of AN") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

```{r acan02, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
analysisdata %>% 
  left_join(redcap_clinical, by=c("participant_id", "point_of_research")) %>% 
  mutate(siabex_result_an_type = dplyr::recode(siabex_result_an_type,
         "1.0" = "restrictive",
         "2.0" = "binge/purge")) %>% 
  filter(point_of_research %in% "T1") %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  group_by(siabex_result_an_type) %>%
  count(.) %>%
  mutate(percentage = 100*(n / n_T1_2)) %>%
  knitr::kable(format = "html", digits=2, col.names = c("AN subtypes", "n(acAN-T1)", "Percentage"), align = "l", caption = "Descriptive statistics acAN-T1: Current AN subtypes") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

```{r acan03, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
comorb_AN <- analysisdata %>%
  left_join(redcap_clinical, by=c("participant_id", "point_of_research")) %>% 
  filter((point_of_research %in% "T1") & (psychiatric_disorders %in% "ja")) %>%
  dplyr::select(storage_name, point_of_research, depressive_disorders, obsessivecompulsive_disorders, anxiety_disorders, addiction, ptsd, tic_tourette, conduct_disorder, defiant_behaviour, adaption_disorder, psychosis, attention_deficit_hyperactivity_disorder, personality_disorders, developmental_disorders, other_psychiatric_disorders, spec_other_psychiatric_disorders) %>% 
  distinct(storage_name, .keep_all=TRUE) 

# Check specifications of other psychiatric disorders
comorb_AN$spec_other_psychiatric_disorders %>% 
  .[!is.na(.)] %>%
  paste(., collapse=" ; ") %>%
  knitr::kable(format = "html", align = "l", col.names = "Summary of diagnoses", caption = "Other psychiatric disorders in acAN-T1 participants") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

**In total, n = `r nrow(comorb_AN)` out of `r n_T1_2` acAN-T1 participants have at least one psychiatric disorder.**  

```{r acan04, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
comorb_AN %>%
  dplyr::select(-c(spec_other_psychiatric_disorders, storage_name, point_of_research)) %>%
  summarize_all(~ sum(str_count(., "ja"), na.rm=TRUE)) %>%
  mutate(n_T1 = n_T1_2) %>%
  knitr::kable(format = "html", align = "l", col.names = c("Depressive disorders", "OCD", "Anxiety disorders", "Addiction", "PTSD", "Tic-Tourette syndrome", "Conduct disorder", "Defiant behavior", "Adaption disorder", "Psychosis", "ADHD", "Personality disorders", "Developmental disorders", "Other psychiatric disorders", "Total n(acAN-T1)"), caption = "Descriptive statistics acAN-T1: Number of subjects with psychiatric comorbidity (individual disorders)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

```{r acan05, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
analysisdata %>%
  left_join(redcap_clinical, by=c("participant_id", "point_of_research")) %>% 
  filter(point_of_research %in% "T1") %>%
  dplyr::select(storage_name, point_of_research, type_of_current_medication___1, current_antidepressants_preparation, type_of_current_medication___2, current_neuroleptic_drug_preparation, type_of_current_medication___3, type_of_current_medication___4, type_of_current_medication___5, type_of_recent_medication___1, type_of_recent_medication___2, type_of_recent_medication___3, type_of_recent_medication___4, type_of_recent_medication___5) %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  filter_all(any_vars(str_detect(., "Checked"))) %>%
  mutate_all(funs(str_replace(., "Checked", "yes"))) %>%
  mutate_all(funs(str_replace(., "Unchecked", "no"))) %>%
  mutate_all(funs(str_replace(., "unbekannt", NA_character_))) %>%
  mutate(n_current_antidepressants = sum(str_count(type_of_current_medication___1, "yes"))) %>%
  mutate(n_current_neuroleptic = sum(str_count(type_of_current_medication___2, "yes"))) %>%
  mutate(n_T1 = n_T1_2) %>%
  knitr::kable(format = "html", align = "l", col.names = c("Subject", "Study group", "Antidepressants", "Preparation", "Neuroleptic drugs", "Preparation (exclusion criterion)", "Stimulating drugs", "Mood stabilizers", "Benzodiazepines", "Antidepressants", "Neuroleptic drugs", "Stimulating drugs", "Mood stabilizers", "Benzodiazepines", "... on current antidepressants", "... on current neuroleptic drugs", "Total n(acAN-T1)"), caption = "Descriptive statistics acAN-T1: Current (past 2 weeks) and recent (past 6 months) psychoactive medication") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c("", "", "Note that only selective serotonin reuptake inhibitors (SSRIs) and mirtazapine will be included in acAN-T1. According to Redcap, the subject 64-10-580-1_T1_dehab was on a neuroleptic drug at date of research, but only at dehab and not at braef, and no preparation was given. Thus, it can be assumed that there was a data entry error, and the subject can remain included."=15), align="l") %>%
  add_header_above(c("", "", "Current medication"=7, "Recent medication"=5, "n(acAN-T1)"=3), align="l")
```

## Age-matching of HC to acAN-T1 participants of the post-exclusion sample {#match-age}  
### Age: Background and visualization  
#### Literature research  
**Amygdala**: Amygdala volume including subarea measures decreases in late adolescence (age-related atrophy) and during adulthood in healthy subjects from 18-69 years (Kurth et al., 2018), but is likely to increase from childhood to early adolescence (Pfefferbaum et al., 2012, study in healthy subjects of 10-85 years).  
**Hippocampus**: Total hippocampal volume shows a monotonic decline from early adulthood onward; in particular: CA1/2 has a negative linear association with age, CA3-DG + entorhinal cortex volumes decrease from mid-childhood to early adulthood, whereas subiculum is unrelated to age (healthy lifespan sample, 8-82 years, Daugherty et al., 2016).  
Other studies agree with the above evidence (Tamnes et al., 2014 => all hippocampal (sub)regions decrease from 8-21 years; Mueller and Weiner, 2009 => CA1, CA3 and DG are negatively associated with age from 21-85 years), whereas Lee et al. (2014) revealed an increase of hippocampal subfields until the age of 13.  

The amygdala nuclei atlas (n=9 nuclei) underlying the automated FreeSurfer subsegmentation is based on n=10 manually segmented postmortem human brain samples (58-86 years, male+female) and in vivo training MRI data (n=39, male+female, mean age 56.3 years) (Saygin et al., 2017).  
The hippocampal subfield atlas (n=13 subfields) underlying the automated FreeSurfer subsegmentation is based on n=15 manually segmented postmortem human brain samples (60-91 years, male+female) and in vivo training MRI data (n=39, male+female, mean age 56.3 years) (Iglesias et al., 2015).  
Limitation: There might be discrepancies in brain anatomy between our adolescent and young adult study participants with still developing brains and those human brain models the FreeSurfer atlases were constructed with. This could affect the quality of amygdala, hippocampal and thalamic subsegmentations in our study sample.  

#### Visualization (visual inspection) {#scatterage}  
The scatter plots for each analysis (amygdala, hippocampus, thalamus) below are grouped by study groups (color) and substructure regions (facets). Also, brain hemispheres are indicated by scatter point shape, which is - however - less relevant and not accounted for by the regression lines. (Exploratively (not displayed), brain hemispheres were plotted separately, but slopes for the referring regression lines were similar.) Linear model method used to generate regression lines for individual study groups. 95% confidence intervals, R^2 and p-values are displayed for the models.  

```{r figureage01, fig.cap="Amygdala nuclei (+ whole amygdala): Scatter plots of substructure measures plotted by participant age, including linear regression lines (with 95% confidence interval)", echo=TRUE, message=FALSE, warning=FALSE}
analysisdata %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=age_at_date_of_research, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=age_at_date_of_research, y=measure, group=point_of_research, color=point_of_research, shape=hemi), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + # linear model for adding the regression lines (variable "hemi" is not taken into account), 95% confidence intervals around the smooth are added by default
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) + # similarly, correlation coefficients (Pearson, Spearman ...) or the regression equation can be added to the scatter plots using stat_regline_equation or stat_cor
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Age at date of research") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_amygdala_age.png", width=20, height=20)
``` 

```{r figureage02, fig.cap="Hippocampal subfields (+ whole hippocampus): Scatter plots of substructure measures plotted by participant age, including linear regression lines (with 95% confidence interval)", echo=TRUE, message=FALSE, warning=FALSE}
analysisdata %>% filter(analysis %in% "hippocampus") %>%
  ggplot(aes(x=age_at_date_of_research, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=age_at_date_of_research, y=measure, group=point_of_research, color=point_of_research, shape=hemi), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Age at date of research") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_hippocampus_age.png", width=20, height=20)
``` 

```{r figureage03, fig.cap="Thalamic nuclei (+ whole thalamus): Scatter plots of substructure measures plotted by participant age, including linear regression lines (with 95% confidence interval)", echo=TRUE, message=FALSE, warning=FALSE}
analysisdata %>% filter(analysis %in% "thalamus") %>%
  ggplot(aes(x=age_at_date_of_research, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=age_at_date_of_research, y=measure, group=point_of_research, color=point_of_research, shape=hemi), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Age at date of research") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_thalamus_age.png", width=20, height=20)
``` 

#### Conclusion  
Participant age seems to have a significant impact on some of the substructure volumes across all of our analyses, even though only slight age effects are suspected (mainly negative age associations with substructure measures for amygdala (sub)regions in agreement with literature, whereas hippocampal and thalamic substructures have partly positive and partly negative relationships with age). Nevertheless, also according to literature research, **age adjustment via age-matching** is suggested for our **main analysis model**.   

### Implementation of propensity (age-) matching {#matching} 
Propensity matching was implemented directly in R via package "MatchIt" (cf. updated internal recommendation on Confluence). **Age-matching.**  
```{r agematch01, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
# Check that there are no missing values for point_of_research, age or snr in the data.frame (MatchIt might return error if there are missing values)
analysisdata %>% 
  summarize_at(vars(point_of_research,
                    age_at_date_of_research,
                    snr), 
            funs(sum(is.na(.)))) %>%
  knitr::kable(format = "html", align = "l", col.names = c("n.missing(point_of_research)", "n.missing(age)", "n.missing(snr)"), caption = "Check for missing values in the yet unmatched data.frame for future analysis") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

```{r agematch02, message=FALSE, warning=FALSE}
matchdata_age <- analysisdata %>%
  mutate(point_of_research = dplyr::recode(point_of_research,
                                    "HCW" = 0, # 0 for the control group
                                    "T1" = 1)) %>% # 1 for the acAN patient ("treated") group
  mutate(point_of_research = as.numeric(point_of_research)) %>% 
  distinct(storage_name, .keep_all = TRUE) %>% # address single storage names/subjects for age-matching
  matchit(point_of_research ~ age_at_date_of_research, data = ., method = "optimal", ratio = 1) # ratio: 1 HC to 1 acAN-T1, matching method: optimal matching => attempts to choose matches that collectively optimize an overall criterion, the criterion used is the mean of the absolute pair distances in the matched sample

summary(matchdata_age, standardize=FALSE)

data_age <- match.data(matchdata_age)

analysisdata %>% semi_join(data_age, by="storage_name") %>% # return all rows from x with a match in y without adding additional columns 
  mutate(mriqc_smri_included_19 = 1) %>% # for Redcap: flag all participants/final sample after age-matching that were included in our amygdala analyses (Redcap field label: Marie und Daniel: Cross-sectionale Substruktur-Analyse (Amygdala, 2021)
  dplyr::select(-c(file, file_type, id_subset)) %>% # remove irrelevant variables for further analyses
  write_csv(file="data/data_temporary/m.data_age.csv")
```

**Age-matched sample** (acAN-T1 and HC counterparts) used for the following analyses. See [Appendix](#snrmatching) for an alternative matching by age and scan quality (SNR) (but this was not used!).  


## Redcap upload {#redcapupload}  
*Included subjects for amygdala analyses and amyghippo QC ratings*  

```{r redcapupload, message=FALSE, warning=FALSE}
m.data_age <- read_csv("data/data_temporary/m.data_age.csv") %>% 
  mutate(point_of_research = factor(point_of_research, levels = c("T1", "HCW")))

amyghippo_qced <- read_csv("data/redcap_do_not_delete/amyghippo_qced.csv")

redcapupload <- m.data_age %>% 
  distinct(storage_name, .keep_all = TRUE) %>% 
  dplyr::select(storage_name, mriqc_smri_included_19) %>%
  right_join(amyghippo_qced, by="storage_name") %>%
  dplyr::select(participant_id, redcap_event_name, mriqc_smri_amhc, mriqc_smri_amhc_date, mriqc_smri_amhc_investigator,
                mriqc_smri_amhc_segcomplete, mriqc_smri_amhc_summary, mriqc_smri_amhc_summarycom, mri_qc_smri_complete,
                mriqc_smri_included_19) %>%
  mutate(mriqc_smri_included_19 = replace_na(mriqc_smri_included_19, 0)) %>%
  write_csv(file="data/redcap_do_not_delete/redcapupload.csv")
```


# Distributional characteristics of the assessed substructure measures in the final study sample (acAN-T1 vs. HC)  
## Density plots  
```{r figuredensity01, fig.cap="Amygdala nuclei (+ whole amygdala): Density plots for substructure measures of each (sub)region, grouped by individual study groups (measures of both brain hemispheres included, but not distinguished)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=measure, color=point_of_research)) +
  geom_density(size=1.5) +
  scale_color_jama() + 
  ylab("Density") + 
  xlab("(Sub)region volumes in mm^3") + 
  plot_theme_transparent +
  facet_wrap(~ region , scales="free")
#ggsave(path="figures", filename="densityplots_amygdala.png", width=20, height=20)
```

```{r figuredensity02, fig.cap="Hippocampal subfields (+ whole hippocampus): Density plots for substructure measures of each (sub)region, grouped by individual study groups (measures of both brain hemispheres included, but not distinguished)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "hippocampus") %>%
  ggplot(aes(x=measure, color=point_of_research)) +
  geom_density(size=1.5) +
  scale_color_jama() + 
  ylab("Density") + 
  xlab("(Sub)region volumes in mm^3") + 
  plot_theme_transparent +
  facet_wrap(~ region , scales="free")
#ggsave(path="figures", filename="densityplots_hippocampus.png", width=20, height=20)
```

```{r figuredensity03, fig.cap="Thalamic nuclei (+ whole thalamus): Density plots for substructure measures of each (sub)region, grouped by individual study groups (measures of both brain hemispheres included, but not distinguished)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "thalamus") %>%
  ggplot(aes(x=measure, color=point_of_research)) +
  geom_density(siz=1.5) +
  scale_color_jama() + 
  ylab("Density") + 
  xlab("(Sub)region volumes in mm^3") + 
  plot_theme_transparent +
  facet_wrap(~ region , scales="free")
#ggsave(path="figures", filename="densityplots_thalamus.png", width=20, height=20)
```

## Histograms with normal curves  
```{r figurehisto01, fig.cap="Amygdala nuclei (+ whole amygdala): Histograms of substructure measures with overlayed normal curves for acAN-T1 and HC participants (measures of both brain hemispheres included)", echo=TRUE, include=TRUE, message=FALSE, warning=FALSE}

amygdata <- m.data_age %>% filter(analysis %in% "amygdala")

plotlist = list()

bins <- 30

for (Region in unique(amygdata$region)) {
  
  histdata <- m.data_age %>% filter(region %in% Region)
  
  bw <- histdata %>% # individual binwidths per plot depending on the measure range
  summarize(bw = (max(measure) - min(measure))/bins) %>%
  pull(bw)
  
  mean_sd_T1 <- histdata %>% filter(point_of_research %in% "T1") %>%
    summarize(mean = mean(measure), sd = sd(measure))
  
  mean_sd_HC <- histdata %>% filter(point_of_research %in% "HCW") %>%
    summarize(mean = mean(measure), sd = sd(measure))
  
  amyghist <- histdata %>%
    ggplot(aes(x=measure, fill=point_of_research)) +
    geom_histogram(aes(y=..density..), binwidth=bw, alpha=0.7, position="identity") +
    stat_function(color="grey20", size=1.5, fun=dnorm, args=list(mean=mean_sd_T1$mean, sd=mean_sd_T1$sd)) +
    stat_function(color="darkorange4", size=1.5, fun=dnorm, args=list(mean=mean_sd_HC$mean, sd=mean_sd_HC$sd)) +
    scale_fill_jama() +
    scale_y_continuous(sec.axis = sec_axis(trans = ~. * bw * n_T1_2 * 2)) + # measures of left + right hemispheres included (*2), n_T1_2 = n_HC in the final sample (after age_matching)
    ggtitle(Region) +
    plot_theme_transparent + 
    theme(plot.title = element_text(size=16, face="italic"), axis.title.x = element_blank(), axis.title.y = element_blank())
  
 plotlist[[Region]] = amyghist
 
}

ggarrange(plotlist=plotlist, common.legend = TRUE, legend="top") -> amygarrange
amygarrange <- annotate_figure(amygarrange, 
                bottom = text_grob("(Sub)region volumes in mm^3", size=16),
                left = text_grob("Density", size=16, rot=90),
                right = text_grob("Counts", size=16, rot=270))

#ggsave(path="figures", filename="histograms_amygdala.png", width=20, height=20)
```

```{r figurehisto02, fig.cap="Amygdala nuclei (+ whole amygdala): Histograms of substructure measures with overlayed normal curves for acAN-T1 and HC participants (measures of both brain hemispheres included)", echo=TRUE, message=FALSE, warning=FALSE}
amygarrange
```

```{r figurehisto03, fig.cap="Hippocampal subfields (+ whole hippocampus): Histograms of substructure measures with overlayed normal curves for acAN-T1 and HC participants (measures of both brain hemispheres included)", echo=TRUE, include=TRUE, message=FALSE, warning=FALSE}

hippodata <- m.data_age %>% filter(analysis %in% "hippocampus")

plotlist = list()

bins <- 30

for (Region in unique(hippodata$region)) {
  
  histdata <- m.data_age %>% filter(region %in% Region)
  
  bw <- histdata %>%
  summarize(bw = (max(measure) - min(measure))/bins) %>%
  pull(bw)
  
  mean_sd_T1 <- histdata %>% filter(point_of_research %in% "T1") %>%
    summarize(mean = mean(measure), sd = sd(measure))
  
  mean_sd_HC <- histdata %>% filter(point_of_research %in% "HCW") %>%
    summarize(mean = mean(measure), sd = sd(measure))
  
  hippohist <- histdata %>%
    ggplot(aes(x=measure, fill=point_of_research)) +
    geom_histogram(aes(y=..density..), binwidth=bw, alpha=0.7, position="identity") +
    stat_function(color="grey20", size=1.5, fun=dnorm, args=list(mean=mean_sd_T1$mean, sd=mean_sd_T1$sd)) +
    stat_function(color="darkorange4", size=1.5, fun=dnorm, args=list(mean=mean_sd_HC$mean, sd=mean_sd_HC$sd)) +
    scale_fill_jama() +
    scale_y_continuous(sec.axis = sec_axis(trans = ~. * bw * n_T1_2 * 2)) + # measures of left + right hemispheres included (*2)
    ggtitle(Region) +
    plot_theme_transparent + 
    theme(plot.title = element_text(size=16, face="italic"), axis.title.x = element_blank(), axis.title.y = element_blank())
  
  plotlist[[Region]] = hippohist
}

ggarrange(plotlist=plotlist, common.legend = TRUE, legend="top") -> hippoarrange
hippoarrange <- annotate_figure(hippoarrange, 
                bottom = text_grob("(Sub)region volumes in mm^3", size=16),
                left = text_grob("Density", size=16, rot=90),
                right = text_grob("Counts", size=16, rot=270))

#ggsave(path="figures", filename="histograms_hippocampus.png", width=20, height=20)
```

```{r figurehisto04, fig.cap="Thalamic nuclei (+ whole thalamus): Histograms of substructure measures with overlayed normal curves for acAN-T1 and HC participants (measures of both brain hemispheres included)", echo=TRUE, message=FALSE, warning=FALSE}
hippoarrange
```

```{r figurehisto05, fig.cap="Thalamic nuclei (+ whole thalamus): Histograms of substructure measures with overlayed normal curves for acAN-T1 and HC participants (measures of both brain hemispheres included)", echo=TRUE, include=TRUE, message=FALSE, warning=FALSE}

thaladata <- m.data_age %>% filter(analysis %in% "thalamus")

plotlist = list()

bins <- 30

for (Region in unique(thaladata$region)) {
  
  histdata <- m.data_age %>% filter((region %in% Region))
  
  bw <- histdata %>%
  summarize(bw = (max(measure) - min(measure))/bins) %>%
  pull(bw)
  
  mean_sd_T1 <- histdata %>% filter(point_of_research %in% "T1") %>%
    summarize(mean = mean(measure), sd = sd(measure))
  
  mean_sd_HC <- histdata %>% filter(point_of_research %in% "HCW") %>%
    summarize(mean = mean(measure), sd = sd(measure))
  
  thalahist <- histdata %>%
    ggplot(aes(x=measure, fill=point_of_research)) +
    geom_histogram(aes(y=..density..), binwidth=bw, alpha=0.7, position="identity") +
    stat_function(color="grey20", size=1.5, fun=dnorm, args=list(mean=mean_sd_T1$mean, sd=mean_sd_T1$sd)) +
    stat_function(color="darkorange4", size=1.5, fun=dnorm, args=list(mean=mean_sd_HC$mean, sd=mean_sd_HC$sd)) +
    scale_fill_jama() +
    scale_y_continuous(sec.axis = sec_axis(trans = ~. * bw * n_T1_2 * 2)) + # measures of left + right hemispheres included (*2)
    ggtitle(Region) +
    plot_theme_transparent + 
    theme(plot.title = element_text(size=16, face="italic"), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(size=12))
  
  plotlist[[Region]] = thalahist
}

ggarrange(plotlist=plotlist, common.legend = TRUE, legend="top") -> thalaarrange
thalaarrange <- annotate_figure(thalaarrange, 
                bottom = text_grob("(Sub)region volumes in mm^3", size=16),
                left = text_grob("Density", size=16, rot=90),
                right = text_grob("Counts", size=16, rot=270))

#ggsave(path="figures", filename="histograms_thalamus.png", width=20, height=20)
```

```{r figurehisto06, fig.cap="Thalamic nuclei (+ whole thalamus): Histograms of substructure measures with overlayed normal curves for acAN-T1 and HC participants (measures of both brain hemispheres included)", echo=TRUE, message=FALSE, warning=FALSE}
thalaarrange
```

```{r figurehisto07, fig.cap="Histograms of paracentral thalamic nucleus", echo=TRUE, include=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(region %in% "Pc") %>%
  ggplot(aes(x=measure, fill=point_of_research)) +
  geom_histogram(aes(y=..density..), binwidth=0.25, alpha=0.7, position="identity") +
  scale_fill_jama() +
  scale_y_continuous(sec.axis = sec_axis(trans = ~. * 0.25 * n_T1_2 * 2)) +
  ggtitle("Pc") +
  plot_theme_transparent + 
  xlab("Volume in mm^3") +
  ylab("Density") +
  theme(plot.title = element_text(size=16, face="italic"), axis.title.x = element_blank(), axis.title.y = element_blank(),
        axis.text.x = element_text(size=12)) + 
  facet_wrap(~ hemi, scales="free")
#ggsave(path="figures", filename="histograms_pc.png", width=8, height=8)
```


## Q-Q (quantile-quantile) plots {#qqplots}  
See Appendix Figures \@ref(fig:figureqq01), \@ref(fig:figureqq02) and \@ref(fig:figureqq03) for Q-Q plot visualization.  

## Conclusion  
With regard to the displayed density plots and histograms including normal curves as well as Q-Q plots, some deviations from normality can be observed for a few substructures like the medial nucleus of the amygdala. However, the observed deviations are rather negligible. Besides, our sample sizes are large (n>150 per study group).  
Thus, it can be assumed that the assessed (sub)region volumes are approximately normally distributed across all analyses.  
*Smaller subregions tend to deviate from normality to a greater degree than larger subregions (limitation: inaccuracy of FreeSurfer subsegmentation).*  


# Exploration of potential covariates for the main model: estimated total intracranial volume (eTIV) and whole amygdala volume {#etiv}  
*NB: Gender and scanner sites are relevant confounding variables. However, since our study participants are female throughout and scanner site was not changed, we do not have to adjust for the latter covariates.*  
See [here](#match-age) for age-matching procedure.  

## eTIV Visualization (visual inspection)  
The scatter plots for each analysis below are grouped by study groups (color) and substructure regions (facets) (brain hemispheres indicated by point shape).  

```{r figuretiv01, fig.cap="Amygdala nuclei (+ whole amygdala): Scatter plots of substructure measures plotted by participant eTIV, including linear regression lines (with 95% confidence interval, R^2 and p-value)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=e_tiv, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=e_tiv, y=measure, group=point_of_research, color=point_of_research, shape=hemi), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3") + 
  scale_x_continuous(name="eTIV in mm^3", labels=scales::comma) + # commas to separate 1,000,000 = 1 million (NOT decimals)
  plot_theme_transparent + theme(axis.text=element_text(size=8)) +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_amygdala_etiv.png", width=20, height=20)
```

```{r figuretiv02, fig.cap="Hippocampal subfields (+ whole hippocampus): Scatter plots of substructure measures plotted by participant eTIV, including linear regression lines (with 95% confidence interval, R^2 and p-value)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "hippocampus") %>%
  ggplot(aes(x=e_tiv, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=e_tiv, y=measure, group=point_of_research, color=point_of_research, shape=hemi), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3") +
  scale_x_continuous(name="eTIV in mm^3", labels=scales::scientific_format()) +
  plot_theme_transparent + theme(axis.text=element_text(size=8)) +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_hippocampus_etiv.png", width=20, height=20)
```

```{r figuretiv03, fig.cap="Thalamic nuclei (+ whole thalamus): Scatter plots of substructure measures plotted by participant eTIV, including linear regression lines (with 95% confidence interval, R^2 and p-value)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "thalamus") %>%
  ggplot(aes(x=e_tiv, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=e_tiv, y=measure, group=point_of_research, color=point_of_research, shape=hemi), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3") + 
  scale_x_continuous(name="eTIV in mm^3", labels=scales::scientific_format()) +
  plot_theme_transparent + theme(axis.text=element_text(size=8)) +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_thalamus_etiv.png", width=20, height=20)
```

```{r figuredensityetiv, fig.cap="Density plots for eTIV in acAN-T1 and HC (investigation of distribution)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% 
  distinct(storage_name, .keep_all=TRUE) %>%
  ggplot(aes(x=e_tiv, color=point_of_research)) +
  geom_density(size=1.5) +
  scale_color_jama() + 
  ylab("Density") + 
  xlab("eTIV in mm^3") + 
  plot_theme_transparent
#ggsave(path="figures", filename="densityplots_etiv.png", width=20, height=20)
```


## Conclusion regarding eTIV {#conclusion_etiv}  
As anticipated, participant eTIV has a mostly strong positive association with nearly all (sub)region volumes across all analyses. Thus, **adjustment for eTIV** is suggested for our **main analysis model**. eTIV is approximately normally distributed across study groups (meets the assumptions for a covariate in our main GLM).  

Scatter plots for further brain segmentation measures - **total brain segmentation volume without ventricles, total supratentorial brain volume and total gray matter volume** - are presented in the Appendix (example amygdala: Figures \@ref(fig:figureseg01), \@ref(fig:figuresupra01) and \@ref(fig:figuregray01)).  


# Main model for group differences between acAN-T1 and HC  
1. Demographic and clinical variables (e.g. age, BMI-SDS, IQ): independent samples t-tests (age-matched acAN-T1 vs. HC participants).  
2. Whole amygdala volumes (separately for each brain hemisphere): General Linear Model (GLM), adjusted for [eTIV](#etiv), to assess differences between age-matched study groups acAN-T1 vs. HC (see [here](#match-age) for age-matching), findings presented as Analysis of Covariance (ANCOVA). Motivation: Are there global effects of AN on whole amygdala volumes of both brain hemispheres when covarying for age via age-matching as well as for head size?  
3. Amygdala nuclei volumes (separately for each brain hemisphere): Series of General Linear Models (GLMs), adjusted for individual whole amygdala volume (lh or rh) (see [here](#wholeamy), Figure \@ref(fig:figurewholeamy)) and eTIV, to assess relative within-amygdala differences in amygdala nuclei between age-matched study groups acAN-T1 vs. HC, findings presented as Analyses of Covariance (ANCOVAs). Motivation: In relation to global amygdala alterations in AN (whole amygdala), which nuclei are affected more (relatively smaller) or less (relatively bigger) seriously by acute AN (or are relatively unchanged)?  
4. Multiple testing adjustment for 2. and 3.: Benjamini-Hochberg (BH) - False Discovery Rate (FDR).  

Further approaches that have been discarded: (1) test average of (sub)region volumes from both brain hemispheres, i.e. hemispheres not separately (cf. Myrvang et al., 2018 on hippocampal subfields in AN), advantage: reduce number of tests. (2) Robust regression/GLMs (MASS::rlm) (this approach is not directly indicated due to our large sample sizes, approximately normal distributions of substructure measures and fulfilled assumptions for multiple linear regression). (3) Due to our cross-sectional design of the acAN vs. HC group comparison, there is no indication for a Linear Mixed Effects (LME) model construction (there are random effects, but they are independent due to the independent participants/study groups; in contrast, in longitudinal designs where the same participants are reassessed, random effects are not independent of each other and collinearity occurs, which is an indication for the use of LMEs).  

## Demographic and clinical variables (descriptive statistics, t-tests) {#ttests}  

See Appendix for Levene's test of homogeneity of variances (Table \@ref(tab:ttests02)).  

```{r demographics, results="asis", message=FALSE, warning=FALSE}
m.data_age %>% 
  left_join(redcap_clinical, by=c("participant_id", "point_of_research")) %>% 
  summarize(mean = mean(current_cigarettes_per_day, na.rm=TRUE)) %>% round(digits=1)

labeller.function <- function(x) { # labels in output tables (no underscores)
  dplyr::recode(x,
                "age_at_date_of_research" = "Age",
                "iq" = "IQ",
                "bmi_at_date_of_research" = "BMI",
                "bmisds_at_date_of_research" = "BMI-SDS",
                "minbmi" = "Minimal lifetime BMI",
                "research_blood_results_leptin" = "Leptin (µg/L)",
                "e_tiv" = "eTIV",
                "total_gray" = "Total GM",
                "subcort_gray" = "Subcortical GM",
                "cnr_total" = "CNR",
                "snr" = "SNR",
                "resultquest_bdi2_total" = "BDI-II total",
                "resultquest_edi2_total" = "EDI-2 sum",
                "resultquest_edi2_ss" = "EDI-2 drive for thinness",
                "resultquest_edi2_uk" = "EDI-2 body dissatisfaction",
                "resultquest_edi2_b" = "EDI-2 bulimia",
                "edi_core" = "EDI-2 core symptoms",
                 "resultquest_scl90r_skagloba" = "SCL-90-R GSI",
                "s.anxiety" = "STAI(K) State Anxiety",
                "t.anxiety" = "STAI(K) Trait Anxiety",
                "bas_rewardresponsiveness" = "BAS reward responsiveness",
                #"bis" = "BIS",
                 "resultquest_bscs_i" = "BSCS impulse control",
                "resultquest_bscs_s" = "BSCS self-discipline")
  }

variables_grouper <- c(age_at_date_of_research = "Demographics and BMI", 
               iq = "Demographics and BMI", 
               bmi_at_date_of_research = "Demographics and BMI", 
               bmisds_at_date_of_research = "Demographics and BMI",
               minbmi  = "Demographics and BMI",
               research_blood_results_leptin = "Hormone parameter",
               cnr_total = "Scan quality measures",
               snr = "Scan quality measures", 
               e_tiv = "Brain segmentation volumes",
               #total_gray = "Brain segmentation volumes",
               subcort_gray = "Brain segmentation volumes",
               resultquest_bdi2_total = "Symptoms",
               resultquest_edi2_total = "Symptoms",
               resultquest_edi2_ss = "Symptoms",
               resultquest_edi2_uk = "Symptoms",
               resultquest_edi2_b = "Symptoms",
               edi_core = "Symptoms",
               resultquest_scl90r_skagloba = "Symptoms",
               s.anxiety = "Symptoms",
               t.anxiety	 = "Symptoms",
               #bas_drive = "Amygdala and reward (exploratory)",
               #bas_funseeking = "Amygdala and reward (exploratory)",
               bas_rewardresponsiveness = "Reward",
               #bis = "Amygdala and reward or inhibition (exploratory)",
               resultquest_bscs_i = "Self-control",
               resultquest_bscs_s = "Self-control")

redcap_analysis <- redcap_clinical %>%
  dplyr::select(participant_id, point_of_research, iq, minbmi, research_blood_results_leptin, resultquest_bdi2_total,
                resultquest_edi2_total, resultquest_edi2_ss, resultquest_edi2_uk, resultquest_edi2_b,
                resultquest_scl90r_skagloba, onset_of_an, resultquest_bscs_t, 
                resultquest_bscs_i, resultquest_bscs_s, resultquest_scl90r_skasomat,
                resultquest_scl90r_skazwang, resultquest_scl90r_skaunsic, resultquest_scl90r_skadepre,
                resultquest_scl90r_skaangst, resultquest_scl90r_skaaggre, resultquest_scl90r_skaphobi,
                resultquest_scl90r_skaparan, resultquest_scl90r_skapsych) %>%
  mutate(edi_core = (resultquest_edi2_ss + resultquest_edi2_uk + resultquest_edi2_b)/3)  
         
demographics <- m.data_age %>%
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables differ from storage_name in order to fill missing clinical data (e.g. for braef scan), some dehab clinical data were not adequately copied into the braef arm (failure of Redcap copy tool)!
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  distinct(storage_name, .keep_all=TRUE) %>%
  group_by(point_of_research) %>%
  rstatix::get_summary_stats(age_at_date_of_research, iq, bmi_at_date_of_research,
                             bmisds_at_date_of_research, minbmi, research_blood_results_leptin,
                             e_tiv, subcort_gray, #total_gray, 
                             cnr_total, snr,
                             resultquest_bdi2_total, 
                             edi_core,
                             resultquest_scl90r_skagloba,
                             s.anxiety, t.anxiety,
                             #bas_drive, bas_funseeking,
                             bas_rewardresponsiveness, #bis,
                             resultquest_bscs_i,
                             resultquest_bscs_s) %>%
  dplyr::select(point_of_research, variable, n, mean, sd, min, max) %>%
  mutate(variable = factor(variable, levels=c("age_at_date_of_research", "iq", "bmi_at_date_of_research", "bmisds_at_date_of_research", "minbmi", "research_blood_results_leptin", "e_tiv", "total_gray", "subcort_gray", "cnr_total", "snr", "resultquest_bdi2_total", "edi_core", "resultquest_scl90r_skagloba", "s.anxiety", "t.anxiety", "bas_drive", "bas_funseeking", "bas_rewardresponsiveness", "bis", "resultquest_bscs_i", "resultquest_bscs_s"))) %>% # custom order of variables (get_summary_stats automatically returns alphabetical order which is not suitable)
  arrange(variable) %>% 
  mutate(variable = as.character(variable))

demographics_HC <- demographics %>% filter(point_of_research %in% "HCW") %>%
  dplyr::select(-point_of_research)

demographics_T1 <- demographics %>% filter(point_of_research %in% "T1") %>%
  dplyr::select(-point_of_research) %>%
  full_join(demographics_HC, by="variable")

demographics_filtered <- demographics_T1 %>%
  filter((variable != "cnr_total") & (variable != "snr")) %>%
  mutate(variables_group = dplyr::recode(variable, !!!variables_grouper, .default = "missing group"))

demographics_filtered %>%
  mutate(variable.labelled = labeller.function(variable)) %>%
  dplyr::select(variable.labelled, everything()) %>%
  dplyr::select(-c(variable, variables_group)) %>%
  knitr::kable(format = "html", digits=2, col.names = c("Demographic or clinical variable", rep(c("n", "Mean", "SD", "Minimum", "Maximum"), 2)), align = "l", caption = "Descriptive statistics of demographic and clinical variables in acAN-T1 vs. age-matched HC participants") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial",
              font_size="10") %>%
  add_header_above(c("", "acAN-T1 participants"=5, "HC participants"=5)) %>%
  pack_rows(index = table(fct_inorder(demographics_filtered$variables_group)))
```

```{r ttests01, results="asis", message=FALSE, warning=FALSE}
asterisk_function <- function(x) {
  ifelse(is.na(x), NA, 
  symnum(x, 
         cutpoints = c(0, 0.001, 0.01, 0.05, 1), 
         symbols = c("(***)", "(**)", "(*)", "(ns)"))
  )
}

# Welch t-tests; Important for tables in the later research paper (.docx): Kables in the Markdown HTML-Document can be copied into Excel (further formatted) and imported into Word!!!
t.testdata <- m.data_age %>%
  mutate(point_of_research = relevel(point_of_research, ref="HCW")) %>% # reference group = HC participants
  left_join(stai, by=c("participant_id", "point_of_research")) %>%
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  distinct(storage_name, .keep_all=TRUE) %>%
  dplyr::select(point_of_research, age_at_date_of_research, iq, bmi_at_date_of_research,
                bmisds_at_date_of_research, minbmi, research_blood_results_leptin, e_tiv, cnr_total, snr, subcort_gray,
                #total_gray,
                resultquest_bdi2_total,
                edi_core,
                             resultquest_scl90r_skagloba,
                             s.anxiety, t.anxiety,
                             #bas_drive, bas_funseeking,
                             bas_rewardresponsiveness, #bis,
                             resultquest_bscs_i,
                             resultquest_bscs_s) %>%
  pivot_longer(-point_of_research, names_to = "variable", values_to = "value") %>% # reshape data.frame into long format
  nest(data = -variable) # work with nested data in order to apply multiple t-tests at once
  
t.testdatatable <- t.testdata %>% 
  mutate(
     ttest = map(data, ~ t.test(value ~ point_of_research, data = .x, na.action=na.omit,
                                paired=FALSE, alternative="two.sided", var.equal=FALSE)), # listwise exclusion of missing values; paired=FALSE means independent samples' t-tests; two-sided t-tests; equal variances not assumed => Welch approximation
    tidied = map(ttest, tidy)) %>%
  unnest(tidied) %>%
  mutate(p.value = formatC(p.value, format="f")) %>% # no correction for multiple testing, demographic or clinical variables may be considered as "individually tested"
  mutate(p.value = as.numeric(p.value)) %>%
  mutate(significance = as.character(asterisk_function(p.value))) %>%
  dplyr::select(variable, method, statistic, p.value, significance) 

t.testdatatable_filtered <- t.testdatatable %>%
  filter((variable != "cnr_total") & (variable != "snr")) %>%
  mutate(variables_group = dplyr::recode(variable, !!!variables_grouper, 
                                       .default = "missing group"))

t.testdatatable_filtered %>%
  mutate(variable.labelled = labeller.function(variable)) %>%
  dplyr::select(variable.labelled, everything()) %>%
  dplyr::select(-c(variable, variables_group)) %>%
  knitr::kable(format = "html", digits=4, col.names = c("Demographic or clinical variable", "Test method (unequal variances)", "t statistic", "p-value (raw/unadjusted)", "Unadjusted significance"), align = "l", caption = "Demographic and clinical variables: independent-samples t-test statistics for group differences between acAN-T1 and age-matched HC participants") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  pack_rows(index = table(fct_inorder(t.testdatatable_filtered$variables_group)))
```

```{r ttestsjoin, results="asis", message=FALSE, warning=FALSE}
demographics_filtered %>%
  dplyr::select(-c(min.x, max.x, min.y, max.y)) %>%
  left_join(t.testdatatable_filtered, by=c("variable", "variables_group")) %>%
  mutate(variable.labelled = labeller.function(variable)) %>%
  dplyr::select(variable.labelled, everything()) %>%
  mutate(mean.x = ifelse(variable %in% c("e_tiv", "subcort_gray"),
                         formatC(mean.x, format="f", big.mark=",", digits=0),
                         formatC(mean.x, format="f", digits=2))) %>%
  mutate(mean.y = ifelse(variable %in% c("e_tiv", "subcort_gray"),
                         formatC(mean.y, format="f", big.mark=",", digits=0),
                         formatC(mean.y, format="f", digits=2))) %>%
  mutate(sd.x = ifelse(variable %in% c("e_tiv", "subcort_gray"),
                         formatC(sd.x, format="f", big.mark=",", digits=0),
                         formatC(sd.x, format="f", digits=2))) %>%
  mutate(sd.y = ifelse(variable %in% c("e_tiv", "subcort_gray"),
                         formatC(sd.y, format="f", big.mark=",", digits=0),
                         formatC(sd.y, format="f", digits=2))) %>%
  mutate(df = (n.x+n.y)-2) %>% 
  unite("N", c(n.x, n.y), sep = "/", remove = FALSE, na.rm = FALSE) %>%
  unite("mean_sd_AN", c(mean.x, sd.x), sep = " ± ", remove = FALSE, na.rm = FALSE) %>%
  unite("mean_sd_HC", c(mean.y, sd.y), sep = " ± ", remove = FALSE, na.rm = FALSE) %>%
  dplyr::select(variable.labelled, N, mean_sd_AN, mean_sd_HC, statistic, df, p.value) %>% # Method = Welch Two-Sample t-test (unequal variances)
  mutate(p.value = formatC(p.value, format="f", digits=3)) %>%
  mutate(p.value = ifelse(p.value<0.001, "<0.001", p.value)) %>%
  knitr::kable(format = "html", digits=2, col.names = c("", "acAN/HC", "acAN", "HC", "t", "df", "p"), align = "l", caption = "Table 1. Demographic variables and clinical measures of the current sample") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="9") %>%
  add_header_above(c("", "n", "Sample"=2, "Analyses"=3), align="l") %>% 
  pack_rows(index = table(fct_inorder(t.testdatatable_filtered$variables_group))) #%>%
  #save_kable("tables/descr_ttests.png", zoom=8)
```

## Main models for group differences in amygdala and amygdala nuclei - Descriptive statistics and assumptions  
**Missing values**: no missing values in any of the variables belonging to our main GLM (see Table \@ref(tab:table01) and the examination of the [final data.frame "data"](#data) for statistics on missing values).  

```{r descriptivesamygdala, results="asis", message=FALSE, warning=FALSE}
glmdata <- m.data_age %>% 
  filter(analysis %in% "amygdala") %>%
  mutate(region = dplyr::recode(region, # replace hyphens by underscores (relevant for variable grouping)
                               "Accessory-Basal-nucleus" = "Accessory_basal_nucleus",
                               "Anterior-amygdaloid-area-AAA" = "Anterior_amygdaloid_area",
                               "Basal-nucleus" = "Basal_nucleus",
                               "Central-nucleus" = "Central_nucleus",
                               "Cortical-nucleus" = "Cortical_nucleus",
                               "Corticoamygdaloid-transitio" = "Corticoamygdaloid_transitio",
                               "Lateral-nucleus" = "Lateral_nucleus",
                               "Medial-nucleus" = "Medial_nucleus",
                               "Paralaminar-nucleus" = "Paralaminar_nucleus")) %>%
  mutate(region_recoded = dplyr::recode(region,
                                        "Whole_amygdala" = "Whole amygdala",
                                        "Accessory_basal_nucleus" = "Accessory basal nucleus",
                                        "Anterior_amygdaloid_area" = "Anterior amygdaloid area",
                                        "Basal_nucleus" = "Basal nucleus",
                                        "Central_nucleus" = "Central nucleus",
                                        "Cortical_nucleus" = "Cortical nucleus",
                                        "Corticoamygdaloid_transitio" = "Corticoamygdaloid transition",
                                        "Lateral_nucleus" = "Lateral nucleus",
                                        "Medial_nucleus" = "Medial nucleus",
                                        "Paralaminar_nucleus" = "Paralaminar nucleus")) %>%
  unite("hemi_region", c(hemi, region), sep = "_", remove = FALSE, na.rm = FALSE) %>%
  unite("labeller", c(region_recoded, hemi), sep= " ", remove = FALSE, na.rm = FALSE) %>% # just for output tables (labels without underscores)
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) # custom order of amygdala regions (rstatix::get_summary_stats returns alphabetical order by default which is not suitable)

variables_grouper.glm <- c(lh_Whole_amygdala = "Whole amygdala",
                           rh_Whole_amygdala = "Whole amygdala", 
                           lh_Accessory_basal_nucleus = "Amygdala nuclei", 
                           rh_Accessory_basal_nucleus = "Amygdala nuclei",
                           lh_Anterior_amygdaloid_area = "Amygdala nuclei", 
                           rh_Anterior_amygdaloid_area = "Amygdala nuclei", 
                           lh_Basal_nucleus = "Amygdala nuclei", 
                           rh_Basal_nucleus = "Amygdala nuclei", 
                           lh_Central_nucleus = "Amygdala nuclei", 
                           rh_Central_nucleus = "Amygdala nuclei", 
                           lh_Cortical_nucleus = "Amygdala nuclei", 
                           rh_Cortical_nucleus = "Amygdala nuclei", 
                           lh_Corticoamygdaloid_transitio = "Amygdala nuclei", 
                           rh_Corticoamygdaloid_transitio = "Amygdala nuclei", 
                           lh_Lateral_nucleus = "Amygdala nuclei", 
                           rh_Lateral_nucleus = "Amygdala nuclei", 
                           lh_Medial_nucleus = "Amygdala nuclei", 
                           rh_Medial_nucleus = "Amygdala nuclei",
                           lh_Paralaminar_nucleus = "Amygdala nuclei", 
                           rh_Paralaminar_nucleus = "Amygdala nuclei")

descramygdala <- glmdata %>% 
  group_by(point_of_research, region, hemi_region, labeller) %>%
  rstatix::get_summary_stats(measure) %>%
  dplyr::select(region, hemi_region, labeller, point_of_research, n, mean, sd, min, max)

# Generate relative y positions of p-values and brackets for later plotting of results
y.position <- descramygdala %>% 
  group_by(region) %>%
  arrange(desc(max), .by_group=TRUE) %>% # y positions are regulated by maximum volume measure per region
  slice_head(n = 1) %>%
  mutate(y.position = 1.05*max) %>%
  dplyr::select(region, y.position) %>%
  ungroup()
  
descramygdala_T1 <- descramygdala %>% filter(point_of_research %in% "T1") %>%
  dplyr::select(-c(point_of_research, region))

descramygdala_HC <- descramygdala %>% filter(point_of_research %in% "HCW") %>%
  dplyr::select(-c(point_of_research, region))

descramygdala_join <- full_join(descramygdala_T1, descramygdala_HC, by=c("hemi_region", "labeller")) %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group"))
  
descramygdala_join %>%
  mutate(mean.x = formatC(mean.x, format="f", big.mark=",", digits=2)) %>%
  mutate(mean.y = formatC(mean.y, format="f", big.mark=",", digits=2)) %>%
  mutate(sd.x = formatC(sd.x, format="f", digits=2)) %>%
  mutate(sd.y = formatC(sd.y, format="f", digits=2)) %>%
  mutate(min.x = formatC(min.x, format="f", big.mark=",", digits=2)) %>%
  mutate(min.y = formatC(min.y, format="f", big.mark=",", digits=2)) %>%
  mutate(max.x = formatC(max.x, format="f", big.mark=",", digits=2)) %>%
  mutate(max.y = formatC(max.y, format="f", big.mark=",", digits=2)) %>%
  unite("N", c(n.x, n.y), sep = "/", remove = FALSE, na.rm = FALSE) %>%
  unite("mean_sd_AN", c(mean.x, sd.x), sep = " ± ", remove = FALSE, na.rm = FALSE) %>%
  unite("mean_sd_HC", c(mean.y, sd.y), sep = " ± ", remove = FALSE, na.rm = FALSE) %>%
  unite("range_AN", c(min.x, max.x), sep = " – ", remove = FALSE, na.rm = FALSE) %>%
  unite("range_HC", c(min.y, max.y), sep = " – ", remove = FALSE, na.rm = FALSE) %>%
  dplyr::select(labeller, N, mean_sd_AN, range_AN, mean_sd_HC, range_HC) %>%
  knitr::kable(format = "html", digits=2, col.names = c("Raw volumes in mm^3", "acAN/HC", "Mean ± SD", "Range (min – max)", "Mean ± SD", "Range (min – max)"), align = "l", caption = "Descriptive statistics of raw amygdala volumes (whole amygdala and nuclei) in acAN and age-matched HC") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial",
              font_size="10") %>%
  add_header_above(c("", "n", "acAN"=2, "HC"=2)) %>%
  add_header_above(c("","", "Sample"=4)) %>%
  pack_rows(index = table(fct_inorder(descramygdala_join$variables_group)))
```

**Assumptions for GLM/MLR (checked for whole amygdala):** Assumptions for (multiple) linear regression are approximately met: homoscedasticity (no pattern in the above scatterplot Residuals vs Fitted), residuals are normally distributed (see Normal Q-Q plot above), no suspected multicollinearity in our main GLM (covariate eTIV is not significantly different between study groups, see Table \@ref(tab:ttests01)).  

```{r mlrplots01, fig.cap="Regression plots (MLR) for left whole amygdala", echo=TRUE, message=FALSE, warning=FALSE}
par(mfrow=c(1,2))
glmdata %>% 
  filter(hemi_region %in% "lh_Whole_amygdala") %>%
  mutate(point_of_research = relevel(point_of_research, ref="HCW")) %>%
  lm(measure ~ point_of_research + e_tiv, data=., na.action=na.omit) %>%
  plot(which=c(1,2))
```

```{r mlrplots02, fig.cap="Regression plots (MLR) for right whole amygdala", echo=TRUE, message=FALSE, warning=FALSE}
par(mfrow=c(1,2))
glmdata %>% filter(hemi_region %in% "rh_Whole_amygdala") %>%
  mutate(point_of_research = relevel(point_of_research, ref="HCW")) %>%
  lm(measure ~ point_of_research + e_tiv, data=., na.ation=na.omit) %>%
  plot(which=c(1,2))
```

### Exploration of whole amygdala volume {#wholeamy}  
Amygdala nuclei volumes are highly correlated (positively) with whole amygdala volume, see Figure below:  

```{r figurewholeamy, fig.cap="Amygdala nuclei: Scatter plots of substructure measures plotted by left or right whole amygdala volume, including linear regression lines (with 95% confidence interval, R^2 and p-value), study groups and brain hemispheres are distinguished", echo=TRUE, message=FALSE, warning=FALSE}
whole.amy.data <- m.data_age %>%
  filter(region %in% "Whole_amygdala") %>%
  dplyr::select(storage_name, hemi, measure) %>%
  rename(whole_amygdala = measure) %>% 
  right_join(glmdata, by=c("storage_name", "hemi")) %>%
  filter(region != "Whole_amygdala")

whole.amy.data %>%
  ggplot(aes(x=whole_amygdala, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=whole_amygdala, y=measure, group=point_of_research, color=point_of_research, shape=hemi), 
             size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("Amygdala nuclei volumes in mm^3") +
  scale_x_continuous(name="Whole amygdala volume (left or right hemisphere)", labels=scales::scientific_format()) +
  plot_theme_transparent + theme(axis.text=element_text(size=8)) +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_amygdala_whole.png", width=20, height=20)
```


## Main model implementation for whole amygdala and amygdala nuclei {#mainglm}  
**Computation and output:** Multiple linear regression models applied (MLRs - lm), output in ANCOVA form (car::Anova).  
Effect size statistics are given: Benchmarks for partial eta squared (Cohen, 1992): small effect - 0.01, medium effect - 0.06, large effect - 0.14.  
Besides, estimated marginal means (adjusted for the covariates: eTIV for whole amygdala; whole amygdala + eTIV for amygdala nuclei) are displayed. (See supplementary [table](#measurequotients) for relative amygdala nuclei volumes = quotients of nuclei divided by whole amygdala.)  

```{r glmamygdala01, results="asis", message=FALSE, warning=FALSE}
options(contrasts = c("contr.sum", "contr.poly")) # needed for type III SS tests (ANOVA, does not change Type I or II SS results)

asterisk_function_2 <- function(x) {
  ifelse(is.na(x), NA, 
  symnum(x, 
         cutpoints = c(0, 0.001, 0.01, 0.05, 1), 
         symbols = c("* * *", "* *", "*", "ns"))
  )
}

ancova <- m.data_age %>%
  filter(region %in% "Whole_amygdala") %>%
  dplyr::select(storage_name, hemi, measure) %>%
  rename(whole_amygdala = measure) %>% # whole amygdala volume must be introduced as a new variable 
  right_join(glmdata, by=c("storage_name", "hemi")) %>% # left and right whole amygdala volumes are correctly matched
  mutate(point_of_research = relevel(point_of_research, ref="HCW")) %>% # reference group = HC participants
  mutate(whole.sub = ifelse(region %in% "Whole_amygdala", "whole", "subregion")) %>% # GLMs for (1) whole amygdala and for (2) amygdala nuclei are regarded separately (relevant for covariates and p-value adjustment) 
  nest(data = - c(hemi_region, labeller, region, whole.sub)) %>%
  mutate(
    lm = ifelse(whole.sub %in% "whole",
                map(data, ~ lm(measure ~ point_of_research + e_tiv, data = .x, na.action = na.omit)),
                map(data, ~ lm(measure ~ point_of_research + whole_amygdala + e_tiv, data = .x, 
                               na.action = na.omit))),
                #map(data, ~ lm(measure ~ point_of_research*e_tiv, data = .x, na.action = na.omit)), # test main effects and interactions (no significant interactions in our model!)
                #map(data, ~ lm(measure ~ point_of_research*whole_amygdala*e_tiv, data = .x, na.action = na.omit))),
    adj.means = map(lm, ~ emmeans(.x, "point_of_research")),
    tidymeans = map(adj.means, tidy),
    anova = map(lm, ~ car::Anova(.x, type="III", test.statistic="F")), # Type III sums of squares (partial SS = every effect is adjusted for all other effects/interactions, model would also be valid in case of significant interactions, but interpretation of main effects would then be problematic); however, there are no significant interactions in our model => Type III SS is fine, but - theoretically - Type II SS would be more powerful
    anova_stats = map(anova, ~ sjstats::anova_stats(.x))) %>% # partial eta squared as effect size (reason: >1 independent variable/covariate)
  unnest(anova_stats) %>%
  group_by(whole.sub, term) %>% # p-value adjustment is not applied within one MLR, but across equal terms of different MLRs (e.g. point_of_research), adjustment separately for whole amygdala vs. amygdala nuclei
  mutate(p.adj = p.adjust(p.value, method="BH")) %>% # adjustment (FDR) for multiple testing (vectorized p.adjust function)
  mutate(p.adj = as.numeric(p.adj)) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  mutate(adj.signif_2 = as.character(asterisk_function_2(p.adj))) %>%
  mutate(p.adj = formatC(p.adj, format="f", digits=2)) %>%
  mutate(p.value = formatC(p.value, format="f", digits=4)) %>%
  #mutate(adj.signif_2 = ifelse(adj.signif_2 %in% "ns", 
                               #paste("ns, p.adj =", p.adj),
                               #adj.signif_2)) %>%
  ungroup() %>%
  #filter(term %in% "point_of_research") %>%
  dplyr::select(region, hemi_region, whole.sub, tidymeans, labeller, term, sumsq, df, statistic, p.value, p.adj, 
                adj.signif, adj.signif_2, partial.etasq) %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group"))

emmeans <- ancova %>%
  dplyr::select(hemi_region, region, labeller, tidymeans) %>%
  distinct(hemi_region, .keep_all=TRUE) %>%
  unnest(tidymeans) %>% # standard errors are equal across groups due to balanced design
  dplyr::select(hemi_region, region, labeller, point_of_research, estimate, std.error)

emmeans_T1 <- emmeans %>% filter(point_of_research %in% "T1") %>%
   dplyr::select(-c(point_of_research, region, labeller))

emmeans_HC <- emmeans %>% filter(point_of_research %in% "HCW") %>%
   dplyr::select(-c(point_of_research, region, labeller))

ancova %>%
  dplyr::select(-c(region, hemi_region, whole.sub, tidymeans, variables_group)) %>%
  knitr::kable(format = "html", digits=3, col.names = c("Analysis of interest", "ANCOVA (GLM)", "Type III SS", "Degrees of freedom", "F statistic", "p-value", "FDR(BH)-adjusted p-value", "Adjusted significance", "Adjusted significance", "Effect size statistics (partial eta squared)"), align = "l", caption = "ANCOVAs (GLMs) for left and right hemisphere whole amygdala volumes (adjusted for eTIV) and amygdala nuclei volumes (adjusted for whole amygdala and eTIV) in acAN-T1 vs. age-matched HC") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  pack_rows(index = table(fct_inorder(ancova$variables_group)))

p.adjust.1 <- ancova %>%
  filter(term %in% "point_of_research") %>%
  mutate(main_glm = "GLM 1") %>%
  rename(point_of_research = term) %>%
  dplyr::select(main_glm, region, hemi_region, labeller, point_of_research, whole.sub, p.value)
``` 

```{r glmamygdalajoin, results="asis", message=FALSE, warning=FALSE}
ancova_join <- ancova %>%
  filter(term %in% "point_of_research") %>%
  mutate(is.signif.main = ifelse(p.adj < 0.05,
                            TRUE, FALSE)) %>%
  mutate(is.signif.main_label = ifelse(p.adj < 0.05,
                            "(+)", "(-)")) %>%
  mutate(term = dplyr::recode(term,
                       "point_of_research" = "AcAN-T1 vs. HC")) %>%
  dplyr::select(-region, whole.sub)

descramygdala_join %>%
  dplyr::select(-c(min.x, max.x, min.y, max.y)) %>%
  left_join(ancova_join, by=c("hemi_region", "labeller", "variables_group")) %>%
  left_join(emmeans_T1, by="hemi_region") %>%
  left_join(emmeans_HC, by="hemi_region") %>%
  mutate(emm.compare = ifelse(estimate.x > estimate.y,
         "AcAN-T1 > HC", "AcAN-T1 < HC")) %>%
  mutate(emm.compare = ifelse(is.signif.main == TRUE,
                              emm.compare, " ")) %>% 
  dplyr::select(-c(hemi_region, whole.sub, tidymeans, variables_group, adj.signif_2, is.signif.main, is.signif.main_label)) %>%
  knitr::kable(format = "html", digits=2, col.names = c("Analysis of interest", rep(c("n", "Mean (raw)", "SD (raw)"),2), "Study groups", "Type III SS", "Df", "F", "p", "FDR(BH)-adj. p", "Adj. signif.", "Partial eta squared", rep(c("EMM", "SE"),2), "EMMs acAN-T1 vs. HC"), align = "l", caption = "Main - ANCOVAs for left and right hemisphere whole amygdala volumes (adjusted for eTIV) and amygdala nuclei volumes (adjusted for whole amygdala and eTIV) in acAN-T1 vs. age-matched HC, including effect size statistics and covariate-adjusted means (EMMs)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c("", "acAN-T1 participants"=3, "HC participants"=3, "ANCOVA (GLM)"=8, "Adj. means acAN-T1"=2, "Adj. means HC"=2, "Comparison of model estimates"=1), align="l") %>% 
  pack_rows(index = table(fct_inorder(ancova_join$variables_group))) #%>%
  #save_kable("tables/mainglm.png", zoom=8)
``` 

```{r glmamygdalaeffects01, results="asis", message=FALSE, warning=FALSE}
descramygdala_join %>%
  dplyr::select(-c(min.x, max.x, min.y, max.y)) %>%
  left_join(ancova_join, by=c("hemi_region", "labeller", "variables_group")) %>%
  left_join(emmeans_T1, by="hemi_region") %>%
  left_join(emmeans_HC, by="hemi_region") %>%
  filter(p.adj < 0.05) %>%
  unite("effectsize", c(labeller, partial.etasq), sep = ", ", remove = FALSE, na.rm = FALSE) %>%
  summarize(effects = paste(effectsize, collapse="; ")) %>%
  knitr::kable(format = "html", digits=2, col.names = c("GLM effect size statistics (whole amygdala, only significant nuclei)"), align = "l") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") 
```

# Follow-up OR SM GLM 1 - Adjustment for gray matter volume (and eTIV)  
Version 1: adjustment for total GM volume (and eTIV),  
Version 2: adjustment for subcortical GM volume (and eTIV).  
Motivation: Amygdala (sub)region volumes are significantly associated with total and subcortical GM volumes (see Figures \@ref(fig:figuregray01) and \@ref(fig:figuresubgray01)). Cortical and subcortical gray matter atrophy is well documented to reversibly occur in the acute stage of AN (review by King et al., 2018) (see Table \@ref(tab:ttests01)) for differences in GM volumes across study groups in the current sample). This follow-up or SM model was introduced to assess whether group differences in amygdala (sub)volumes between acAN-T1 and age-matched HC are stable/reproducible when adjusting for total GM volume or subcortical GM volume in addition to eTIV. This would suggest more severe (or less severe) effects of acute AN on amygdala (sub)volumes in relation to the general atrophy of cortical and subcortical GM in AN (i.e. specific AN effects on amygdala nuclei rather than just global effects within the framework of AN-related GM loss). A similar approach was applied by Myrvang et al. (2018) to hippocampal subfields in AN (they supplementarily adjusted for total brain volume).  
*Note that this model for predicting amygdala nuclei volumes is not adjusted for whole amygdala volume (in contrast to our main GLM), since whole amygdala is no longer significantly different between age-matched study groups when covarying for gray matter volume and eTIV.*  

```{r glmamygdalagm, results="asis", message=FALSE, warning=FALSE}
sm.ancova.gm <- glmdata %>%
  mutate(point_of_research = relevel(point_of_research, ref="HCW")) %>% # reference group = HC participants
  #mutate(total_gray_centered = scale(total_gray, center=TRUE, scale=FALSE)) %>% # standardization/scaling via centering (x - mean) in order to reduce multicollinearity (alternatively: Z score transformation ((x - mean)/sd))
  #mutate(measure_quotient = measure/total_gray) %>%
  nest(data = - c(hemi_region, labeller, region)) %>%
  mutate(
    #lm = map(data, ~ lm(measure ~ point_of_research + total_gray + e_tiv, data = .x, na.action = na.omit)),
    lm = map(data, ~ lm(measure ~ point_of_research + subcort_gray + e_tiv, data = .x, na.action = na.omit)),
    #lm = map(data, ~ lm(measure ~ point_of_research*total_gray*e_tiv, data = .x, na.action = na.omit)), # test main effects and interactions
    #lm = map(data, ~ lm(measure ~ point_of_research + total_gray + whole_amygdala + e_tiv, data = .x, na.action = na.omit)), # in exploratory intention (not used!)
    adj.means = map(lm, ~ emmeans(.x, "point_of_research")),
    tidymeans = map(adj.means, tidy),
    anova = map(lm, ~ car::Anova(.x, type="III", test.statistic="F")),
    anova_stats = map(anova, ~ sjstats::anova_stats(.x))) %>%
  unnest(anova_stats) %>%
  mutate(whole.sub = ifelse(region %in% "Whole_amygdala", "whole", "subregion")) %>%
  group_by(whole.sub, term) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>%
  mutate(p.adj = as.numeric(p.adj)) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  mutate(adj.signif_2 = as.character(asterisk_function_2(p.adj))) %>%
  mutate(p.adj = formatC(p.adj, format="f", digits=2)) %>%
  mutate(p.value = formatC(p.value, format="f", digits=4)) %>%
  #mutate(adj.signif_2 = ifelse(adj.signif_2 %in% "ns", 
                               #paste("ns, p.adj =", p.adj),
                               #adj.signif_2)) %>%
  ungroup() %>%
  #filter(term %in% "point_of_research") %>%
  dplyr::select(region, hemi_region, whole.sub, labeller, tidymeans, term, sumsq, df, statistic, p.value, p.adj, 
                adj.signif, adj.signif_2, partial.etasq) %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group"))

emmeans.gm <- sm.ancova.gm %>%
  dplyr::select(hemi_region, region, labeller, tidymeans) %>%
  distinct(hemi_region, .keep_all=TRUE) %>%
  unnest(tidymeans) %>% # standard errors are equal across groups due to balanced design
  dplyr::select(hemi_region, region, labeller, point_of_research, estimate, std.error)

emmeans.gm_T1 <- emmeans.gm %>% filter(point_of_research %in% "T1") %>%
   dplyr::select(-c(point_of_research, region, labeller))

emmeans.gm_HC <- emmeans.gm %>% filter(point_of_research %in% "HCW") %>%
   dplyr::select(-c(point_of_research, region, labeller))


sm.ancova.gm %>%
  mutate(term = dplyr::recode(term,
                       "point_of_research" = "AcAN-T1 vs. HC")) %>%
  dplyr::select(-c(region, whole.sub, hemi_region, tidymeans, variables_group)) %>%
  knitr::kable(format = "html", digits=3, col.names = c("Analysis of interest", "Study groups", "Type III SS", "Df", "F", "p", "FDR(BH)-adj. p", "Adj. signif.", "Adjusted significance", "Partial eta squared"), align = "l", 
               caption = "ANCOVAs (GLMs) for left and right hemisphere whole amygdala and amygdala nuclei volumes in acAN-T1 vs. age-matched HC, adjusted for subcortical gray matter volume and eTIV") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  pack_rows(index = table(fct_inorder(sm.ancova.gm$variables_group)))

p.adjust.2 <- sm.ancova.gm %>%
  filter(term %in% "point_of_research") %>%
  mutate(main_glm = "GLM 2") %>%
  rename(point_of_research = term) %>%
  dplyr::select(main_glm, region, hemi_region, labeller, point_of_research, whole.sub, p.value)
``` 

```{r glmamygdalagmjoin, results="asis", message=FALSE, warning=FALSE}
sm.ancova.gm_join <- sm.ancova.gm  %>%
  filter(term %in% "point_of_research") %>%
  mutate(is.signif.gm = ifelse(p.adj < 0.05,
                            "(+)", "(-)")) %>%
  mutate(term = dplyr::recode(term,
                       "point_of_research" = "AcAN-T1 vs. HC")) %>%
  dplyr::select(-region, whole.sub)

compare.main <- ancova_join %>%
  dplyr::select(hemi_region, adj.signif) %>%
  rename(adj.signif.main = adj.signif)

descramygdala_join %>%
  dplyr::select(-c(min.x, max.x, min.y, max.y)) %>%
  left_join(sm.ancova.gm_join, by=c("hemi_region", "labeller", "variables_group")) %>%
  left_join(emmeans.gm_T1, by="hemi_region") %>%
  left_join(emmeans.gm_HC, by="hemi_region") %>%
  mutate(emm.compare = ifelse(estimate.x > estimate.y,
         "acAN-T1 > HC", "acAN-T1 < HC")) %>%
  mutate(emm.compare = ifelse(is.signif.gm == "(+)",
                              emm.compare, " ")) %>%
  left_join(compare.main, by="hemi_region") %>%
  dplyr::select(-c(hemi_region, whole.sub, tidymeans, variables_group, is.signif.gm, adj.signif_2)) %>%
  knitr::kable(format = "html", digits=2, col.names = c("Analysis of interest", rep(c("n", "Mean (raw)", "SD (raw)"),2), "Study groups", "Type III SS", "Df", "F", "p", "FDR(BH)-adj. p", "Adj. signif.", "Partial eta squared", rep(c("EMM", "SE"),2), "EMMs acAN-T1 vs. HC", "Adj. signif. in main GLM"), align = "l", caption = "Follow-up or SM - ANCOVAs for left and right hemisphere whole amygdala and amygdala nuclei volumes in acAN-T1 vs. age-matched HC, adjusted for subcortical gray matter volume and eTIV, including effect size statistics and covariate-adjusted means (EMMs)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c("", "acAN-T1 participants"=3, "HC participants"=3, "ANCOVA (GLM)"=8, "Adj. means acAN-T1"=2, "Adj. means HC"=2, "Comparison of model estimates"=1, "Comparison to main GLM"=1), align="l") %>% 
  pack_rows(index = table(fct_inorder(sm.ancova.gm_join$variables_group))) #%>%
  #save_kable("tables/tgmglm.png", zoom=8)
``` 

```{r glmamygdalaeffects02, results="asis", message=FALSE, warning=FALSE}
descramygdala_join %>%
  dplyr::select(-c(min.x, max.x, min.y, max.y)) %>%
  left_join(sm.ancova.gm_join, by=c("hemi_region", "labeller", "variables_group")) %>%
  left_join(emmeans.gm_T1, by="hemi_region") %>%
  left_join(emmeans.gm_HC, by="hemi_region") %>%
  filter(p.adj < 0.05) %>%
  unite("effectsize", c(labeller, partial.etasq), sep = ", ", remove = FALSE, na.rm = FALSE) %>%
  summarize(effects = paste(effectsize, collapse="; ")) %>%
  knitr::kable(format = "html", digits=2, col.names = c("GLM effect size statistics (subcortical gray matter, only significant nuclei)"), align = "l") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") 
```

```{r padjustglm, results="asis", message=FALSE, warning=FALSE}
p.combiadjust <- bind_rows(p.adjust.1, p.adjust.2) %>%
  group_by(whole.sub) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>%
  mutate(p.adj = as.numeric(p.adj)) %>%
  mutate(adj.signif_2 = as.character(asterisk_function_2(p.adj))) 

p.combiadjust %>%
  knitr::kable(format = "html", digits=3, col.names = c("Main GLM", "Region", "Whole amygdala or subregion", "Raw p", "Adjusted p", "Adjusted significance"), align = "l", caption = "FDR adjustment across both main model approaches") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```


# Introduction to SM GLM 2 {#smglm2}  
SM [GLM](#smglmclin) adjusted for further demographic and clinical variables of potential relevance or confounding influence: IQ, handedness and smoking, exclusion of acAN-T1 patients with psychiatric comorbidity or psychoactive medication (selection of covariates is based on literature research and previous studies, see [Appendix](#smglmclin) for details).  
Adjustments for eTIV and - in case of amygdala nuclei - for whole amygdala volume (+ eTIV) are identical to our main GLM (see [here](#mainglm)).  

# Introduction to SM GLM 3  
Adjustment only for eTIV for whole amygdala and amygdala nuclei (+ age-matched samples).  

```{r glmamygdalaetiv, results="hide", message=FALSE, warning=FALSE}
ancova.etiv <- glmdata %>%
  mutate(point_of_research = relevel(point_of_research, ref="HCW")) %>%
  nest(data = - c(hemi_region, labeller, region)) %>%
  mutate(
    lm = map(data, ~ lm(measure ~ point_of_research + e_tiv, data = .x, na.action = na.omit)),
    adj.means = map(lm, ~ emmeans(.x, "point_of_research")),
    tidymeans = map(adj.means, tidy),
    anova = map(lm, ~ car::Anova(.x, type="III", test.statistic="F")),
    anova_stats = map(anova, ~ sjstats::anova_stats(.x))) %>%
  unnest(anova_stats) %>%
  mutate(whole.sub = ifelse(region %in% "Whole_amygdala", "whole", "subregion")) %>%
  group_by(whole.sub, term) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>%
  mutate(p.adj = as.numeric(p.adj)) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  mutate(adj.signif_2 = as.character(asterisk_function_2(p.adj))) %>%
  mutate(p.adj = formatC(p.adj, format="f", digits=2)) %>%
  mutate(p.value = formatC(p.value, format="f", digits=4)) %>%
  #mutate(adj.signif_2 = ifelse(adj.signif_2 %in% "ns", 
                               #paste("ns, p.adj =", p.adj),
                               #adj.signif_2)) %>%
  ungroup() %>%
  #filter(term %in% "point_of_research") %>%
  dplyr::select(region, hemi_region, labeller, tidymeans, term, sumsq, df, statistic, p.value, p.adj, 
                adj.signif, adj.signif_2, partial.etasq) %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group"))

emmeans.etiv <- ancova.etiv %>%
  dplyr::select(hemi_region, region, labeller, tidymeans) %>%
  distinct(hemi_region, .keep_all=TRUE) %>%
  unnest(tidymeans) %>% # standard errors are equal across groups due to balanced design
  dplyr::select(hemi_region, region, labeller, point_of_research, estimate, std.error)
``` 

```{r glmamygdalaeffects03, results="asis", message=FALSE, warning=FALSE}
ancova.etiv %>%
  filter(term %in% "point_of_research") %>%
  filter(p.adj < 0.05) %>%
  unite("effectsize", c(labeller, partial.etasq), sep = ", ", remove = FALSE, na.rm = FALSE) %>%
  summarize(effects = paste(effectsize, collapse="; ")) %>%
  knitr::kable(format = "html", digits=2, col.names = c("GLM effect size statistics (eTIV, only significant nuclei)"), align = "l") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") 
```


# Model comparison table  
See [Appendix](#modelcompare) for comparisons of our main GLM to both SM GLMs regarding the significance of AN vs. HC differences in amygdala (sub)regions.  


# Bar plots for main GLMs  
**FDR-adjusted significance levels** of group differences between AN and age-matched HC participants were added to the plots (with the help of package ggsignif::geom_signif).  

```{r figuresettings02, results='hide', include=TRUE, message=FALSE, warning=FALSE}
plot_theme_transparent2 = theme(plot.title = element_text(size=18, face="bold"), 
                   strip.text = element_text(size=16), 
                   axis.text = element_text(size=22), 
                   axis.title = element_text(size=22), 
                   axis.line = element_line(color = "black"), 
                   panel.background = element_rect(fill="transparent"), 
                   plot.background = element_rect(fill="transparent", color=NA), 
                   panel.border = element_blank(),
                   panel.grid.major = element_blank(), 
                   panel.grid.minor = element_blank(), 
                   strip.background = element_rect(color=NA, fill="grey90"))
``` 

```{r figurebarplot01, fig.cap="Barplots for main GLM 1 (whole amgygdala)", echo=TRUE, message=FALSE, warning=FALSE}
bardata01 <- emmeans %>%
  group_by(region) %>% arrange(region, .by_group=TRUE) %>%
  mutate(point_of_research = dplyr::recode(point_of_research,
                                    "T1" = "AN",
                                    "HCW" = "HC")) %>%
  mutate(xlabels = ifelse(region %in% c("Whole_amygdala", "Lateral_nucleus", "Medial_nucleus", "Paralaminar_nucleus"),
                          TRUE, FALSE))

y.position.bar <- emmeans %>% 
  group_by(region) %>%
  arrange(desc(estimate), .by_group=TRUE) %>% # y positions are regulated by maximum volume measure per region
  slice_head(n = 1) %>%
  mutate(ymin = round((0.90*estimate)-5, -1)) %>%
  mutate(ymax = round((1.05*estimate)+5, -1)) %>%
  mutate(y.position = (0.85*(ymax-ymin))+ymin) %>%
  dplyr::select(region, y.position, ymin, ymax) %>%
  ungroup()

plotlist = list()

for (Region in unique(bardata01$region)) {
  
  plotdata <- bardata01 %>% filter(region %in% Region)
  
  pvalues <- p.combiadjust %>%
    filter(main_glm %in% "GLM 1") %>%
    filter(region %in% Region) %>%
    dplyr::select(region, hemi_region, labeller, point_of_research, adj.signif_2) %>%
    left_join(y.position.bar, by="region") %>%
    mutate(xmin = 1) %>%
    mutate(xmax = 2) #%>%
    #mutate(textsize = ifelse(p.adj<0.05, 8, 3))
  
  yaxis <- y.position.bar %>%
    filter(region %in% Region)
  
  barplots <- plotdata %>%
    ggplot(aes(x=point_of_research, y=estimate, fill = point_of_research, color = point_of_research)) +
    geom_bar(stat="identity", color=NA, position=position_dodge()) +
    geom_errorbar(aes(ymin=estimate-std.error, ymax=estimate+std.error), width=0.2, size=1.0, color = "BLACK",
                 position=position_dodge(1)) +
    geom_signif(data=pvalues, aes(annotations = adj.signif_2, y_position = y.position, xmin = xmin, xmax = xmax), 
              tip_length = 0.05, textsize=9, vjust = -0.45, color = "BLACK", manual = TRUE) +
    scale_y_continuous(breaks = pretty_breaks(n=3)) +
    coord_cartesian(ylim=c(yaxis$ymin, yaxis$ymax)) +
    scale_fill_jama(alpha=0.8) + scale_color_jama(alpha=0.8) +
    plot_theme_transparent2 + 
    theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
    theme(strip.text.x = element_text(size=20)) +
    guides(fill = FALSE, color = FALSE) +
    facet_wrap(~ labeller, scales="free_x", labeller = label_wrap_gen(width=15))
  
  if(plotdata$xlabels == FALSE) {
   barplots = barplots + 
     theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
   }
  
 plotlist[[Region]] = barplots
 
}

bp.whole01 <- plotlist$Whole_amygdala
bp.nuclei01 <- plotlist[1:9] 

barplotarrange01 <- ggarrange(bp.whole01, 
          ggarrange(plotlist=bp.nuclei01, ncol=3, nrow=3),
          ncol=2, widths=c(1,2)) %>%
  annotate_figure(left = text_grob("Volumes (EMM ± SEM) in mm^3", size=24, rot=90))

barplotarrange01

ggsave(barplotarrange01, path="figures", filename="barplots_amy_glm_whole_amygdala02.png", width=25, height=18, dpi=300)
```

```{r figurebarplot02, fig.cap="Barplots for main GLM 2 (subcortical gray matter)", echo=TRUE, message=FALSE, warning=FALSE}
bardata02 <- emmeans.gm %>%
  group_by(region) %>% arrange(region, .by_group=TRUE) %>%
  mutate(point_of_research = dplyr::recode(point_of_research,
                                    "T1" = "AN",
                                    "HCW" = "HC")) %>%
  mutate(xlabels = ifelse(region %in% c("Whole_amygdala", "Lateral_nucleus", "Medial_nucleus", "Paralaminar_nucleus"),
                          TRUE, FALSE))

y.position.bar <- emmeans.gm %>% 
  group_by(region) %>%
  arrange(desc(estimate), .by_group=TRUE) %>% # y positions are regulated by maximum volume measure per region
  slice_head(n = 1) %>%
  mutate(ymin = round((0.90*estimate)-5, -1)) %>%
  mutate(ymax = round((1.05*estimate)+5, -1)) %>%
  mutate(y.position = (0.85*(ymax-ymin))+ymin) %>%
  dplyr::select(region, y.position, ymin, ymax) %>%
  ungroup()

plotlist = list()

for (Region in unique(bardata02$region)) {
  
  plotdata <- bardata02 %>% filter(region %in% Region)
  
  pvalues <- p.combiadjust %>%
    filter(main_glm %in% "GLM 2") %>%
    filter(region %in% Region) %>%
    dplyr::select(region, hemi_region, labeller, point_of_research, adj.signif_2) %>%
    left_join(y.position.bar, by="region") %>%
    mutate(xmin = 1) %>%
    mutate(xmax = 2)
  
  yaxis <- y.position.bar %>%
    filter(region %in% Region)
  
  barplots <- plotdata %>%
    ggplot(aes(x=point_of_research, y=estimate, fill = point_of_research, color = point_of_research)) +
    geom_bar(stat="identity", color=NA, position=position_dodge()) +
    geom_errorbar(aes(ymin=estimate-std.error, ymax=estimate+std.error), width=0.2, size=1.0, color = "BLACK",
                 position=position_dodge(1)) +
    geom_signif(data=pvalues, aes(annotations = adj.signif_2, y_position = y.position, xmin = xmin, xmax = xmax), 
              tip_length = 0.05, textsize = 9, vjust = -0.45, color = "BLACK", manual = TRUE) +
    scale_y_continuous(breaks = pretty_breaks(n=3)) +
    coord_cartesian(ylim=c(yaxis$ymin, yaxis$ymax)) +
    scale_fill_jama(alpha=0.8) + scale_color_jama(alpha=0.8) +
    plot_theme_transparent2 + 
    theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
    theme(strip.text.x = element_text(size=20)) +
    guides(fill = FALSE, color = FALSE) +
    facet_wrap(~ labeller, scales="free_x", labeller = label_wrap_gen(width=15))
  
  if(plotdata$xlabels == FALSE) {
   barplots = barplots + 
     theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
   }
  
 plotlist[[Region]] = barplots
 
}

bp.whole02 <- plotlist$Whole_amygdala
bp.nuclei02 <- plotlist[1:9] 

barplotarrange02 <- ggarrange(bp.whole02, 
          ggarrange(plotlist=bp.nuclei02, ncol=3, nrow=3),
          ncol=2, widths=c(1,2)) %>%
  annotate_figure(left = text_grob("Volumes (EMM ± SEM) in mm^3", size=24, rot=90))

barplotarrange02

ggsave(barplotarrange02, path="figures", filename="barplots_amy_glm_subcort_gm02.png", width=25, height=18, dpi=300)
```

```{r figurebarplot03, fig.cap="Barplots for SM GLM (only eTIV)", echo=TRUE, message=FALSE, warning=FALSE}
bardata03 <- emmeans.etiv %>%
  group_by(region) %>% arrange(region, .by_group=TRUE) %>%
  mutate(point_of_research = dplyr::recode(point_of_research,
                                    "T1" = "AN",
                                    "HCW" = "HC")) %>%
  mutate(xlabels = ifelse(region %in% c("Whole_amygdala", "Lateral_nucleus", "Medial_nucleus", "Paralaminar_nucleus"),
                          TRUE, FALSE))

y.position.bar <- emmeans.etiv %>% 
  group_by(region) %>%
  arrange(desc(estimate), .by_group=TRUE) %>% # y positions are regulated by maximum volume measure per region
  slice_head(n = 1) %>%
  mutate(ymin = round((0.90*estimate)-5, -1)) %>%
  mutate(ymax = round((1.05*estimate)+5, -1)) %>%
  mutate(y.position = (0.85*(ymax-ymin))+ymin) %>%
  dplyr::select(region, y.position, ymin, ymax) %>%
  ungroup()

plotlist = list()

for (Region in unique(bardata03$region)) {
  
  plotdata <- bardata03 %>% filter(region %in% Region)
  
  pvalues <- ancova.etiv %>%
    filter(term %in% "point_of_research") %>%
    filter(region %in% Region) %>%
    rename(point_of_research = term) %>%
    dplyr::select(region, hemi_region, labeller, point_of_research, adj.signif_2) %>%
    left_join(y.position.bar, by="region") %>%
    mutate(xmin = 1) %>%
    mutate(xmax = 2)
  
  yaxis <- y.position.bar %>%
    filter(region %in% Region)
  
  barplots <- plotdata %>%
    ggplot(aes(x=point_of_research, y=estimate, fill = point_of_research, color = point_of_research)) +
    geom_bar(stat="identity", color=NA, position=position_dodge()) +
    geom_errorbar(aes(ymin=estimate-std.error, ymax=estimate+std.error), width=0.2, size=1.0, color = "BLACK",
                 position=position_dodge(1)) +
    geom_signif(data=pvalues, aes(annotations = adj.signif_2, y_position = y.position, xmin = xmin, xmax = xmax), 
              tip_length = 0.05, textsize = 9, vjust = -0.45, color = "BLACK", manual = TRUE) +
    scale_y_continuous(breaks = pretty_breaks(n=3)) +
    coord_cartesian(ylim=c(yaxis$ymin, yaxis$ymax)) +
    scale_fill_jama(alpha=0.8) + scale_color_jama(alpha=0.8) +
    plot_theme_transparent2 + 
    theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
    theme(strip.text.x = element_text(size=20)) +
    guides(fill = FALSE, color = FALSE) +
    facet_wrap(~ labeller, scales="free_x", labeller = label_wrap_gen(width=15))
  
  if(plotdata$xlabels == FALSE) {
   barplots = barplots + 
     theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
   }
  
 plotlist[[Region]] = barplots
 
}

bp.whole03 <- plotlist$Whole_amygdala
bp.nuclei03 <- plotlist[1:9] 

barplotarrange03 <- ggarrange(bp.whole03, 
          ggarrange(plotlist=bp.nuclei03, ncol=3, nrow=3),
          ncol=2, widths=c(1,2)) %>%
  annotate_figure(left = text_grob("Volumes (EMM ± SEM) in mm^3", size=24, rot=90))

barplotarrange03

ggsave(barplotarrange03, path="figures", filename="barplots_amy_glm_etiv02.png", width=25, height=18, dpi=300)
```


# Raw data and data distribution - Raincloud plot visualization of amygdala (sub)region measures in acAN-T1 vs. HC  
Age-matched samples, no further adjustments.  
Raincloud plots are defined as a combined illustration of distribution (split violin plots showing probability density), raw data (jittered points) and boxplots in order to maximize the statistical information provided by these plots.  

```{r figureraincloud, fig.cap="Raincloud plots - combined visualization of distribution, raw data and boxplots for amygdala volumes of acAN-T1 and HC participants", echo=TRUE, message=FALSE, warning=FALSE}
rcdata <- glmdata %>%
  group_by(region) %>% arrange(region, .by_group=TRUE) %>%
  mutate(point_of_research = dplyr::recode(point_of_research,
                                    "T1" = "AN",
                                    "HCW" = "HC")) %>%
  mutate(xlabels = ifelse(region %in% c("Whole_amygdala", "Lateral_nucleus", "Medial_nucleus", "Paralaminar_nucleus"),
                          TRUE, FALSE))

plotlist = list()

for (Region in unique(rcdata$region)) {
  
  plotdata <- rcdata %>% filter(region %in% Region)
  
  #pvalues <- ancova %>% # for significance plotting (adjusted p-values + brackets)
  #filter(term %in% "point_of_research") %>%
  #filter(region %in% Region) %>%
  #rename(point_of_research = term) %>%
  #dplyr::select(region, hemi_region, labeller, point_of_research, adj.signif_2) %>%
  #left_join(y.position, by="region") %>%
  #mutate(xmin = 1.2) %>%
  #mutate(xmax = 2.2)

  rainclouds <- plotdata %>%
    ggplot(aes(x = point_of_research, y = measure, fill = point_of_research, 
             color = point_of_research)) +
    geom_flat_violin(position = position_nudge(x = 0.2, y = 0), adjust = 0.8, 
                   trim = FALSE, alpha=0.8, color=NA) +
    geom_point(aes(x = as.numeric(point_of_research) - 0.1, y=measure), # x axis must be numeric variable + bump x axis to get the boxplots line up with the rainclouds
             position = position_jitter(width = 0.15), size = 0.5) +
    stat_boxplot(aes(x = as.numeric(point_of_research) + 0.2, y = measure), geom="errorbar",
               width=0.1, size=0.8, position=position_dodge(1), color = "BLACK", alpha=1) +
    geom_boxplot(aes(x = as.numeric(point_of_research) + 0.2, y = measure), outlier.shape=NA,
               width = 0.1, position=position_dodge(1), color = "BLACK", size=1.15, fatten=1.35) +
    #geom_signif(data=pvalues, aes(annotations = adj.signif_2, y_position = y.position, xmin = xmin, xmax = xmax), 
              #tip_length = 0.03, textsize = 3, vjust = -0.3, color = "BLACK", manual = TRUE) +
    scale_fill_jama(alpha=0.8) + scale_color_jama(alpha=0.8) +
    #coord_flip() + 
    plot_theme_transparent2 + 
    theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
    theme(strip.text.x = element_text(size=20)) +
    guides(fill = FALSE, color = FALSE) +
    facet_wrap(~ labeller, scales="free_x", labeller = label_wrap_gen(width=15))
  
  if(plotdata$xlabels == FALSE) {
   rainclouds = rainclouds + 
     theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
   }
  
 plotlist[[Region]] = rainclouds
 
}

rc.whole <- plotlist$Whole_amygdala
rc.nuclei <- plotlist[1:9] 

raincloudarrange <- ggarrange(rc.whole, 
          ggarrange(plotlist=rc.nuclei, ncol=3, nrow=3),
          ncol=2, widths=c(1,2)) %>%
  annotate_figure(left = text_grob("Volumes (raw) in mm^3", size=24, rot=90),
                  top = text_grob("Whole amygdala and amygdala nuclei volumes in acAN and age-matched HC", size=28))

raincloudarrange

ggsave(raincloudarrange, path="figures", filename="raincloud_amy.png", width=25, height=18, dpi=300)
```

**Further options for visualization (e.g. for SM):** 3D brain model with significant (acAN-T1 vs. HC) amygdala regions, useful links (import of FreeSurfer subcortical structures is possible, but only based on an amygdala nuclei atlas!): [Link 1](https://brainder.org/research/brain-for-blender/), [Link 2](https://brainder.org/2012/05/08/importing-freesurfer-subcortical-structures-into-blender/).  


# Associations of amygdala (sub)region volumes with clinical characteristics in acAN-T1  
**Motivation:** Given the detected group differences in amygdala (sub)region volumes between acAN-T1 patients and HC, it is of interest to investigate whether these observed structural alterations in the amygdala are associated with clinical features (or psychiatric symptom levels) of acute AN: BMI(-SDS), Minimum lifetime BMI, duration of illness in months, depressive (via BDI-II) and anxiety symptoms (via STAI) *(background: amygdala plays an essential role in the processing of fear and negative emotions (review by Baxter and Murray, 2002))* and reward scales (via BisBas) *(background: amygdala has an impact on the reward system (e.g. also addiction, review by Baxter and Murray see above))*.  
Exploratively. self-control BSCS factorial scores according to Morean et al. (2014) were examined, as well (self discipline and impulse control have been reported to be altered in AN). Seidel et al. (2018) found increased amygdala fMRI activation in AN patients when viewing aversive disorder-unrelated stimuli, which was associated with heightened negative emotional arousal and the self-control hypothesis in AN.  

(Eventually also global psychopathological impairment (via SCL-90-R GSI) and eating disorder symptoms (via EDI-2), background: EDI-2 is a rudimentary questionnaire in the field of AN research, amygdala was shown to be involved in the regulation of appetitive stimuli including the motivation to eat.)  

## Nonparametric (Spearman's rho) partial correlations between amygdala (sub)region measures and clinical variables in acAN-T1 patients {#cor}  
Also within the acAN-T1 patients, age seems to have a (weak) influence on the amygdala (sub)region volumes (see Figure \@ref(fig:figureage01)). Additionally (known from literature, e.g. STAI vs. STAIK), age influences the performance/scoring in self-report questionnaires assessing psychiatric symptom levels. Thus, age at date of research is introduced as a covariate in the following partial correlations.  
Besides, eTIV serves as another covariate in line with our main GLM. => Summary - covariates: age + eTIV.  

Since perfect normality cannot be assumed for psychopathological scores (amygdala measures are normally distributed, in contrast) and it is of interest to also investigate relationships other than strictly linear ones, robust Spearman's rho (rank-order based) was used as the correlational measure (Spearman correlation coefficients).  

**Alternative 1: Correlations were only assessed for amygdala (sub)regions among acAN-T1 with an FDR-adjusted p-value of < 0.05 in our main GLM (see [here](#mainglm) for main GLM), i.e. only for amygdala (sub)structures significantly different from HC according to the main GLM. Alternative 2: Correlations only assessed for significant (sub)regions according to (subcort) gray matter-adjusted GLM.**  

```{r robustregressionsubcort, results="asis", message=FALSE, warning=FALSE}
cordata <- ancova_join %>%
  dplyr::select(hemi_region, is.signif.main) %>%
  left_join(compare.gm, by="hemi_region") %>%
  right_join(glmdata, by="hemi_region") %>%
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) %>%
  filter(point_of_research %in% "T1") %>%
  #filter(is.signif.main == TRUE) %>% # Alternative 1: correlations only for significant amygdala (sub)regions in main GLM!
  filter(is.signif.gm == "(+)") %>% # Alternative 2: correlations only for significant amygdala (sub)regions after GM adjustment!
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables chosen to fill missing values for clinical variables (that is why key != storage_name)
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, subcort_gray,
                measure, bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an,
                resultquest_bdi2_total, edi_core, resultquest_scl90r_skagloba, s.anxiety, t.anxiety) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, 
                  subcort_gray, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  mutate(
    rlm = map(data, ~ rlm(value ~ measure + age_at_date_of_research + e_tiv + subcort_gray, data=.x, na.action = na.omit)),
    tidyrlm = map(rlm, tidy),
    tidyrlm = map(tidyrlm, ~ rename(.x, t.value = statistic)),
    testrlm = map(rlm, ~ f.robftest(.x, var = "measure")),
    tidytestrlm = map(testrlm, tidy),
    tidytestrlm = map(tidytestrlm, ~ rename(.x, F.value = statistic)),
    filterrlm = map(tidyrlm, ~ filter(.x, term %in% "measure"))) %>%
  unnest(tidytestrlm, filterrlm) %>%
  mutate(unadj.signif = as.character(asterisk_function(p.value))) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, t.value, p.value, unadj.signif, p.adj, adj.signif) %>%
  mutate(p.value = formatC(p.value, format="f", digits=3)) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>%
  unnest(bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an, resultquest_bdi2_total,
         edi_core, resultquest_scl90r_skagloba, s.anxiety, t.anxiety)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

cordata %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  knitr::kable(format = "html", digits=2, align = "l", col.names=c("Amygdala (sub)regions (GLM adj. subcort. GM volume,
                                                                   p.adj<0.05)", rep(c("t", "p", "Unadj. signif.", "p.adj", "Adj. signif."), 8)), caption = "Robust regression models in acAN-T1 (adjusted for participant age, eTIV and subcort. GM volume)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=5, "Amygdala ~ Leptin"=5, "Amygdala ~ Duration of illness"=5, "Amygdala ~ BDI-II total score"=5, "Amygdala ~ EDI-2 core"=5, "Amygdala ~ SCL-90-R GSI"=5, "Amygdala ~ STAI(K) State Anxiety Score"=5, "Amygdala ~ STAI(K) Trait Anxiety Score"=5), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata$variables_group))) 
```

```{r robustregressionamygdala, results="asis", message=FALSE, warning=FALSE}
glmdata_wholeamy <- m.data_age %>%
  filter(region %in% "Whole_amygdala") %>%
  dplyr::select(storage_name, hemi, measure) %>%
  rename(whole_amygdala = measure) %>%
  right_join(glmdata, by=c("storage_name", "hemi"))

cordata <- ancova_join %>%
  dplyr::select(hemi_region, is.signif.main) %>%
  right_join(glmdata_wholeamy, by="hemi_region") %>%
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) %>%
  filter(point_of_research %in% "T1") %>%
  filter(is.signif.main == TRUE) %>% # Alternative 1: correlations only for significant amygdala (sub)regions in main GLM!
  filter(hemi_region != "rh_Anterior_amygdaloid_area") %>%
  filter(region != "Whole_amygdala") %>%
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables chosen to fill missing values for clinical variables (that is why key != storage_name)
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, whole_amygdala,
                measure, bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an,
                resultquest_bdi2_total, edi_core, resultquest_scl90r_skagloba, s.anxiety, t.anxiety) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, whole_amygdala, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  mutate(
    rlm = map(data, ~ rlm(value ~ measure + age_at_date_of_research + e_tiv + whole_amygdala, data=.x, na.action = na.omit)),
    tidyrlm = map(rlm, tidy),
    tidyrlm = map(tidyrlm, ~ rename(.x, t.value = statistic)),
    testrlm = map(rlm, ~ f.robftest(.x, var = "measure")),
    tidytestrlm = map(testrlm, tidy),
    tidytestrlm = map(tidytestrlm, ~ rename(.x, F.value = statistic)),
    filterrlm = map(tidyrlm, ~ filter(.x, term %in% "measure"))) %>%
  unnest(tidytestrlm, filterrlm) %>%
  mutate(unadj.signif = as.character(asterisk_function(p.value))) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, t.value, p.value, unadj.signif, p.adj, adj.signif) %>%
  mutate(p.value = formatC(p.value, format="f", digits=3)) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>%
  unnest(bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an, resultquest_bdi2_total,
         edi_core, resultquest_scl90r_skagloba, s.anxiety, t.anxiety)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

cordata %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  knitr::kable(format = "html", digits=2, align = "l", col.names=c("Amygdala (sub)regions (GLM adj. whole amygdala, p.adj<0.05)", rep(c("t", "p", "Unadj. signif.", "p.adj", "Adj. signif."), 8)), caption = "Robust regression models in acAN-T1 (adjusted for participant age, eTIV and whole amygdala volume)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=5, "Amygdala ~ Leptin"=5, "Amygdala ~ Duration of illness"=5, "Amygdala ~ BDI-II total score"=5, "Amygdala ~ EDI-2 core"=5, "Amygdala ~ SCL-90-R GSI"=5, "Amygdala ~ STAI(K) State Anxiety Score"=5, "Amygdala ~ STAI(K) Trait Anxiety Score"=5), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata$variables_group))) 
```

```{r robustregressionwhole, results="asis", message=FALSE, warning=FALSE}
cordata <- glmdata %>%
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) %>%
  filter(point_of_research %in% "T1") %>%
  filter(region %in% "Whole_amygdala") %>%
  left_join(stai, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv,
                measure, bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an,
                resultquest_bdi2_total, edi_core, resultquest_scl90r_skagloba, s.anxiety, t.anxiety) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  mutate(
    rlm = map(data, ~ rlm(value ~ measure + age_at_date_of_research + e_tiv, data=.x, na.action = na.omit)),
    tidyrlm = map(rlm, tidy),
    tidyrlm = map(tidyrlm, ~ rename(.x, t.value = statistic)),
    testrlm = map(rlm, ~ f.robftest(.x, var = "measure")),
    tidytestrlm = map(testrlm, tidy),
    tidytestrlm = map(tidytestrlm, ~ rename(.x, F.value = statistic)),
    filterrlm = map(tidyrlm, ~ filter(.x, term %in% "measure"))) %>%
  unnest(tidytestrlm, filterrlm) %>%
  mutate(unadj.signif = as.character(asterisk_function(p.value))) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, t.value, p.value, unadj.signif, p.adj, adj.signif) %>%
  mutate(p.value = formatC(p.value, format="f", digits=3)) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>%
  unnest(bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an, resultquest_bdi2_total,
         edi_core, resultquest_scl90r_skagloba, s.anxiety, t.anxiety)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

cordata %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  knitr::kable(format = "html", digits=2, align = "l", col.names=c("Whole amygdala (GLM adj. eTIV, p.adj<0.05)", rep(c("t", "p", "Unadj. signif.", "p.adj", "Adj. signif."), 8)), caption = "Robust regression models in acAN-T1 (adjusted for participant age and eTIV)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=5, "Amygdala ~ Leptin"=5, "Amygdala ~ Duration of illness"=5, "Amygdala ~ BDI-II total score"=5, "Amygdala ~ EDI-2 core"=5, "Amygdala ~ SCL-90-R GSI"=5, "Amygdala ~ STAI(K) State Anxiety Score"=5, "Amygdala ~ STAI(K) Trait Anxiety Score"=5), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata$variables_group))) 
```



*Correlations*
```{r corantotalgm, include=FALSE, results="asis", message=FALSE, warning=FALSE}
compare.gm <- sm.ancova.gm_join %>%
  dplyr::select(hemi_region, is.signif.gm)

cordata <- ancova_join %>%
  dplyr::select(hemi_region, is.signif.main) %>%
  left_join(compare.gm, by="hemi_region") %>%
  right_join(glmdata, by="hemi_region") %>%
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) %>%
  filter(point_of_research %in% "T1") %>%
  #filter(is.signif.main == TRUE) %>% # Alternative 1: correlations only for significant amygdala (sub)regions in main GLM!
  filter(is.signif.gm == "(+)") %>% # Alternative 2: correlations only for significant amygdala (sub)regions after GM adjustment!
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables chosen to fill missing values for clinical variables (that is why key != storage_name)
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, is.signif.gm, age_at_date_of_research, e_tiv, total_gray,
                measure, bmisds_at_date_of_research, onset_of_an,
                resultquest_bdi2_total, s.anxiety, t.anxiety, bas_rewardresponsiveness,
                resultquest_bscs_i, resultquest_bscs_s) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, is.signif.gm, age_at_date_of_research, e_tiv, 
                  total_gray, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, is.signif.gm, demo_variable)) %>%
    mutate(
    pcordata = map(data, ~ drop_na(.x)), # partial correlation function cannot deal with missing values, drop rows with missing values in any of the correlated variables
    pcor = map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x[, c("age_at_date_of_research", "e_tiv", 
                                                                              "total_gray")], 
                                     method="spearman"))) %>%
  unnest(pcor) %>% # adjustment for multiple comparisons for all tests!
  mutate(unadj.signif = as.character(asterisk_function(p.value))) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>% # False Discovery Rate, Benjamini-Hochberg correction
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller,is.signif.gm, demo_variable, estimate, p.value, unadj.signif, p.adj, adj.signif) %>%
  nest(-c(hemi_region, labeller, is.signif.gm, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>% # proper formatting for the correlation table output
  unnest(bmisds_at_date_of_research, onset_of_an, resultquest_bdi2_total, s.anxiety, t.anxiety,
         bas_rewardresponsiveness, resultquest_bscs_i, resultquest_bscs_s)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

cordata %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  dplyr::select(-is.signif.gm) %>%
  knitr::kable(format = "html", digits=2, align = "l", col.names=c("Amygdala (sub)regions (GLM adj. total GM, p.adj<0.05)", rep(c("rho", "p", "Unadj. signif.", "FDR(BH)-adj. p", "Adj. signif."), 8)), caption = "Nonparametric partial correlations in acAN-T1 between amygdala (sub)region volumes significantly different from HC (GLM adjusted for total GM volume) and clinical variables or symptom scores (adjusted for participant age, eTIV and total GM)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=5, "Amygdala ~ Duration of illness"=5, "Amygdala ~ BDI-II total score"=5, "Amygdala ~ STAI(K) State Anxiety Score"=5, "Amygdala ~ STAI(K) Trait Anxiety Score"=5, "Amygdala ~ BAS score reward responsiveness"=5, "Amygdala ~ BSCS Impulse control"=5, "Amygdala ~ BSCS Self discipline"=5), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata$variables_group))) #%>%
  #save_kable("tables/total_gm.png", zoom=8)
```

```{r coransubcortgm01, results="asis", message=FALSE, warning=FALSE}
cordata <- ancova_join %>%
  dplyr::select(hemi_region, is.signif.main) %>%
  left_join(compare.gm, by="hemi_region") %>%
  right_join(glmdata, by="hemi_region") %>%
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) %>%
  filter(point_of_research %in% "T1") %>%
  #filter(is.signif.main == TRUE) %>% # Alternative 1: correlations only for significant amygdala (sub)regions in main GLM!
  filter(is.signif.gm == "(+)") %>% # Alternative 2: correlations only for significant amygdala (sub)regions after GM adjustment!
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables chosen to fill missing values for clinical variables (that is why key != storage_name)
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, is.signif.gm, age_at_date_of_research, e_tiv, subcort_gray,
                measure, bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an,
                resultquest_bdi2_total, edi_core, resultquest_scl90r_skagloba,
                s.anxiety, t.anxiety, bas_rewardresponsiveness,
                resultquest_bscs_i, resultquest_bscs_s) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, is.signif.gm, age_at_date_of_research, e_tiv, 
                  subcort_gray, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, is.signif.gm, demo_variable)) %>%
    mutate(
    pcordata = map(data, ~ drop_na(.x)), # partial correlation function cannot deal with missing values, drop rows with missing values in any of the correlated variables
    pcor = map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x[, c("age_at_date_of_research", "e_tiv", 
                                                                              "subcort_gray")], 
                                     method="spearman"))) %>%
  unnest(pcor) %>% # adjustment for multiple comparisons for all tests!
  mutate(unadj.signif = as.character(asterisk_function(p.value))) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>% # False Discovery Rate, Benjamini-Hochberg correction
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller,is.signif.gm, demo_variable, estimate, p.value, unadj.signif, p.adj, adj.signif) %>%
  mutate(p.value = formatC(p.value, format="f", digits=3)) %>%
  nest(-c(hemi_region, labeller, is.signif.gm, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>% # proper formatting for the correlation table output
  unnest(bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an, resultquest_bdi2_total,
         edi_core, resultquest_scl90r_skagloba, s.anxiety, t.anxiety,
         bas_rewardresponsiveness, resultquest_bscs_i, resultquest_bscs_s)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

cordata %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  dplyr::select(-is.signif.gm) %>%
  knitr::kable(format = "html", digits=2, align = "l", col.names=c("Amygdala (sub)regions (GLM adj. subcortical GM, p.adj<0.05)", rep(c("rho", "p", "Unadj. signif.", "FDR(BH)-adj. p", "Adj. signif."), 11)), caption = "Nonparametric partial correlations in acAN-T1 between amygdala (sub)region volumes significantly different from HC (GLM adjusted for subcortical GM volume) and clinical variables or symptom scores (adjusted for participant age, eTIV and subcortical GM)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=5, "Amygdala ~ Leptin"=5, "Amygdala ~ Duration of illness"=5, "Amygdala ~ BDI-II total score"=5, "Amygdala ~ EDI-2 core"=5, "Amygdala ~ SCL-90-R GSI"=5, "Amygdala ~ STAI(K) State Anxiety Score"=5, "Amygdala ~ STAI(K) Trait Anxiety Score"=5, "Amygdala ~ BAS score reward responsiveness"=5, "Amygdala ~ BSCS Impulse control"=5, "Amygdala ~ BSCS Self discipline"=5), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata$variables_group))) #%>%
  #save_kable("tables/subcort_gm.png", zoom=8)
```

```{r coransubcortgm02, results="asis", message=FALSE, warning=FALSE}
cordata <- ancova_join %>%
  dplyr::select(hemi_region, is.signif.main) %>%
  left_join(compare.gm, by="hemi_region") %>%
  right_join(glmdata, by="hemi_region") %>%
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) %>%
  filter(point_of_research %in% "T1") %>%
  #filter(is.signif.main == TRUE) %>% # Alternative 1: correlations only for significant amygdala (sub)regions in main GLM!
  filter(is.signif.gm == "(+)") %>% # Alternative 2: correlations only for significant amygdala (sub)regions after GM adjustment!
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables chosen to fill missing values for clinical variables (that is why key != storage_name)
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, is.signif.gm, age_at_date_of_research, e_tiv, subcort_gray,
                measure, bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an,
                resultquest_bdi2_total, resultquest_edi2_total, resultquest_edi2_ss, resultquest_edi2_uk,
                resultquest_edi2_b, resultquest_scl90r_skagloba,
                s.anxiety, t.anxiety, bas_rewardresponsiveness,
                resultquest_bscs_i, resultquest_bscs_s, resultquest_scl90r_skasomat,
                resultquest_scl90r_skazwang, resultquest_scl90r_skaunsic, resultquest_scl90r_skadepre,
                resultquest_scl90r_skaangst, resultquest_scl90r_skaaggre, resultquest_scl90r_skaphobi,
                resultquest_scl90r_skaparan, resultquest_scl90r_skapsych) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, is.signif.gm, age_at_date_of_research, e_tiv, 
                  subcort_gray, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, is.signif.gm, demo_variable)) %>%
    mutate(
    pcordata = map(data, ~ drop_na(.x)), # partial correlation function cannot deal with missing values, drop rows with missing values in any of the correlated variables
    pcor = map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x[, c("age_at_date_of_research", "e_tiv", 
                                                                              "subcort_gray")], 
                                     method="spearman"))) %>%
  unnest(pcor) %>% # adjustment for multiple comparisons for all tests!
  mutate(unadj.signif = as.character(asterisk_function(p.value))) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>% # False Discovery Rate, Benjamini-Hochberg correction
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller,is.signif.gm, demo_variable, estimate, p.value, unadj.signif, p.adj, adj.signif) %>%
  mutate(p.value = formatC(p.value, format="f", digits=3)) %>%
  nest(-c(hemi_region, labeller, is.signif.gm, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>% # proper formatting for the correlation table output
  unnest(bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an, resultquest_bdi2_total,
         resultquest_edi2_total, resultquest_edi2_ss,
         resultquest_edi2_uk, resultquest_edi2_b, resultquest_scl90r_skagloba, s.anxiety, t.anxiety,
         bas_rewardresponsiveness, resultquest_bscs_i, resultquest_bscs_s, resultquest_scl90r_skasomat,
                resultquest_scl90r_skazwang, resultquest_scl90r_skaunsic, resultquest_scl90r_skadepre,
                resultquest_scl90r_skaangst, resultquest_scl90r_skaaggre, resultquest_scl90r_skaphobi,
                resultquest_scl90r_skaparan, resultquest_scl90r_skapsych)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

cordata %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  dplyr::select(-is.signif.gm) %>%
  knitr::kable(format = "html", digits=2, align = "l", col.names=c("Amygdala (sub)regions (GLM adj. subcortical GM, p.adj<0.05)", rep(c("rho", "p", "Unadj. signif.", "FDR(BH)-adj. p", "Adj. signif."), 23)), caption = "Nonparametric partial correlations in acAN-T1 between amygdala (sub)region volumes significantly different from HC (GLM adjusted for subcortical GM volume) and clinical variables or symptom scores (adjusted for participant age, eTIV and subcortical GM)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=5, "Amygdala ~ Leptin"=5, "Amygdala ~ Duration of illness"=5, "Amygdala ~ BDI-II total score"=5, "Amygdala ~ EDI-2 sum"=5, "Amygdala ~ EDI-2 dt"=5, "Amygdala ~ EDI-2 bd"=5, "Amygdala ~ EDI-2 b"=5, "Amygdala ~ SCL-90-R GSI"=5, "Amygdala ~ STAI(K) State Anxiety Score"=5, "Amygdala ~ STAI(K) Trait Anxiety Score"=5, "Amygdala ~ BAS score reward responsiveness"=5, "Amygdala ~ BSCS Impulse control"=5, "Amygdala ~ BSCS Self discipline"=5, "Amygdala ~ SCL-90-R Somatization"=5, "Amygdala ~ SCL-90-R OC"=5, "Amygdala ~ SCL-90-R insecurity"=5, "Amygdala ~ SCL-90-R depression"=5, "Amygdala ~ SCL-90-R anxiety"=5, "Amygdala ~ SCL-90-R aggression"=5, "Amygdala ~ SCL-90-R phobic anxiety"=5, "Amygdala ~ SCL-90-R paranoid ideation"=5, "Amygdala ~ SCL-90-R psychoticism"=5), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata$variables_group))) #%>%
  #save_kable("tables/subcort_gm.png", zoom=8)
```



```{r coranwholeamy01, results="asis", message=FALSE, warning=FALSE}
glmdata_wholeamy <- m.data_age %>%
  filter(region %in% "Whole_amygdala") %>%
  dplyr::select(storage_name, hemi, measure) %>%
  rename(whole_amygdala = measure) %>%
  right_join(glmdata, by=c("storage_name", "hemi"))

cordata <- ancova_join %>%
  dplyr::select(hemi_region, is.signif.main) %>%
  right_join(glmdata_wholeamy, by="hemi_region") %>%
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) %>%
  filter(point_of_research %in% "T1") %>%
  filter(is.signif.main == TRUE) %>% # Alternative 1: correlations only for significant amygdala (sub)regions in main GLM!
  filter(region != "Whole_amygdala") %>%
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables chosen to fill missing values for clinical variables (that is why key != storage_name)
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, whole_amygdala,
                measure, bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an,
                resultquest_bdi2_total, edi_core, resultquest_scl90r_skagloba, s.anxiety, t.anxiety,
                bas_rewardresponsiveness,
                resultquest_bscs_i, resultquest_bscs_s) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, 
                  whole_amygdala, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
    mutate(
    pcordata = map(data, ~ drop_na(.x)), # partial correlation function cannot deal with missing values, drop rows with missing values in any of the correlated variables
    pcor = map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x[, c("age_at_date_of_research", "e_tiv", 
                                                                              "whole_amygdala")], 
                                     method="spearman"))) %>%
  unnest(pcor) %>% # adjustment for multiple comparisons for all tests!
  mutate(unadj.signif = as.character(asterisk_function(p.value))) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>% # False Discovery Rate, Benjamini-Hochberg correction
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, estimate, p.value, unadj.signif, p.adj, adj.signif) %>%
  mutate(p.value = formatC(p.value, format="f", digits=3)) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>% # proper formatting for the correlation table output
  unnest(bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an, resultquest_bdi2_total, edi_core,
         resultquest_scl90r_skagloba,
         s.anxiety, t.anxiety, bas_rewardresponsiveness, resultquest_bscs_i, resultquest_bscs_s)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

cordata %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  knitr::kable(format = "html", digits=2, align = "l", col.names=c("Amygdala (sub)regions (main GLM p.adj<0.05)", rep(c("rho", "p", "Unadj. signif.", "FDR(BH)-adj. p", "Adj. signif."), 11)), caption = "Nonparametric partial correlations in acAN-T1 between amygdala (sub)region volumes significantly different from HC (GLM adjusted for whole amygdala volume) and clinical variables or symptom scores (adjusted for participant age, eTIV and whole amygdala volume)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=5, "Amygdala ~ Leptin"=5, "Amygdala ~ Duration of illness"=5, "Amygdala ~ BDI-II total score"=5, "Amygdala ~ EDI-2 core"=5, "Amygdala ~ SCL-90-R GSI"=5, "Amygdala ~ STAI(K) State Anxiety Score"=5, "Amygdala ~ STAI(K) Trait Anxiety Score"=5, "Amygdala ~ BAS score reward responsiveness"=5, "Amygdala ~ BSCS Impulse control"=5, "Amygdala ~ BSCS Self discipline"=5), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata$variables_group))) #%>%
  #save_kable("tables/coran_wholeamy.png", zoom=8)
```

```{r coranwholeamy02, results="asis", message=FALSE, warning=FALSE}
glmdata_wholeamy <- m.data_age %>%
  filter(region %in% "Whole_amygdala") %>%
  dplyr::select(storage_name, hemi, measure) %>%
  rename(whole_amygdala = measure) %>%
  right_join(glmdata, by=c("storage_name", "hemi"))

cordata <- ancova_join %>%
  dplyr::select(hemi_region, is.signif.main) %>%
  right_join(glmdata_wholeamy, by="hemi_region") %>%
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) %>%
  filter(point_of_research %in% "T1") %>%
  filter(is.signif.main == TRUE) %>% # Alternative 1: correlations only for significant amygdala (sub)regions in main GLM!
  filter(region != "Whole_amygdala") %>%
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables chosen to fill missing values for clinical variables (that is why key != storage_name)
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, whole_amygdala,
                measure, bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an,
                resultquest_bdi2_total, resultquest_edi2_total, resultquest_edi2_ss, resultquest_edi2_uk,
                resultquest_edi2_b, resultquest_scl90r_skagloba, s.anxiety, t.anxiety, bas_rewardresponsiveness,
                resultquest_bscs_i, resultquest_bscs_s, resultquest_scl90r_skasomat,
                resultquest_scl90r_skazwang, resultquest_scl90r_skaunsic, resultquest_scl90r_skadepre,
                resultquest_scl90r_skaangst, resultquest_scl90r_skaaggre, resultquest_scl90r_skaphobi,
                resultquest_scl90r_skaparan, resultquest_scl90r_skapsych) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, 
                  whole_amygdala, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
    mutate(
    pcordata = map(data, ~ drop_na(.x)), # partial correlation function cannot deal with missing values, drop rows with missing values in any of the correlated variables
    pcor = map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x[, c("age_at_date_of_research", "e_tiv", 
                                                                              "whole_amygdala")], 
                                     method="spearman"))) %>%
  unnest(pcor) %>% # adjustment for multiple comparisons for all tests!
  mutate(unadj.signif = as.character(asterisk_function(p.value))) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>% # False Discovery Rate, Benjamini-Hochberg correction
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, estimate, p.value, unadj.signif, p.adj, adj.signif) %>%
  mutate(p.value = formatC(p.value, format="f", digits=3)) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>% # proper formatting for the correlation table output
  unnest(bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an, resultquest_bdi2_total,
         resultquest_edi2_total, 
         resultquest_edi2_ss, resultquest_edi2_uk, resultquest_edi2_b, resultquest_scl90r_skagloba,
         s.anxiety, t.anxiety, bas_rewardresponsiveness, resultquest_bscs_i, resultquest_bscs_s, resultquest_scl90r_skasomat,
                resultquest_scl90r_skazwang, resultquest_scl90r_skaunsic, resultquest_scl90r_skadepre,
                resultquest_scl90r_skaangst, resultquest_scl90r_skaaggre, resultquest_scl90r_skaphobi,
                resultquest_scl90r_skaparan, resultquest_scl90r_skapsych)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

cordata %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  knitr::kable(format = "html", digits=2, align = "l", col.names=c("Amygdala (sub)regions (main GLM p.adj<0.05)", rep(c("rho", "p", "Unadj. signif.", "FDR(BH)-adj. p", "Adj. signif."), 23)), caption = "Nonparametric partial correlations in acAN-T1 between amygdala (sub)region volumes significantly different from HC (GLM adjusted for whole amygdala volume) and clinical variables or symptom scores (adjusted for participant age, eTIV and whole amygdala volume)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=5, "Amygdala ~ Leptin"=5, "Amygdala ~ Duration of illness"=5, "Amygdala ~ BDI-II total score"=5, "Amygdala ~ EDI-2 sum"=5, "Amygdala ~ EDI-2 dt"=5, "Amygdala ~ EDI-2 bd"=5, "Amygdala ~ EDI-2 b"=5, "Amygdala ~ SCL-90-R GSI"=5, "Amygdala ~ STAI(K) State Anxiety Score"=5, "Amygdala ~ STAI(K) Trait Anxiety Score"=5, "Amygdala ~ BAS score reward responsiveness"=5, "Amygdala ~ BSCS Impulse control"=5, "Amygdala ~ BSCS Self discipline"=5, "Amygdala ~ SCL-90-R Somatization"=5, "Amygdala ~ SCL-90-R OC"=5, "Amygdala ~ SCL-90-R insecurity"=5, "Amygdala ~ SCL-90-R depression"=5, "Amygdala ~ SCL-90-R anxiety"=5, "Amygdala ~ SCL-90-R aggression"=5, "Amygdala ~ SCL-90-R phobic anxiety"=5, "Amygdala ~ SCL-90-R paranoid ideation"=5, "Amygdala ~ SCL-90-R psychoticism"=5), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata$variables_group))) #%>%
  #save_kable("tables/coran_wholeamy.png", zoom=8)
```


```{r coranetiv01, results="asis", message=FALSE, warning=FALSE}
cordata <- glmdata %>%
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) %>%
  filter(point_of_research %in% "T1") %>%
  filter(region %in% "Whole_amygdala") %>%
  left_join(stai, by=c("participant_id", "point_of_research")) %>%
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv,
                measure, bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an,
                resultquest_bdi2_total, edi_core, resultquest_scl90r_skagloba, s.anxiety, t.anxiety,
                bas_rewardresponsiveness, resultquest_bscs_i, resultquest_bscs_s) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
    mutate(
    pcordata = map(data, ~ drop_na(.x)), # partial correlation function cannot deal with missing values, drop rows with missing values in any of the correlated variables
    pcor = map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x[, c("age_at_date_of_research", "e_tiv")], 
                                     method="spearman"))) %>%
  unnest(pcor) %>% # adjustment for multiple comparisons for all tests!
  mutate(unadj.signif = as.character(asterisk_function(p.value))) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>% # False Discovery Rate, Benjamini-Hochberg correction
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, estimate, p.value, unadj.signif, p.adj, adj.signif) %>%
  mutate(p.value = formatC(p.value, format="f", digits=3)) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>% # proper formatting for the correlation table output
  unnest(bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an,
         resultquest_bdi2_total, edi_core, resultquest_scl90r_skagloba, s.anxiety, t.anxiety,
         bas_rewardresponsiveness, resultquest_bscs_i, resultquest_bscs_s) %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

cordata %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  knitr::kable(format = "html", digits=2, align = "l", col.names=c("Whole amygdala (main GLM p.adj<0.05)", rep(c("rho", "p", "Unadj. signif.", "FDR(BH)-adj. p", "Adj. signif."), 11)), caption = "Nonparametric partial correlations in acAN-T1 between whole amygdala volumes significantly different from HC (GLM adjusted for eTIV) and clinical variables or symptom scores (adjusted for participant age and eTIV") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=5, "Amygdala ~ Leptin"=5, "Amygdala ~ Duration of illness"=5, "Amygdala ~ BDI-II total score"=5, "Amygdala ~ EDI-2 core"=5, "Amygdala ~ SCL-90-R GSI"=5, "Amygdala ~ STAI(K) State Anxiety Score"=5, "Amygdala ~ STAI(K) Trait Anxiety Score"=5, "Amygdala ~ BAS score reward responsiveness"=5, "Amygdala ~ BSCS Impulse control"=5, "Amygdala ~ BSCS Self discipline"=5), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata$variables_group))) #%>%
  #save_kable("tables/coran_wholeamy02.png", zoom=8)
```

```{r coranetiv02, results="asis", message=FALSE, warning=FALSE}
cordata <- glmdata %>%
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) %>%
  filter(point_of_research %in% "T1") %>%
  filter(region %in% "Whole_amygdala") %>%
  left_join(stai, by=c("participant_id", "point_of_research")) %>%
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv,
                measure, bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an,
                resultquest_bdi2_total, resultquest_bdi2_total, resultquest_edi2_total, resultquest_edi2_ss,
                resultquest_edi2_uk, resultquest_edi2_b, resultquest_scl90r_skagloba, s.anxiety, t.anxiety,
                bas_rewardresponsiveness, resultquest_bscs_i, resultquest_bscs_s,
                resultquest_scl90r_skasomat,
                resultquest_scl90r_skazwang, resultquest_scl90r_skaunsic, resultquest_scl90r_skadepre,
                resultquest_scl90r_skaangst, resultquest_scl90r_skaaggre, resultquest_scl90r_skaphobi,
                resultquest_scl90r_skaparan, resultquest_scl90r_skapsych) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
    mutate(
    pcordata = map(data, ~ drop_na(.x)), # partial correlation function cannot deal with missing values, drop rows with missing values in any of the correlated variables
    pcor = map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x[, c("age_at_date_of_research", "e_tiv")], 
                                     method="spearman"))) %>%
  unnest(pcor) %>% # adjustment for multiple comparisons for all tests!
  mutate(unadj.signif = as.character(asterisk_function(p.value))) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>% # False Discovery Rate, Benjamini-Hochberg correction
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, estimate, p.value, unadj.signif, p.adj, adj.signif) %>%
  mutate(p.value = formatC(p.value, format="f", digits=3)) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>% # proper formatting for the correlation table output
  unnest(bmisds_at_date_of_research, research_blood_results_leptin, onset_of_an, resultquest_bdi2_total,
         resultquest_bdi2_total, resultquest_edi2_total,
         resultquest_edi2_ss, resultquest_edi2_uk, resultquest_edi2_b, resultquest_scl90r_skagloba, s.anxiety, t.anxiety,
         bas_rewardresponsiveness, resultquest_bscs_i, resultquest_bscs_s, resultquest_scl90r_skasomat,
                resultquest_scl90r_skazwang, resultquest_scl90r_skaunsic, resultquest_scl90r_skadepre,
                resultquest_scl90r_skaangst, resultquest_scl90r_skaaggre, resultquest_scl90r_skaphobi,
                resultquest_scl90r_skaparan, resultquest_scl90r_skapsych) %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

cordata %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  knitr::kable(format = "html", digits=2, align = "l", col.names=c("Whole amygdala (main GLM p.adj<0.05)", rep(c("rho", "p", "Unadj. signif.", "FDR(BH)-adj. p", "Adj. signif."), 23)), caption = "Nonparametric partial correlations in acAN-T1 between whole amygdala volumes significantly different from HC (GLM adjusted for eTIV) and clinical variables or symptom scores (adjusted for participant age and eTIV") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=5, "Amygdala ~ Leptin"=5, "Amygdala ~ Duration of illness"=5, "Amygdala ~ BDI-II total score"=5, "Amygdala ~ EDI-2 sum"=5, "Amygdala ~ EDI-2 dt"=5, "Amygdala ~ EDI-2 bd"=5, "Amygdala ~ EDI-2 b"=5, "Amygdala ~ SCL-90-R GSI"=5, "Amygdala ~ STAI(K) State Anxiety Score"=5, "Amygdala ~ STAI(K) Trait Anxiety Score"=5, "Amygdala ~ BAS score reward responsiveness"=5, "Amygdala ~ BSCS Impulse control"=5, "Amygdala ~ BSCS Self discipline"=5, "Amygdala ~ SCL-90-R Somatization"=5, "Amygdala ~ SCL-90-R OC"=5, "Amygdala ~ SCL-90-R insecurity"=5, "Amygdala ~ SCL-90-R depression"=5, "Amygdala ~ SCL-90-R anxiety"=5, "Amygdala ~ SCL-90-R aggression"=5, "Amygdala ~ SCL-90-R phobic anxiety"=5, "Amygdala ~ SCL-90-R paranoid ideation"=5, "Amygdala ~ SCL-90-R psychoticism"=5), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata$variables_group))) #%>%
  #save_kable("tables/coran_wholeamy02.png", zoom=8)
```


## Further exploratory correlations (rho, partial) between amygdala volumes and other clinical variables in acAN-T1  
**Self-control scores** (code chunk is not run)  

```{r coran02, eval = FALSE, results="asis", message=FALSE, warning=FALSE}
expl.cordata <- ancova_join %>%
  dplyr::select(hemi_region, is.signif.main) %>%
  left_join(compare.gm, by="hemi_region") %>%
  right_join(glmdata, by="hemi_region") %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables chosen to fill missing values for clinical variables (that is why key != storage_name)
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(bscs, by=c("participant_id", "point_of_research")) %>% # self-control scores (own R computation, not used!)
  left_join(dgi, by=c("participant_id", "point_of_research")) %>% # delay gratification scores
  mutate(hemi_region = factor(hemi_region, levels=c("lh_Whole_amygdala", "rh_Whole_amygdala", "lh_Accessory_basal_nucleus", "rh_Accessory_basal_nucleus", "lh_Anterior_amygdaloid_area", "rh_Anterior_amygdaloid_area", "lh_Basal_nucleus", "rh_Basal_nucleus", "lh_Central_nucleus", "rh_Central_nucleus", "lh_Cortical_nucleus", "rh_Cortical_nucleus", "lh_Corticoamygdaloid_transitio", "rh_Corticoamygdaloid_transitio", "lh_Lateral_nucleus", "rh_Lateral_nucleus", "lh_Medial_nucleus", "rh_Medial_nucleus", "lh_Paralaminar_nucleus", "rh_Paralaminar_nucleus"))) %>%
  filter(point_of_research %in% "T1") %>%
  filter(is.signif.main == TRUE) %>% # only for significant amygdala nuclei in main GLM!
  #filter(is.signif.gm == "(+)") %>% # only for significant amygdala nuclei after gray matter adjustment!
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure,
                bmi_at_date_of_research, minbmi, resultquest_scl90r_skagloba, resultquest_edi2_total,
                resultquest_bscs_t, resultquest_bscs_i, resultquest_bscs_s) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
    mutate(
    pcordata = map(data, ~ drop_na(.x)), # partial correlation function cannot deal with missing values, drop rows with missing values in any of the correlated variables
    pcor = map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x[, c("age_at_date_of_research", "e_tiv")], 
                                     method="spearman"))) %>%
  unnest(pcor) %>% # adjustment for multiple comparisons for all tests!
  mutate(unadj.signif = as.character(asterisk_function(p.value))) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>% # False Discovery Rate, Benjamini-Hochberg correction
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, estimate, p.value, unadj.signif, p.adj, adj.signif) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>% # proper formatting for the correlation table output
  unnest(bmi_at_date_of_research, minbmi, resultquest_scl90r_skagloba, resultquest_edi2_total, resultquest_bscs_t,
         resultquest_bscs_i, resultquest_bscs_s)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

expl.cordata %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%  
  knitr::kable(format = "html", digits=2, align = "l", col.names=c("Amygdala (sub)regions (main GLM p.adj<0.05)", rep(c("rho", "p", "Unadj. signif.", "FDR(BH)-adj. p", "Adj. signif."), 7)), caption = "Nonparametric partial correlations in acAN-T1 between amygdala (sub)region volumes significantly different from HC and clinical variables or symptom scores (adjusted for participant age and eTIV)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI"=5, "Amygdala ~ Minimum lifetime BMI"=5, "Amygdala ~ SCL-90-R GSI"=5, "Amygdala ~ EDI-2 sum"=5, "Amygdala ~ BSCS total"=5, "Amygdala ~ BSCS impulse control (Morean et al., 2014)"=5, "Amygdala ~ BSCS self discipline (Morean et al., 2014)"=5), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata$variables_group)))
```


## Supplementary correlations in acAN-T1 (and HC)  
See Appendix Table \@ref(tab:corsz) for zero-order Spearman's correlations without covariates.  
See Appendix Tables \@ref(tab:corpz) and \@ref(tab:corpp) for zero-order and partial Pearson's product-moment correlations.
*Just to compare: Nonparametric partial correlations in HC participants (see Appendix Table \@ref(tab:corhc)).*  


# Results: Conclusions regarding the explorative analyses  
* As expected, acAN-T1 patients presented with lower BMI, BMI-SDS and minimal lifetime BMI, but with higher psychopathological symptom scores (except for lower BAS reward responsiveness) than age-matched HC participants (t-tests).  
* As anticipated following age-matching, age did not differ between study groups. Likewise, no group differences could be detected for either IQ or head size (eTIV) between acAN-T1 and HC (t-tests). In contrast, t-tests yielded lower total gray matter as well as subcortical gray matter (GM) volume in AN patients compared to their healthy counterparts.  
* The applied General Linear Model (GLM, adjusted for head size) revealed that the whole amygdala volume of both brain hemispheres was significantly reduced in acAN-T1 patients compared to age-matched HC.  
* Regarding amygdala subregions, tested with a GLM additionally adjusted for whole amygdala volume in order to assess within-amygdala effects of AN relatively to whole amygdala alterations, we found significant volume differences across study groups for the majority of amygdala nuclei. These nuclei seem to be more (relatively smaller - which ones? => EMMs) or less (relatively larger - which ones? => EMMs) seriously affected by acute AN in comparison to global AN effects on the whole amygdala. The only exceptions without significant findings were: Anterior amygdaloid area lh, basal nucleus lh, central nucleus in both hemispheres and medial nucleus rh.  
* When supplementarily controlling for total or subcortical GM volume besides head size, we were not able to reproduce our main model's findings for the whole amygdala as well as some nuclei, indicating that the impact of acute AN on these substructures is not more severe or pronounced in relation to the impact of AN on the (total/subcortical) gray matter volume in general. Consequently, regarding the severity of structural brain changes in AN, the reductions in certain amygdala (sub)volumes can be considered as one component within the framework of the AN-related global cortical and subcortical GM atrophy. However, the accessory basal nuclei, cortical nuclei and corticoamygdaloid transitions of both brain hemispheres still differed between cross-sectional groups after GM-adjustment (AN patients had smaller adjusted/estimated marginal means than HC), suggesting that these specific nuclei are affected worse by AN than the GM volume and, thus, indicating a rather specific than only general effect of AN on a selection of amygdala nuclei. Interpretation? Physiology/functions of these nuclei?  
* Given sound scientific evidence for confounding roles of clinical variables such as psychiatric comorbidity (in particular MDD, AD, OCD, PTSD) and SSRI as well as of demographic characteristics (IQ, hand preference, smoking) on amygdala volumes, our supplementary GLM 2 accounted for the above-mentioned factors by exclusions of AN patients with psychiatric diagnoses or psychoactive drugs, and by covarying for IQ, handedness and smoking status. Most main model's findings could be reproduced applying this supplementary GLM approach (exceptions: lateral nucleus lh and medial nucleus rh no longer significantly different in acAN-T1 vs. age-matched HC).  
* As follow-up analysis to observed group differences in the assessed amygdala volumes, partial rank-order correlations (Spearman's rho) were performed between individual amygdala (sub)region measures (only significant regions according to main GLM) and selected clinical as well as symptom variables within the acAN-T1 study group (covariates: age, eTIV in line with our main GLM): After FDR-adjustment for multiple pairwise comparisons, significant positive correlations with current BMI and minimal lifetime BMI emerged for the left whole amygdala as well as for several amygdala nuclei (e.g. lateral and paralaminar nuclei lh). These correlations were of low-moderate effect/strength.  
* Further, uniformly negative correlations between bilateral whole amygdala volumes and duration of the current AN episode (DOI) occurred (smaller volumes ~ longer AN duration), but did not survive FDR-correction (the latter condition also applied to rh corticoamygdaloid transition, lh and rh lateral and paralaminar nuclei).  
* Regarding symptom scores in acAN-T1 (comprising depressive, anxiety, eating disorder, global psychiatric and reward behavior symptoms), we found primarily significant associations (positive direction) between some amygdala volumes (left whole amygdala, lh accessory basal nucleus, lh lateral nucleus) and reward responsiveness (BAS score), but they turned out non-significant after FDR-adjustment.  
* In HC participants, we did not observe any significant relationships between whole amygdala or amygdala nuclei volumes and any of the assessed demographic, clinical or symptom parameters after adjustment for multiple testing.  



# Appendix  

## Scatter plots for CNR and SNR (hippocampal and thalamic (sub)regions)  

```{r figurequality03, fig.cap="Hippocampal subfields (+ whole hippocampus): Scatter plots of substructure measures plotted by CNR (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
data_symmetry_hemi %>% filter(analysis %in% "hippocampus") %>%
  ggplot(aes(x=cnr_total, y=lh_rh_sum, group=point_of_research, color=point_of_research)) +
  geom_point(aes(x=cnr_total, y=lh_rh_sum, group=point_of_research, color=point_of_research), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + 
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) + 
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3 (sum lh + rh)") + 
  xlab("CNR") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_hippocampus_cnr.png", width=20, height=20)
```

```{r figurequality04, fig.cap="Hippocampal subfields (+ whole hippocampus): Scatter plots of substructure measures plotted by SNR (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
data_symmetry_hemi %>% filter(analysis %in% "hippocampus") %>%
  ggplot(aes(x=snr, y=lh_rh_sum, group=point_of_research, color=point_of_research)) +
  geom_point(aes(x=snr, y=lh_rh_sum, group=point_of_research, color=point_of_research), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + 
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) + 
  scale_color_jama() + scale_fill_jama() +
  ylab("(Sub)region volumes in mm^3 (sum lh + rh)") + 
  xlab("SNR") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_hippocampus_snr.png", width=20, height=20)
```

```{r figurequality05, fig.cap="Thalamic nuclei (+ whole thalamus): Scatter plots of substructure measures plotted by CNR (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
data_symmetry_hemi %>% filter(analysis %in% "thalamus") %>%
  ggplot(aes(x=cnr_total,  y=lh_rh_sum, group=point_of_research, color=point_of_research)) +
  geom_point(aes(x=cnr_total, y=lh_rh_sum, group=point_of_research, color=point_of_research), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + 
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) + 
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3 (sum lh + rh)") + 
  xlab("CNR") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_thalamus_cnr.png", width=20, height=20)
```

```{r figurequality06, fig.cap="Thalamic nuclei (+ whole thalamus): Scatter plots of substructure measures plotted by SNR (duplicate cases not removed)", echo=TRUE, message=FALSE, warning=FALSE}
data_symmetry_hemi %>% filter(analysis %in% "thalamus") %>%
  ggplot(aes(x=snr, y=lh_rh_sum, group=point_of_research, color=point_of_research)) +
  geom_point(aes(x=snr, y=lh_rh_sum, group=point_of_research, color=point_of_research), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + 
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) + 
  scale_color_jama() + scale_fill_jama() +
  ylab("(Sub)region volumes in mm^3 (sum lh + rh)") + 
  xlab("SNR") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_thalamus_snr.png", width=20, height=20)
```

*[Link](#scatterquality) back to main document.*  


## Q-Q plots  

```{r figureqq01, fig.cap="Amygdala nuclei (+ whole amygdala): QQ plots of substructure measures for acAN-T1 and HC participants", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(sample=measure, group=point_of_research, color=point_of_research)) +
  stat_qq(geom="point", size=1.25, shape=16, alpha=1, position="identity") +
  stat_qq_line(size=1.25) +
  scale_color_jama() +
  ylab("(Sub)region volume quantiles") + 
  xlab("Theoretical quantiles") + 
  plot_theme_transparent +
  facet_wrap(~ region , scales="free")
#ggsave(path="figures", filename="qq_amygdala.png", width=20, height=20)
```

```{r figureqq02, fig.cap="Hippocampal subfields (+ whole hippocampus): QQ plots of substructure measures for acAN-T1 and HC participants", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "hippocampus") %>%
  ggplot(aes(sample=measure, group=point_of_research, color=point_of_research)) +
  stat_qq(geom="point", size=1.25, shape=16, alpha=1, position="identity") +
  stat_qq_line(size=1.25) +
  scale_color_jama() +
  ylab("(Sub)region volume quantiles") + 
  xlab("Theoretical quantiles") + 
  plot_theme_transparent +
  facet_wrap(~ region , scales="free")
#ggsave(path="figures", filename="qq_hippocampus.png", width=20, height=20)
```

```{r figureqq03, fig.cap="Thalamic nuclei (+ whole thalamus): QQ plots of substructure measures for acAN-T1 and HC participants", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "thalamus") %>%
  ggplot(aes(sample=measure, group=point_of_research, color=point_of_research)) +
  stat_qq(geom="point", size=1.25, shape=16, alpha=1, position="identity") +
  stat_qq_line(size=1.25) +
  scale_color_jama() +
  ylab("(Sub)region volume quantiles") + 
  xlab("Theoretical quantiles") + 
  plot_theme_transparent +
  facet_wrap(~ region , scales="free")
#ggsave(path="figures", filename="qq_thalamus.png", width=20, height=20)
```

*[Link](#qqplots) back to main document.*  


## Additional scatter plots for brain segmentation volumes  

Example: amygdala (sub)regions

```{r figureseg01, fig.cap="Amygdala nuclei (+ whole amygdala): Scatter plots of substructure measures plotted by participant total brain (segmentation) volume without ventricles, including linear regression lines (with 95% confidence interval, R^2 and p-value)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=brain_seg_not_vent, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=brain_seg_not_vent, y=measure, group=point_of_research, color=point_of_research, shape=hemi), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3") + 
  scale_x_continuous(name="Total brain segmentation volume (without ventricles) in mm^3", labels=scales::scientific_format()) +
  plot_theme_transparent + theme(axis.text=element_text(size=8)) +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_amygdala_brainseg.png", width=20, height=20)
```

```{r figuresupra01, fig.cap="Amygdala nuclei (+ whole amygdala): Scatter plots of substructure measures plotted by participant total supratentorial brain volume without ventricles, including linear regression lines (with 95% confidence interval, R^2 and p-value)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=supra_tentorial_not_vent, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=supra_tentorial_not_vent, y=measure, group=point_of_research, color=point_of_research, shape=hemi), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3") + 
  scale_x_continuous(name="Total supratentorial brain volume in mm^3", labels=scales::scientific_format()) +
  plot_theme_transparent + theme(axis.text=element_text(size=8)) +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_amygdala_supratentorial.png", width=20, height=20)
```

```{r figuregray01, fig.cap="Amygdala nuclei (+ whole amygdala): Scatter plots of substructure measures plotted by participant total gray matter volume, including linear regression lines (with 95% confidence interval, R^2 and p-value)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=total_gray, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=total_gray, y=measure, group=point_of_research, color=point_of_research, shape=hemi), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3") +
  scale_x_continuous(name="Total GM volume in mm^3", labels=scales::scientific_format()) +
  plot_theme_transparent + theme(axis.text=element_text(size=8)) +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_amygdala_gm.png", width=20, height=20)
```

```{r figuresubgray01, fig.cap="Amygdala nuclei (+ whole amygdala): Scatter plots of substructure measures plotted by participant subcortical gray matter volume, including linear regression lines (with 95% confidence interval, R^2 and p-value)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=subcort_gray, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=subcort_gray, y=measure, group=point_of_research, color=point_of_research, shape=hemi), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3") +
  scale_x_continuous(name="Subcortical GM volume in mm^3", labels=scales::scientific_format()) +
  plot_theme_transparent + theme(axis.text=element_text(size=8)) +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_amygdala_subcortgm.png", width=20, height=20)
```

**Conclusion**: Predominantly positive and strong associations of substructure volume measures of the amygdala with total brain segmentation volume, total supratentorial brain volume, total and subcortical gray matter volume can be observed across all analyses (cf. this was also observed for eTIV). The above plotted brain segmentation measures might function as covariates in sub-/follow-up analyses.  

*[Link](#conclusion_etiv) back to main document.*  


## Demographic and clinical variables: Assumption testing  

```{r ttests02, results="asis", message=FALSE, warning=FALSE}
# Levene's test of variance homogeneity
variance <- t.testdata %>%
  mutate(
    vartest = map(data, ~ var.test(value ~ point_of_research, data = .x, na.action=na.omit)),
    tidied = map(vartest, tidy)) %>%
  unnest(tidied) %>%
  mutate(p.value = formatC(p.value, format="f")) %>%
  mutate(p.value = as.numeric(p.value)) %>%
  mutate(significance = as.character(asterisk_function(p.value))) %>%
  dplyr::select(variable, method, statistic, p.value, significance)

variance %>%
  mutate(variables.labelled = labeller.function(variable)) %>%
  dplyr::select(variables.labelled, everything()) %>%
  dplyr::select(-variable) %>%
  knitr::kable(format = "html", digits=4, col.names = c("Demographic or clinical variable", "Levene's test", "F statistic", "p-value (raw/unadjusted)", "Unadjusted significance"), align = "l", caption = "Demographic and clinical variables: Test assumption of homogeneity of variances") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial",
              font_size="10") %>%
  add_header_above(c("Levene's test of homogeneity of variances turns out partly significant and partly nonsignificant (that is acceptable, since Levene's test tends to be oversensitive with large sample sizes). Thus, t-tests for unequal variances will be performed throughout (also possible for e.g. age despite equal variances)."=5), align="l")
```

*[Link](#ttests) back to main document.*  


## Relative amygdala nuclei volumes in relation to individual whole amygdala volumes (hemispheres separately) in acAN-T1 vs. HC {#measurequotients}  

```{r smdescriptivesamygdala01, results="asis", message=FALSE, warning=FALSE}
sm.descramygdala <- whole.amy.data %>%
  mutate(measure_percentage = 100*(measure/whole_amygdala)) %>%
  group_by(point_of_research, hemi_region, labeller) %>%
  get_summary_stats(measure_percentage) %>%
  dplyr::select(hemi_region, labeller, point_of_research, n, mean, sd)

sm.descramygdala_T1 <- sm.descramygdala %>% filter(point_of_research %in% "T1") %>%
  dplyr::select(-point_of_research)

sm.descramygdala_HC <- sm.descramygdala %>% filter(point_of_research %in% "HCW") %>%
  dplyr::select(-point_of_research)

sm.descramygdala_join <- full_join(sm.descramygdala_T1, sm.descramygdala_HC, by=c("hemi_region", "labeller")) %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group"))

sm.descramygdala_join %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  knitr::kable(format = "html", digits=2, col.names = c("Relative amygdala nuclei volumes in %", rep(c("n", "Mean", "SD"), 2)), align = "l", caption = "Descriptive statistics of relative amygdala nuclei volumes (in relation to left or right whole amygdala volume) in acAN-T1 vs. HC participants") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial",
              font_size="10") %>%
  add_header_above(c("", "acAN-T1 participants"=3, "HC participants"=3)) %>%
  pack_rows(index = table(fct_inorder(sm.descramygdala_join$variables_group)))
```
*[Link](#mainglm) back to main document.*  


## Supplementary GLM 2 {#smglmclin}  
**... predicting group differences in amygdala (sub)region volumes, adjusted for further clinically relevant, possibly confounding, variables**  

**Background/Motivation:**  
Further confounding variables for both study groups:  

1. IQ: other psychiatric studies found significant associations between IQ and amygdala volume, and introduced IQ as a control variable in their analyses (Vieira et al., 2015).  
2. Smoking (only accepted drug consumption in our study) (Durazzo et al., 2017).  
3. Handedness (Annett Scale of Hand Preference) (several neuroimaging studies have reported an impact of handedness on brain structures or volumes).  

Further confounding factors in the acAN-T1 group:  

1. Psychiatric comorbidity: depression/MDD, anxiety disorder, OCD and PTSD diagnoses are especially relevant regarding their possible influence on amygdala volumes (Ota et al., 2017; Ahmed-Letaio et al., 2019).  
2. Psychoactive medication (especially SSRIs were shown to be associated with amygdala and hippocampal volumes (Boldrini et al., 2012; Szeszko et al., 2004)).  

In this SM model, AN patients with diagnosed psychiatric comorbidities (other than AN) and psychoactive medication were excluded, a new age-matching was performed and SM GLM 2 was computed with the resulting (smaller) sample. Since comorbidity and medication occur in acAN-T1 exclusively, introducing them as covariates in the GLM would cause multicollinearity between predictors (both variables are related to point_of_research ...).  

### Eploration of confounding variables  
#### IQ (continuous variable)  
```{r figureiq01, fig.cap="Amygdala nuclei (+ whole amygdala): Scatter plots of substructure measures plotted by participant IQ score, including linear regression lines (with 95% confidence interval, R^2 and p-value)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% 
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  filter(analysis %in% "amygdala") %>%
  mutate(point_of_research = factor(point_of_research, levels = c("T1", "HCW"))) %>%
  drop_na(iq) %>% 
  ggplot(aes(x=iq, y=measure, group=point_of_research, color=point_of_research, shape=hemi)) +
  geom_point(aes(x=iq, y=measure, group=point_of_research, color=point_of_research, shape=hemi), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm) +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) +
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3") + 
  xlab("IQ") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scatterplots_amygdala_iq.png", width=20, height=20)
```

#### Handedness (categorical variable)  
```{r covariates, include=TRUE, results="hide", message=FALSE, warning=FALSE}
# Generate a data.frame with further covariates, note: R creates dummy variables automatically
covdata <- m.data_age %>%
  left_join(redcap_clinical, by=c("participant_id", "point_of_research")) %>% 
  mutate(hand_preference = na_if(hand_preference_cat, -99)) %>%
  mutate(hand_preference = factor(hand_preference_cat, levels=c(0,1,2), labels=c("right", "both", "left"))) %>% # if variables are converted to factors, R does automatic dummy coding!
  mutate(smoking = na_if(current_smoking, "weiss nicht / verweigert")) %>%
  mutate(smoking = ifelse(str_detect(current_smoking, "nein"), 0, 1)) %>% # "ja" and "gelegentlich" summarized to "smoker" (not distinguished)
  mutate(smoking = factor(smoking, levels=c(0,1), labels=c("nonsmoker", "smoker"))) %>%
  mutate(psych_comorbidity = na_if(psychiatric_disorders, NA)) %>%
  mutate(psych_comorbidity = ifelse((depressive_disorders %in% "ja") | # diagnoses summarized to 1 dichotomous variable
                                      (anxiety_disorders %in% "ja") | 
                                      (obsessivecompulsive_disorders %in% "ja") | 
                                      (ptsd %in% "ja"), 
                                    1, 0)) %>%
  mutate(psych_comorbidity = factor(psych_comorbidity, levels=c(0,1), labels=c("nocomorbidity", "comorbidity"))) %>%
  mutate(antidepressants = na_if(current_medication, NA)) %>%
  mutate(antidepressants = ifelse((type_of_current_medication___1 %in% "Checked") | 
                                    (type_of_recent_medication___1 %in% "Checked"), 
                                  1, 0)) %>%
  mutate(antidepressants = factor(antidepressants, levels=c(0,1), labels=c("nossri", "ssri")))

# Check missing values medication
m.data_age %>% 
  left_join(redcap_clinical, by=c("participant_id", "point_of_research")) %>% 
  distinct(storage_name, .keep_all=TRUE) %>%
  summarize_at(vars(current_medication, recent_medication), 
            funs(sum(is.na(.))))
```

```{r tablehand01, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
covdata %>% 
  distinct(storage_name, .keep_all=TRUE) %>%
  group_by(point_of_research, hand_preference) %>%
  summarize(n = n()) %>%
  ungroup() %>% group_by(point_of_research) %>%
  mutate(n_existing = sum(n)) %>%
  knitr::kable(format = "html", col.names = c("Study groups", "Hand preference", "n(subjects)", "Existing data per study group"), align = "l", caption = "Handedness") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

```{r figurehand01, fig.cap="Amygdala nuclei (+ whole amygdala): Boxplots for substructure measures of all participants (acAN-T1 + HC) plotted by hand preference (Kruskal-Wallis ANOVA and p-value included), grouped by brain hemispheres and (sub)regions (raw/unadjusted p-values)", echo=TRUE, message=FALSE, warning=FALSE}
p <- covdata %>% drop_na(hand_preference) %>% 
  filter(analysis %in% "amygdala") %>%
  ggpubr::ggboxplot(x = "hand_preference", y = "measure", bxp.errorbar=TRUE, bxp.errorbar.width=0.3, outlier.shape=8, size=1, width=0.5) +
  stat_compare_means(method="kruskal.test", label.x.npc=0.5, label.y.npc=0.9) + 
  scale_color_jama() + scale_fill_jama() +
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Hand preference") + 
  plot_theme_transparent
facet(p, facet.by=c("region", "hemi"), scales="free_y")
#ggsave(path="figures", filename="boxplots_hand_amygdala.png", width=20, height=20)
```

```{r figurehand02, fig.cap="Amygdala nuclei (+ whole amygdala) and separate study groups: Boxplots for substructure measures of acAN-T1 and HC participants (separately) plotted by hand preference (Kruskal-Wallis ANOVA and p-value included), grouped by (sub)regions (raw/unadjusted p-values)", echo=TRUE, message=FALSE, warning=FALSE}
p <- covdata %>% drop_na(hand_preference) %>% 
  filter(analysis %in% "amygdala") %>%
  ggpubr::ggboxplot(x = "hand_preference", y = "measure", bxp.errorbar=TRUE, bxp.errorbar.width=0.3, outlier.shape=8, size=1, width=0.5) +
  stat_compare_means(method="kruskal.test", label.x.npc=0.5, label.y.npc=0.9) + 
  scale_color_jama() + scale_fill_jama() +
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Hand preference") + 
  plot_theme_transparent
facet(p, facet.by=c("region", "point_of_research"), scales="free_y")
#ggsave(path="figures", filename="boxplots_hand_amygdala02.png", width=20, height=20)
```

#### Drug consumption: Current smoking (categorical variable)  
```{r tablesmoking01, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
covdata %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  group_by(point_of_research, smoking) %>%
  summarize(n = n()) %>%
  knitr::kable(format = "html", col.names = c("Study groups", "Current smoking", "n(subjects)"), align = "l", caption = "Smoking") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

```{r figuresmoking01, fig.cap="Amygdala nuclei (+ whole amygdala): Boxplots for substructure measures of all participants (acAN-T1 + HC) plotted by current smoking (independent-samples Wilcoxon/Mann-Whitney-U test and p-value included), grouped by (sub)regions (raw/unadjusted p-values)", echo=TRUE, message=FALSE, warning=FALSE}
p <- covdata %>% drop_na(smoking) %>% 
  filter(analysis %in% "amygdala") %>%
  ggboxplot(x = "smoking", y = "measure", bxp.errorbar=TRUE, bxp.errorbar.width=0.3, outlier.shape=8, size=1, width=0.3) +
  stat_compare_means(method="wilcox.test", paired=FALSE, label.x.npc=0.3, label.y.npc=0.9) + 
  scale_color_jama() + scale_fill_jama() +
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Smoking") + 
  plot_theme_transparent
facet(p, facet.by="region", scales="free_y")
#ggsave(path="figures", filename="boxplots_smoking_amygdala.png", width=20, height=20)
```

```{r figuresmoking02, fig.cap="Amygdala nuclei (+ whole amygdala) and separate study groups: Boxplots for substructure measures of acAN-T1 and HC participants (separately) plotted by current smoking (independent-samples Wilcoxon/Mann-Whitney-U test and p-value included), grouped by (sub)regions (raw/unadjusted p-values)", echo=TRUE, message=FALSE, warning=FALSE}
p <- covdata %>% drop_na(smoking) %>% 
  filter(analysis %in% "amygdala") %>%
  ggboxplot(x = "smoking", y = "measure", bxp.errorbar=TRUE, bxp.errorbar.width=0.3, outlier.shape=8, size=1, width=0.3) +
  stat_compare_means(method="wilcox.test", paired=FALSE, label.x.npc=0.3, label.y.npc=0.9) + 
  scale_color_jama() + scale_fill_jama() +
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Smoking") + 
  plot_theme_transparent
facet(p, facet.by=c("region", "point_of_research"), scales="free_y")
#ggsave(path="figures", filename="boxplots_smoking_amygdala02.png", width=20, height=20)
```

#### Drug consumption: Alcohol (categorical variable)  
No clinically relevant alcohol consumption, alcohol abuse or addiction reported in any of our study participants after the exclusion of subjects with a positive history of alcohol abuse (see [here](#abuse)).  

#### Psychiatric comorbidity (categorical variable)  
Relevant psychiatric comorbidities in HC have been excluded (see [here](#diagnoses).  

Potentially relevant accompanying psychiatric disorders in acAN-T1 that have previously been related to/investigated together with amygdala or hippocampal volumes have been selected: MDD, anxiety disorder, OCD, PTSD.  
The above disorders were summarized to one dichotomous variable: Psychiatric comorbidity (>= 1 diagnoses of the above selection) or no comorbidity (no diagnosis).  

```{r tablecomorbidity01, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
covdata %>%
  filter(point_of_research %in% "T1") %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  group_by(point_of_research, psych_comorbidity) %>%
  summarize(n = n()) %>%
  knitr::kable(format = "html", col.names = c("Study groups", "Psychiatric diagnosis", "n(subjects)"), align = "l", caption = "Psychiatric comorbidity") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

```{r figurecomorbidity01, fig.cap="Amygdala nuclei (+ whole amygdala): Boxplots for substructure measures of acAN-T1 participants (exclusively) plotted by psychiatric comorbidity (independent-samples Wilcoxon/Mann-Whitney-U test and p-value included), grouped by (sub)regions (raw/unadjusted p-values)", echo=TRUE, message=FALSE, warning=FALSE}
p <- covdata %>% drop_na(psych_comorbidity) %>%
  filter((analysis %in% "amygdala") & (point_of_research %in% "T1")) %>%
  ggboxplot(x = "psych_comorbidity", y = "measure", bxp.errorbar=TRUE, bxp.errorbar.width=0.3, outlier.shape=8, size=1, width=0.3) +
  stat_compare_means(method="wilcox.test", paired=FALSE, label.x.npc=0.3, label.y.npc=0.9) + 
  scale_color_jama() + scale_fill_jama() +
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Psychiatric comorbidity") + 
  plot_theme_transparent
facet(p, facet.by=c("region", "hemi"), scales="free_y")
#ggsave(path="figures", filename="boxplots_comorbidity_amygdala.png", width=20, height=20)
```

#### Psychoactive medication - current and recent antidepressantsn (categorical variable)  
SSRIs in the past 6 months were taken into account for the investigation of their confounding impact.  

```{r tablemedication01, results="asis", echo=TRUE, message=FALSE, warning=FALSE}
covdata %>%
  filter(point_of_research %in% "T1") %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  group_by(point_of_research, antidepressants) %>%
  summarize(n = n()) %>%
  knitr::kable(format = "html", col.names = c("Study groups", "Antidepressant medication", "n(subjects)"), align = "l", caption = "Antidepressants") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10")
```

```{r figuremedication01, fig.cap="Amygdala nuclei (+ whole amygdala): Boxplots for substructure measures of acAN-T1 participants plotted by antidepressant drug intake (independent-samples Wilcoxon/Mann-Whitney-U test and p-value included), grouped by (sub)regions (raw/unadjusted p-values)", echo=TRUE, message=FALSE, warning=FALSE}
p <- covdata %>% drop_na(antidepressants) %>%
  filter((analysis %in% "amygdala") & (point_of_research %in% "T1")) %>%
  ggboxplot(x = "antidepressants", y = "measure", bxp.errorbar=TRUE, bxp.errorbar.width=0.3, outlier.shape=8, size=1, width=0.3) +
  stat_compare_means(method="wilcox.test", paired=FALSE, label.x.npc=0.3, label.y.npc=0.9) + 
  scale_color_jama() + scale_fill_jama() +
  ylab("(Sub)region volumes in mm^3") + 
  xlab("Antidepressants") + 
  plot_theme_transparent
facet(p, facet.by=c("region", "hemi"), scales="free_y")
#ggsave(path="figures", filename="boxplots_medication_amygdala.png", width=20, height=20)
```

### Reduced SM sample after exclusion of acAN-T1 with comorbidities or SSRIs  
New SM age-matching has to be performed (subset of main article age-matched sample, some acAN - HC pairs have simply been removed due to diagnoses or medication in acAN).  

```{r agematchsm, message=FALSE, warning=FALSE}
# AcAN-T1 to exlude in SM
smexclusion <- covdata %>% 
  filter(point_of_research %in% "T1") %>%
  filter((psych_comorbidity %in% "comorbidity") | (antidepressants %in% "ssri"))

smdata <- anti_join(glmdata, smexclusion, by = "storage_name") # glmdata already contains modifications (e.g. hemi_region and labelling)

# New age-matching
sm.matchdata_age <- smdata %>%
  mutate(point_of_research = dplyr::recode(point_of_research,
                                    "HCW" = 0, # 0 for the control group
                                    "T1" = 1)) %>% # 1 for the acAN patient ("treated") group
  mutate(point_of_research = as.numeric(point_of_research)) %>% 
  distinct(storage_name, .keep_all = TRUE) %>% # address single storage names/subjects for age-matching
  matchit(point_of_research ~ age_at_date_of_research, data = ., method = "optimal", ratio = 1) # matching method: nearest neighbor, ratio: 1 HC to 1 acAN-T1

summary(sm.matchdata_age)

sm.data_age <- match.data(sm.matchdata_age)

covariates <- covdata %>% # join with clinical variables (were not part of age-matching)
  dplyr::select(storage_name, iq, hand_preference, smoking, psych_comorbidity, antidepressants) %>%
  distinct(storage_name, .keep_all=TRUE)

sm.m.data_age <- smdata %>% semi_join(sm.data_age, by="storage_name") %>%
  left_join(covariates, by="storage_name") %>%
  mutate(point_of_research = fct_relevel(point_of_research, c("T1", "HCW")))
```

### SM GLM model adjusted for further potential confounders  
The above plots demonstrate that further possibly confounding variables such as handedness and smoking (in acAN and HC) as well as psychiatric comorbidity or medication (in acAN) do not have a significant impact on the majority of amygdala (sub)region volumes, neither across all study participants nor within individual study groups. IQ scores, however, seem to affect at least some of the investigated amygdala measures.  
Nonetheless, also in line with previous literature on amygdala and hippocampal substructures and according to scientific evidence for links between amygdala/hippocampus and factors like handedness, drug consumption, IQ, psychiatric disorders and psychoactive medication, a supplementary GLM is performed with adjustment for these factors either by introducing them as a covariate in the model (continuous - IQ; or dichotomous (dummy coding where necessary) - handedness and smoking) or by excluding referring study participants (acAN-T1 with comorbid psychiatric disorders or SSRI intake).  

**Primary aim of SM GLM 2:** Reproduce/confirm our main model findings, i.e. show that our results are consistent even after adjustment for further factors of potential relevance (according to previous studies).  

```{r smdescriptivesamygdala02, results="asis", message=FALSE, warning=FALSE}
sm.descramygdala <- sm.m.data_age %>% 
  group_by(point_of_research, hemi_region, labeller) %>%
  get_summary_stats(measure) %>%
  dplyr::select(hemi_region, labeller, point_of_research, n, mean, sd, min, max)

sm.descramygdala_T1 <- sm.descramygdala %>% filter(point_of_research %in% "T1") %>%
  dplyr::select(-point_of_research)

sm.descramygdala_HC <- sm.descramygdala %>% filter(point_of_research %in% "HCW") %>%
  dplyr::select(-point_of_research)

sm.descramygdala_join <- full_join(sm.descramygdala_T1, sm.descramygdala_HC, by=c("hemi_region", "labeller")) %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group"))

sm.descramygdala_join %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%
  knitr::kable(format = "html", digits=2, col.names = c("Amygdala (sub)regions (volumes in mm^3)", rep(c("n", "Mean", "SD", "Minimum", "Maximum"), 2)), align = "l", caption = "Descriptive statistics of (sub)region volume measures of the amygdala in supplementary study sample (after acAN exclusions and new age-matching)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial",
              font_size="10") %>%
  add_header_above(c("", "acAN-T1 participants"=5, "HC participants"=5)) %>%
  pack_rows(index = table(fct_inorder(sm.descramygdala_join$variables_group)))
```

```{r glmamygdalaclin, results="asis", message=FALSE, warning=FALSE}
sm.ancova.clin <- sm.m.data_age %>%
  filter(region %in% "Whole_amygdala") %>%
  dplyr::select(storage_name, hemi, measure) %>%
  rename(whole_amygdala = measure) %>% # whole amygdala volume must be introduced as a new variable 
  right_join(sm.m.data_age, by=c("storage_name", "hemi")) %>% # left and right whole amygdala volumes are correctly matched
  mutate(point_of_research = relevel(point_of_research, ref="HCW")) %>% # reference group = HC participants
  mutate(whole.sub = ifelse(region %in% "Whole_amygdala", "whole", "subregion")) %>% # GLMs for (1) whole amygdala and for (2) amygdala nuclei are regarded separately (relevant for covariates and p-value adjustment) 
  nest(data = - c(hemi_region, labeller, region, whole.sub)) %>%
  mutate(
    lm = ifelse(whole.sub %in% "whole",
                map(data, ~ lm(measure ~ point_of_research + e_tiv + iq + hand_preference + smoking, data = .x, 
                               na.action = na.omit)),
                map(data, ~ lm(measure ~ point_of_research + whole_amygdala + e_tiv + iq + hand_preference + smoking, 
                               data = .x, na.action = na.omit))),
                #map(data, ~ lm(measure ~ point_of_research + e_tiv + smoking, data = .x, 
                               #na.action = na.omit)), # test individual clinical covariates
                #map(data, ~ lm(measure ~ point_of_research + whole_amygdala + e_tiv + smoking, 
                               #data = .x, na.action = na.omit))), # test individual clinical covariates
    adj.means = map(lm, ~ emmeans(.x, "point_of_research")),
    tidymeans = map(adj.means, tidy),
    anova = map(lm, ~ car::Anova(.x, type="III", test.statistic="F")), # Type III sums of squares (error term, partial SS = every effect is adjusted for all other effects/interactions)
    anova_stats = map(anova, ~ sjstats::anova_stats(.x))) %>% # partial eta squared as effect size (reason: >1 independent variable/covariate)
  unnest(anova_stats) %>%
  group_by(whole.sub, term) %>% # p-value adjustment is not applied within one MLR, but across equal terms of different MLRs (e.g. point_of_research), adjustment separately for whole amygdala vs. amygdala nuclei
  mutate(p.adj = p.adjust(p.value, method="BH")) %>% # adjustment (FDR) for multiple testing (vectorized p.adjust function)
  mutate(p.adj = as.numeric(p.adj)) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  mutate(adj.signif_2 = as.character(asterisk_function_2(p.adj))) %>%
  mutate(p.adj = formatC(p.adj, format="f", digits=2)) %>%
  mutate(p.value = formatC(p.value, format="f", digits=4)) %>%
  #mutate(adj.signif_2 = ifelse(adj.signif_2 %in% "ns", 
                               #paste("ns, p.adj =", p.adj),
                               #adj.signif_2)) %>%
  ungroup() %>%
  #filter(term %in% "point_of_research") %>%
  dplyr::select(region, hemi_region, labeller, tidymeans, term, sumsq, df, statistic, p.value, p.adj, 
                adj.signif, adj.signif_2, partial.etasq) %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group"))

emmeans.clin <- sm.ancova.clin %>%
  dplyr::select(hemi_region, region, labeller, tidymeans) %>%
  distinct(hemi_region, .keep_all=TRUE) %>%
  unnest(tidymeans) %>% # standard errors are equal across groups due to balanced design
  dplyr::select(hemi_region, region, labeller, point_of_research, estimate, std.error)

emmeans.clin_T1 <- emmeans.clin %>% filter(point_of_research %in% "T1") %>%
   dplyr::select(-c(point_of_research, labeller, region))

emmeans.clin_HC <- emmeans.clin %>% filter(point_of_research %in% "HCW") %>%
   dplyr::select(-c(point_of_research, labeller, region))

sm.ancova.clin %>%
  dplyr::select(-c(region, hemi_region, tidymeans, variables_group, adj.signif_2)) %>%
  knitr::kable(format = "html", digits=3, col.names = c("Analysis of interest", "ANCOVA (GLM)", "Type III SS", "Degrees of freedom", "F statistic", "p-value", "FDR(BH)-adjusted p-value", "Adjusted significance", "Effect size statistics (partial eta squared)"), align = "l", caption = "ANCOVAs (GLMs) for left and right hemisphere whole amygdala volumes (adjusted for eTIV) and amygdala nuclei volumes (adjusted for whole amygdala and eTIV) in the supplementary acAN-T1 (comorbidity or medication excluded) vs. age-matched HC sample, additionally adjusted for IQ, handedness and current smoking") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  pack_rows(index = table(fct_inorder(sm.ancova.clin$variables_group)))
``` 

```{r glmamygdalaclinjoin, results="asis", message=FALSE, warning=FALSE}
sm.ancova.clin_join <- sm.ancova.clin %>%
  filter(term %in% "point_of_research") %>%
  mutate(is.signif.clin = ifelse(p.adj < 0.05,
                            "(+)", "(-)")) %>%
  mutate(term = dplyr::recode(term,
                       "point_of_research" = "AcAN-T1 vs. HC")) %>%
  dplyr::select(-region)

sm.descramygdala_join %>%
  dplyr::select(-c(min.x, max.x, min.y, max.y)) %>%
  left_join(sm.ancova.clin_join, by=c("hemi_region", "labeller", "variables_group")) %>%
  left_join(emmeans.clin_T1, by="hemi_region") %>%
  left_join(emmeans.clin_HC, by="hemi_region") %>%
  mutate(emm.compare = ifelse(estimate.x > estimate.y,
         "acAN-T1 > HC", "acAN-T1 < HC")) %>%
  mutate(emm.compare = ifelse(is.signif.clin == "(+)",
                              emm.compare, " ")) %>%
  left_join(compare.main, by="hemi_region") %>%
  dplyr::select(-c(hemi_region, tidymeans, variables_group, is.signif.clin, adj.signif_2)) %>%
  knitr::kable(format = "html", digits=2, col.names = c("Analysis of interest", rep(c("n", "Mean (raw)", "SD (raw)"),2), "Study groups", "Type III SS", "Df", "F", "p", "FDR(BH)-adj. p", "Adj. signif.", "Partial eta squared", rep(c("EMM", "SE"),2), "EMMs acAN-T1 vs. HC", "Adj. signif. in main GLM"), align = "l", caption = "SM 2 - ANCOVAs for left and right hemisphere whole amygdala volumes (adjusted for eTIV) and amygdala nuclei volumes (adjusted for whole amygdala and eTIV) in the supplementary acAN-T1 (comorbidity or medication excluded) vs. age-matched HC sample, additionally adjusted for IQ, handedness and current smoking, including effect size statistics and covariate-adjusted means (EMMs)") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c("", "acAN-T1 participants"=3, "HC participants"=3, "ANCOVA (GLM)"=8, "Adj. means acAN-T1"=2, "Adj. means HC"=2, "Comparison of model estimates"=1, "Comparison to main GLM"=1), align="l") %>% 
  pack_rows(index = table(fct_inorder(sm.ancova.clin_join$variables_group))) #%>%
  #save_kable("tables/clinglm.png", zoom=8)
``` 

```{r glmamygdalaeffects04, results="asis", message=FALSE, warning=FALSE}
sm.ancova.clin %>%
  filter(term %in% "point_of_research") %>%
  filter(p.adj < 0.05) %>%
  unite("effectsize", c(labeller, partial.etasq), sep = ", ", remove = FALSE, na.rm = FALSE) %>%
  summarize(effects = paste(effectsize, collapse="; ")) %>%
  knitr::kable(format = "html", digits=2, col.names = c("GLM effect size statistics (clinical variables, only significant nuclei)"), align = "l") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") 
```

```{r figurebarplot04, fig.cap="Barplots for SM GLM (clinical variables)", echo=TRUE, message=FALSE, warning=FALSE}
bardata04 <- emmeans.clin %>%
  group_by(region) %>% arrange(region, .by_group=TRUE) %>%
  mutate(point_of_research = dplyr::recode(point_of_research,
                                    "T1" = "AN",
                                    "HCW" = "HC")) %>%
  mutate(xlabels = ifelse(region %in% c("Whole_amygdala", "Lateral_nucleus", "Medial_nucleus", "Paralaminar_nucleus"),
                          TRUE, FALSE))

y.position.bar <- emmeans.clin %>% 
  group_by(region) %>%
  arrange(desc(estimate), .by_group=TRUE) %>% # y positions are regulated by maximum volume measure per region
  slice_head(n = 1) %>%
  mutate(ymin = round((0.90*estimate)-5, -1)) %>%
  mutate(ymax = round((1.05*estimate)+5, -1)) %>%
  mutate(y.position = (0.85*(ymax-ymin))+ymin) %>%
  dplyr::select(region, y.position, ymin, ymax) %>%
  ungroup()

plotlist = list()

for (Region in unique(bardata04$region)) {
  
  plotdata <- bardata04 %>% filter(region %in% Region)
  
  pvalues <- sm.ancova.clin %>%
    filter(term %in% "point_of_research") %>%
    filter(region %in% Region) %>%
    rename(point_of_research = term) %>%
    dplyr::select(region, hemi_region, labeller, point_of_research, adj.signif_2, p.adj) %>%
    left_join(y.position.bar, by="region") %>%
    mutate(xmin = 1) %>%
    mutate(xmax = 2) #%>%
    #mutate(textsize = ifelse(p.adj>0.05, 3, 8))
    
  yaxis <- y.position.bar %>%
    filter(region %in% Region)
  
  barplots <- plotdata %>%
    ggplot(aes(x=point_of_research, y=estimate, fill = point_of_research, color = point_of_research)) +
    geom_bar(stat="identity", color=NA, position=position_dodge()) +
    geom_errorbar(aes(ymin=estimate-std.error, ymax=estimate+std.error), width=0.2, size=1.0, color = "BLACK",
                 position=position_dodge(1)) +
    geom_signif(data=pvalues, aes(annotations = adj.signif_2, y_position = y.position, xmin = xmin, xmax = xmax), 
              tip_length = 0.05, textsize=9, vjust = -0.45, color = "BLACK", manual = TRUE) +
    scale_y_continuous(breaks = pretty_breaks(n=3)) +
    coord_cartesian(ylim=c(yaxis$ymin, yaxis$ymax)) +
    scale_fill_jama(alpha=0.8) + scale_color_jama(alpha=0.8) +
    plot_theme_transparent2 + 
    theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
    theme(strip.text.x = element_text(size=20)) +
    guides(fill = FALSE, color = FALSE) +
    facet_wrap(~ labeller, scales="free_x", labeller = label_wrap_gen(width=15))
  
  if(plotdata$xlabels == FALSE) {
   barplots = barplots + 
     theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
   }
  
 plotlist[[Region]] = barplots
 
}

bp.whole04 <- plotlist$Whole_amygdala
bp.nuclei04 <- plotlist[1:9] 

barplotarrange04 <- ggarrange(bp.whole04, 
          ggarrange(plotlist=bp.nuclei04, ncol=3, nrow=3),
          ncol=2, widths=c(1,2)) %>%
  annotate_figure(left = text_grob("Volumes (EMM ± SEM) in mm^3", size=24, rot=90))

barplotarrange04

ggsave(barplotarrange04, path="figures", filename="barplots_amy_glm_clinical02.png", width=25, height=18, dpi=300)
```

*[Link](#smglm2) back to main document.*  


## Compare GLMs regarding significance {#modelcompare} 
```{r glmcompare, results="asis", message=FALSE, warning=FALSE}
compare.clin <- sm.ancova.clin_join %>%
  dplyr::select(hemi_region, is.signif.clin)

ancova_join %>%
  left_join(compare.clin, by="hemi_region") %>%
  left_join(compare.gm, by="hemi_region") %>%
  dplyr::select(labeller, term, p.adj, adj.signif, is.signif.main_label, is.signif.clin, is.signif.gm) %>%
  knitr::kable(format = "html", digits=2, col.names = c("Analysis of interest", "Study groups", "FDR(BH)-adj. p", "Adj. signif.", "Signif. in main GLM, adj. eTIV and whole amygdala (for nuclei)", "Signif. in SM GLM, adj. clinical confounders", "Signif. in SM GLM, adj. subcortical GM volume"), align = "l", caption = "ANCOVAs (GLMs) for left and right hemisphere whole amygdala volumes (adjusted for eTIV) and amygdala nuclei volumes (adjusted for whole amygdala and eTIV) in acAN-T1 vs. age-matched HC, including comparisons to SM models regarding the adjusted significance of group differences in amygdala (sub)regions") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="12") %>%
  add_header_above(c("", "Main GLM: ANCOVAs (eTIV, whole amygdala)"=3, "Model comparisons: Adj. signif. in main and SM GLMs"=3), align="l") %>% 
  pack_rows(index = table(fct_inorder(ancova_join$variables_group))) #%>%
  #save_kable("tables/compareglm.png", zoom=8)
``` 


## Supplememtary correlation analyses  

```{r corsz, results="asis", message=FALSE, warning=FALSE}
sm.cordata01 <- glmdata %>% 
  filter(point_of_research %in% "T1") %>%
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables chosen to fill missing values for clinical variables (that is why key != storage_name)
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure, bmisds_at_date_of_research, 
                minbmi, onset_of_an,
                resultquest_bdi2_total, s.anxiety, t.anxiety, resultquest_scl90r_skagloba, resultquest_edi2_total,
                bas_rewardresponsiveness, bis) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
    mutate(
      cor = map(data, ~ cor.test(.x$measure, .x$value, alternative="two.sided", method="spearman", conf.level=0.95,
                               na.action=na.omit)),
      tidy = map(cor, tidy)) %>% # pairwise exclusion of missing values
  unnest(tidy) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, estimate, p.value, p.adj, adj.signif) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>% # proper formatting for the correlation table output
  unnest(bmisds_at_date_of_research, minbmi, onset_of_an, resultquest_bdi2_total, s.anxiety, t.anxiety, 
         resultquest_scl90r_skagloba, resultquest_edi2_total, bas_rewardresponsiveness, bis)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

sm.cordata01 %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%  
  knitr::kable(format = "html", digits=4, align = "l", col.names=c("Analysis of interest (Volume measures)", rep(c("rho", "p-value", "FDR(BH)-adjusted p-value", "Adjusted significance"), 10)), caption = "Zero-order Spearman correlations between amygdala (sub)region volumes and clinical variables or symptom scores in acAN-T1") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=4, "Amygdala ~ Minimal lifetime BMI"=4, "Amygdala ~ Duration of current AN episode"=4, "Amygdala ~ BDI-II total score"=4, "Amygdala ~ STAI(K) State Anxiety Score"=4, "Amygdala ~ STAI(K) Trait Anxiety Score"=4, "Amygdala ~ SCL-90-R GSI"=4, "Amygdala ~ EDI-2 sum score"=4, "Amygdala ~ BAS score reward responsiveness"=4, "Amygdala ~ BIS (inhibition) score"=4), align="l") %>%
  pack_rows(index = table(fct_inorder(sm.cordata01$variables_group)))
```

```{r corpz, results="asis", message=FALSE, warning=FALSE}
sm.cordata02 <- glmdata %>% 
  filter(point_of_research %in% "T1") %>%
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables chosen to fill missing values for clinical variables (that is why key != storage_name)
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure, bmisds_at_date_of_research, 
                minbmi, onset_of_an,
                resultquest_bdi2_total, s.anxiety, t.anxiety, resultquest_scl90r_skagloba, resultquest_edi2_total,
                bas_rewardresponsiveness, bis) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
    mutate(
      cor = map(data, ~ cor.test(.x$measure, .x$value, alternative="two.sided", method="pearson", conf.level=0.95,
                               na.action=na.omit)),
      tidy = map(cor, tidy)) %>% # pairwise exclusion of missing values
  unnest(tidy) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, estimate, p.value, p.adj, adj.signif) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>% # proper formatting for the correlation table output
  unnest(bmisds_at_date_of_research, minbmi, onset_of_an, resultquest_bdi2_total, s.anxiety, t.anxiety, 
         resultquest_scl90r_skagloba, resultquest_edi2_total, bas_rewardresponsiveness, bis)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

sm.cordata02 %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%  
  knitr::kable(format = "html", digits=4, align = "l", col.names=c("Analysis of interest (Volume measures)", rep(c("r", "p-value", "FDR(BH)-adjusted p-value", "Adjusted significance"), 10)), caption = "Zero-order Pearson's product-moment correlations between amygdala (sub)region volumes and clinical variables or symptom scores in acAN-T1") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI-SDS"=4, "Amygdala ~ Minimal lifetime BMI"=4, "Amygdala ~ Duration of current AN episode"=4, "Amygdala ~ BDI-II total score"=4, "Amygdala ~ STAI(K) State Anxiety Score"=4, "Amygdala ~ STAI(K) Trait Anxiety Score"=4, "Amygdala ~ SCL-90-R GSI"=4, "Amygdala ~ EDI-2 sum score"=4, "Amygdala ~ BAS score reward responsiveness"=4, "Amygdala ~ BIS (inhibition) score"=4), align="l") %>%
  pack_rows(index = table(fct_inorder(sm.cordata02$variables_group)))
```

**Note regarding BMI or BMI-SDS in partial correlations:** Decide between correlations of amygdala volumes with BMI (adjustment for age and eTIV necessary which is in line with all other partial correlations) or BMI-SDS (already age- (+sex)-adjusted). See code formatted as text in the code chunk below.  

```{r corpp, results="asis", message=FALSE, warning=FALSE}
sm.cordata03 <- glmdata %>% 
  filter(point_of_research %in% "T1") %>%
  left_join(stai, by=c("participant_id", "point_of_research")) %>% # key variables chosen to fill missing values for clinical variables (that is why key != storage_name)
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure, bmi_at_date_of_research, 
                minbmi, onset_of_an,
                resultquest_bdi2_total, s.anxiety, t.anxiety, resultquest_scl90r_skagloba, resultquest_edi2_total,
                bas_rewardresponsiveness, bis) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
    mutate(
      pcordata = map(data, ~ drop_na(.x)),
      pcor = map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x[, c("age_at_date_of_research", "e_tiv")], 
                                     method="pearson"))) %>%
  unnest(pcor) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, estimate, p.value, p.adj, adj.signif) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>% # proper formatting for the correlation table output
  unnest(bmi_at_date_of_research, minbmi, onset_of_an, resultquest_bdi2_total, s.anxiety, t.anxiety, 
         resultquest_scl90r_skagloba, resultquest_edi2_total, bas_rewardresponsiveness, bis)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

sm.cordata03 %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%  
  knitr::kable(format = "html", digits=4, align = "l", col.names=c("Analysis of interest (Volume measures)", rep(c("r", "p-value", "FDR(BH)-adjusted p-value", "Adjusted significance"), 10)), caption = "Parametric (Pearson) partial correlations between amygdala (sub)region volumes and clinical variables or symptom scores in acAN-T1, adjusted for participant age and eTIV") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI"=4, "Amygdala ~ Minimal lifetime BMI"=4, "Amygdala ~ Duration of current AN episode"=4, "Amygdala ~ BDI-II total score"=4, "Amygdala ~ STAI(K) State Anxiety Score"=4, "Amygdala ~ STAI(K) Trait Anxiety Score"=4, "Amygdala ~ SCL-90-R GSI"=4, "Amygdala ~ EDI-2 sum score"=4, "Amygdala ~ BAS score reward responsiveness"=4, "Amygdala ~ BIS (inhibition) score"=4), align="l") %>%
  pack_rows(index = table(fct_inorder(sm.cordata03$variables_group)))

# Partial correlations if BMI-SDS is chosen instead of BMI
#nest(-c(hemi_region, demo_variable)) %>%
  #mutate(pcordata = map(data, ~ drop_na(.x))) %>%
  #mutate(pcor = ifelse(demo_variable == "bmisds_at_date_of_research", 
         #map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x$e_tiv, 
                                     #method="spearman")), # if BMI-SDS: covariate only eTIV (BMI-SDS is already age-adjusted)
         #map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x[, c("age_at_date_of_research", "e_tiv")], 
                                     #method="spearman")))) %>% # if != BMI-SDS: covariates age + eTIV
  #unnest(pcor)
```

```{r corhc, results="asis", message=FALSE, warning=FALSE}
cordata.hc <- glmdata %>% 
  filter(point_of_research %in% "HCW") %>%
  left_join(stai, by=c("participant_id", "point_of_research")) %>%
  left_join(bisbas, by=c("participant_id", "point_of_research")) %>%
  left_join(redcap_analysis, by=c("participant_id", "point_of_research")) %>% 
  dplyr::select(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure, bmi_at_date_of_research, minbmi,
                resultquest_bdi2_total, s.anxiety, t.anxiety, resultquest_scl90r_skagloba, resultquest_edi2_total,
                bas_rewardresponsiveness, bis) %>%
  pivot_longer(-c(storage_name, hemi_region, labeller, age_at_date_of_research, e_tiv, measure), 
               names_to = "demo_variable", values_to = "value") %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
    mutate(
    pcordata = map(data, ~ drop_na(.x)),
    pcor = map(pcordata, ~ pcor.test(x = .x$measure, y = .x$value, z = .x[, c("age_at_date_of_research", "e_tiv")], 
                                     method="spearman"))) %>%
  unnest(pcor) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  dplyr::select(hemi_region, labeller, demo_variable, estimate, p.value, p.adj, adj.signif) %>%
  nest(-c(hemi_region, labeller, demo_variable)) %>%
  group_by(hemi_region) %>%
  pivot_wider(names_from = "demo_variable", values_from = "data") %>%
  unnest(bmi_at_date_of_research, minbmi, resultquest_bdi2_total, s.anxiety, t.anxiety, 
         resultquest_scl90r_skagloba, resultquest_edi2_total, bas_rewardresponsiveness, bis)  %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group")) %>%
  ungroup()

cordata.hc %>%
  dplyr::select(-c(hemi_region, variables_group)) %>%  
  knitr::kable(format = "html", digits=4, align = "l", col.names=c("Analysis of interest (Volume measures)", rep(c("rho", "p-value", "FDR(BH)-adjusted p-value", "Adjusted significance"), 9)), caption = "Nonparametric partial correlations between amygdala (sub)region volumes and clinical variables or symptom scores in HC, adjusted for participant age and eTIV") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  add_header_above(c(" ", "Amygdala ~ Current BMI"=4, "Amygdala ~ Minimal lifetime BMI"=4, "Amygdala ~ BDI-II total score"=4, "Amygdala ~ STAI(K) State Anxiety Score"=4, "Amygdala ~ STAI(K) Trait Anxiety Score"=4, "Amygdala ~ SCL-90-R GSI"=4, "Amygdala ~ EDI-2 sum score"=4, "Amygdala ~ BAS score reward responsiveness"=4, "Amygdala ~ BIS (inhibition) score"=4), align="l") %>%
  pack_rows(index = table(fct_inorder(cordata.hc$variables_group)))
```

*[Link](#cor) back to main document.*  


## Scan quality assessments (CNR, SNR) in relation to motion  

```{r demographicssnrcnr, results="asis", message=FALSE, warning=FALSE}
demographics_snrcnr <- demographics_T1 %>%
  filter(variable %in% c("cnr_total", "snr")) %>%
  mutate(variables_group = dplyr::recode(variable, !!!variables_grouper, 
                                       .default = "missing group"))

demographics_snrcnr %>%
  mutate(variable.labelled = labeller.function(variable)) %>%
  dplyr::select(variable.labelled, everything()) %>%
  dplyr::select(-c(variable, variables_group)) %>%
  knitr::kable(format = "html", digits=2, col.names = c("Demographic or clinical variable", rep(c("n", "Mean", "SD", "Minimum", "Maximum"), 2)), align = "l", caption = "Descriptive statistics of CNR and SNR in acAN-T1 vs. HC participants") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial",
              font_size="10") %>%
  add_header_above(c("", "acAN-T1 participants"=5, "HC participants"=5)) %>%
  pack_rows(index = table(fct_inorder(demographics_snrcnr$variables_group)))
```

```{r ttestssnrcnr, results="asis", message=FALSE, warning=FALSE}
t.testdatatable_snrcnr <- t.testdatatable %>%
 filter(variable %in% c("cnr_total", "snr")) %>%
  mutate(p.value = formatC(p.value, format="f")) %>%
  mutate(variables_group = dplyr::recode(variable, !!!variables_grouper, 
                                       .default = "missing group"))

t.testdatatable_snrcnr %>%
  mutate(variables.labelled = labeller.function(variable)) %>%
  dplyr::select(variables.labelled, everything()) %>%
  dplyr::select(-c(variable, variables_group)) %>%
  knitr::kable(format = "html", digits=4, col.names = c("Demographic or clinical variable", "Test method (unequal variances)", "t statistic", "p-value (raw/unadjusted)", "Unadjusted significance"), align = "l", caption = "MRI quality parameters: independent-samples t-test statistics for group differences between acAN-T1 and HC participants") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  pack_rows(index = table(fct_inorder(t.testdatatable_snrcnr$variables_group)))
```

### Supplementary GLM {#smglmsnr}  
**... predicting group differences in amygdala (sub)region volumes, additionally adjusted for image quality measure**  
*Background:* FreeSufer recon-all pipeline does not perform motion correction if there is only 1 T1 input scan. Despite being global indicators of image quality, both CNR and SNR were also shown to be related to participant motion in the MRI scanner which is especially relevant for the investigation of small brain structures (even though structural MRI is less vulnerable to motion artifacts) (Backhausen et al., 2016; Havsteen et al., 2017). We found that CNR and SNR were significantly different between acAN-T1 (higher CNR or SNR, higher image quality => less motion is suspected?) and HC (lower CNR or SNR) (see Table \@ref(tab:ttests01)). Further, CNR and SNR are significantly correlated with amygdala substructure measures in acAN-T1 patients (see Figures \@ref(fig:figurecnr) and \@ref(fig:figurecnr)). In addition, CNR and SNR are significantly correlated with participant motion parameters in acAN-T1 patients (obtained from resting state) (see Figures \@ref(fig:figurecnrmotion) and \@ref(fig:figuresnrmotion)).  
**Background to SNR:** SNR (signal-to-noise ratio, obtained from FreeSurfer recon-all output (stats/wmsnr.e3.dat)) = unspecific image quality parameter influenced by many factors (e.g. MRI system/process), but also related to participant motion/movements in the MRI scanner ("motion correction").  
Havsteen et al., 2017: motion artifacts reduce image quality of structural MRI images (especially when investigating small brain structures) and contribute to higher noise in relation to the MRI signal (=> lower SNR).  


#### Is there a significant relationship between SNR or CNR and amygdala (nuclei) volumes?  
**Answer:** Yes, there is, especially for acAN-T1 participants (inverse relationship).  

```{r figurecnr, fig.cap="Amygdala nuclei (+ whole amygdala): Scatter plots of substructure measures plotted by CNR", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=cnr_total,  y=measure, group=point_of_research, color=point_of_research)) +
  geom_point(aes(x=cnr_total, y=measure, group=point_of_research, color=point_of_research), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + 
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) + 
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3 (from both hemispheres)") + 
  xlab("CNR") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scattercnr.png", width=20, height=20)
```

```{r figuresnr, fig.cap="Amygdala nuclei (+ whole amygdala): Scatter plots of substructure measures plotted by SNR", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>% filter(analysis %in% "amygdala") %>%
  ggplot(aes(x=snr,  y=measure, group=point_of_research, color=point_of_research)) +
  geom_point(aes(x=snr, y=measure, group=point_of_research, color=point_of_research), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + 
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) + 
  scale_color_jama() + scale_fill_jama() + 
  ylab("(Sub)region volumes in mm^3 (from both hemispheres)") + 
  xlab("SNR") + 
  plot_theme_transparent +
  facet_wrap(~ region, scales="free")
#ggsave(path="figures", filename="scattersnr.png", width=20, height=20)
```

#### Is there a significant relationship between SNR or CNR and participant motion?  
... motion parameters obtained from resting state, in a subset of acAN-T1 and HC participants...  

**Answer:** Yes, there is a significant negative correlation between CNR or SNR and participant motion in acAN-T1 participants. Higher participant motion in the scanner is related to lower image quality.  

```{r figurecnrmotion, fig.cap="Scatter plots displaying the relationship between CNR and participant motion (resting state)", echo=TRUE, message=FALSE, warning=FALSE}
motion <- read_csv("data/motion_resting_state.csv")

m.data_age %>%
  dplyr::select(storage_name, point_of_research, cnr_total, snr) %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  inner_join(motion, by="storage_name") %>% # select only matching subjects in both data.frames for plotting 
  ggplot(aes(x=cnr_total,  y=motion, group=point_of_research, color=point_of_research)) +
  geom_point(aes(x=cnr_total, y=motion, group=point_of_research, color=point_of_research), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + 
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) + 
  scale_color_jama() + scale_fill_jama() + 
  ylab("Participant motion") + 
  xlab("CNR") + 
  plot_theme_transparent
#ggsave(path="figures", filename="scattercnrmotion.png", width=8, height=8)
```

```{r figuresnrmotion, fig.cap="Scatter plots displaying the relationship between SNR and participant motion (resting state)", echo=TRUE, message=FALSE, warning=FALSE}
m.data_age %>%
  dplyr::select(storage_name, point_of_research, cnr_total, snr) %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  inner_join(motion, by="storage_name") %>% # select only matching subjects in both data.frames for plotting 
  ggplot(aes(x=snr,  y=motion, group=point_of_research, color=point_of_research)) +
  geom_point(aes(x=snr, y=motion, group=point_of_research, color=point_of_research), size=1, alpha=0.7) +
  scale_shape_manual(values=c(4, 16)) + 
  geom_smooth(method=lm, aes(group=point_of_research, color=point_of_research, fill=point_of_research)) + 
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep="~~~~")), label.y.npc = 1) + 
  scale_color_jama() + scale_fill_jama() + 
  ylab("Participant motion") + 
  xlab("SNR") + 
  plot_theme_transparent
#ggsave(path="figures", filename="scattersnrmotion.png", width=8, height=8)
```

```{r restingstatemotion, echo=TRUE, results="asis", message=FALSE, warning=FALSE}
m.data_age %>%
  dplyr::select(storage_name, point_of_research, cnr_total, snr) %>%
  distinct(storage_name, .keep_all=TRUE) %>%
  inner_join(motion, by="storage_name") %>%
  rstatix::t_test(motion ~ point_of_research, p.adjust.method = "none", paired = FALSE, 
                  var.equal = FALSE, alternative = "two.sided", detailed = FALSE) %>%
  knitr::kable(format = "html", digits=4, col.names = c("Resting state motion", "Group 1: AcAN-T1", "Group 2: HC", "n(acAN)", "n(HC)", "t statistic", "df (Welch approximation for unequal variances)", "p-value"), align = "l", caption = "Motion in acAN-T1 vs. HC participants") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial",
              font_size="10") %>%
  add_header_above(c("AcAN-T1 seem to move significantly less (negative t statistic) than HC in the MRI scanner (during resting state)."=8), align="l") 
```

**Conclusion:** Due to significant differences between acAN-T1 and HC on the assessed image quality parameters (see Table \@ref(tab:ttests01)) as well as significant relationships of CNR and SNR with both amygdala volumes and motion, we decided to introduce one image quality parameter as an additional covariate (besides age-matching and eTIV) in our GLM.  

*Potential problems/questions:* SNR was chosen in the current version (CNR differs greatly between study groups => risk of multicollinearity, since CNR is not independent of predictor point_of_research; in the GLM adjusted for CNR, significant group differences in amygdala volumes do not persist => motion might - indeed - mediate the observed group differences OR loss of significance is just a result of (multi)collinearity ...).  
How important/relevant are motion artifacts **really** in sMRI?  
How do we want to control for these potentially relevant motion artifacts? (=> SNR or CNR?, Mean centering of SNR or CNR in order to reduce multicollinearity?, Dividing volume measures by SNR or CNR?, SM Matching by SNR or CNR?, Mediation analysis?) Previous studies on brain substructures (sMRI) have not taken any advanced motion correction into account (in fact, they reported that there is motion correction involved in the FreeSurfer recon-all pipeline which is NOT true if there is only 1 T1 input scan ...)  

### SM model implementation  
SNR is included as a covariate in its original form (not centered or transformed, no quotients).  

```{r glmamygdalasnr, results="asis", message=FALSE, warning=FALSE}
sm.ancovasnr <- glmdata %>%
  mutate(point_of_research = relevel(point_of_research, ref="HCW")) %>% # reference group = HC participants
  nest(data = - c(hemi_region, labeller, region)) %>%
  mutate(
    lm = map(data, ~ lm(measure ~ point_of_research + e_tiv + snr, data = .x, na.action = na.omit)),
    #lm = map(data, ~ lm(measure ~ point_of_research + e_tiv + cnr_total, data = .x, na.action = na.omit)),
    anova = map(lm, ~ car::Anova(.x, type="III", test.statistic="F")),
    anova_stats = map(anova, ~ sjstats::anova_stats(.x))) %>%
  unnest(anova_stats) %>%
  mutate(whole.sub = ifelse(region %in% "Whole_amygdala", "whole", "subregion")) %>%
  group_by(whole.sub, term) %>%
  mutate(p.adj = p.adjust(p.value, method="BH")) %>%
  mutate(p.adj = as.numeric(p.adj)) %>%
  mutate(adj.signif = as.character(asterisk_function(p.adj))) %>%
  mutate(p.adj = formatC(p.adj, format="f", digits=4)) %>%
  mutate(p.value = formatC(p.value, format="f", digits=4)) %>%
  ungroup() %>%
  dplyr::select(region, hemi_region, labeller, term, sumsq, df, statistic, p.value, p.adj, 
                adj.signif, partial.etasq) %>%
  arrange(hemi_region) %>%
  mutate(hemi_region = as.character(hemi_region)) %>%
  mutate(variables_group = dplyr::recode(hemi_region, !!!variables_grouper.glm, .default = "missing group"))

sm.ancovasnr %>%
  dplyr::select(-c(region, hemi_region, variables_group)) %>%
  knitr::kable(format = "html", digits=3, col.names = c("Analysis of interest", "ANCOVA (GLM)", "Type III SS", "Degrees of freedom", "F statistic", "p-value", "FDR(BH)-adjusted p-value", "Adjusted significance", "Effect size statistics (partial eta squared)"), align = "l", caption = "ANCOVAs (GLMs) of left and right hemisphere amygdala (nuclei) volumes for age-matched acAN-T1 vs. HC, adjusted for eTIV and SNR") %>%
  kable_paper(bootstrap_options="striped", full_width=FALSE, position="left", html_font="Arial", font_size="10") %>%
  pack_rows(index = table(fct_inorder(sm.ancovasnr$variables_group)))
``` 

**Conclusion:** We were able to reproduce the majority of our main model findings when additionally controlling for SNR. Thus, the differences in amygdala (sub)region volumes between age-matched study groups do not seem to be accounted for by differing scan quality, comprising - among others - motion artifacts.  

### Exploratory propensity matching by age and SNR (not used) {#snrmatching}  
!!! Not used in any of our analyses !!!  
*Background:* SNR (signal-to-noise ratio) represents MRI scan quality and has also been shown to be related to participant motion during the scan (Havsteen et al., 2017)).  
Compared to plain age-matching (regarding the mean differences on age and SNR between case and control groups as well as the percent balance improvement), this supplementary matching is less suited, and, thus, was not preferred over "simple" age-matching.  

```{r agematch03, message=FALSE, warning=FALSE}
matchdata_age.snr <- analysisdata %>%
  mutate(point_of_research = dplyr::recode(point_of_research,
                                    "HCW" = 0, # 0 for the control group
                                    "T1" = 1)) %>% # 1 for the patient ("treated") group
  mutate(point_of_research = as.numeric(point_of_research)) %>% 
  distinct(storage_name, .keep_all = TRUE) %>% # address single storage names/subjects for age-matching
  matchit(point_of_research ~ age_at_date_of_research + snr, data = ., method = "optimal", ratio = 1)

summary(matchdata_age.snr)

data_age.snr <- match.data(matchdata_age.snr)

m.data_age.snr <- analysisdata %>% semi_join(data_age.snr, by="storage_name") # return all rows from x with a match in y without adding additional columns 
```
